using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using MobileAPI_V2.Filter;
using MobileAPI_V2.Model;
using MobileAPI_V2.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Threading.Tasks;
using Razorpay.Api;
using System.Net;
using Microsoft.AspNetCore.Cors;
using System.Xml;
using Newtonsoft.Json;
using Microsoft.AspNetCore.Hosting;
using System.IO;
using System.Runtime.Serialization.Json;
using System.Globalization;
using System.Threading;
using System.Text;
using System.Web;
using Newtonsoft.Json.Linq;
using OfficeOpenXml.FormulaParsing.Excel.Functions.Text;
using System.IdentityModel.Tokens.Jwt;
using Microsoft.AspNetCore.Routing;
using OfficeOpenXml.FormulaParsing.Excel.Functions.Information;
using System.Security.Claims;
//using OfficeOpenXml.FormulaParsing.Excel.Functions.Math;
using OfficeOpenXml.FormulaParsing.Excel.Functions;
using System.Reflection;
using System.Security.Permissions;
using static System.Net.WebRequestMethods;
using System.Diagnostics;
using static MobileAPI_V2.Model.FBH_Repository;
using static System.Net.Mime.MediaTypeNames;
//using OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime;
using OfficeOpenXml.FormulaParsing.Excel.Functions;
using MobileAPI_V2.Model.Travel;
using Microsoft.AspNetCore.Authorization;
using System.Data;
//using SelectPdf;
//using PdfDocument = SelectPdf.PdfDocument;
using DinkToPdf;
using DinkToPdf.Contracts;
using MobileAPI_V2.Model.Travel.Hotel;
using QRCoder;
using System.Drawing;
using ZXing;
using ZXing.Common;
using OfficeOpenXml.Style;
using System.Drawing.Printing;
using System.Text.RegularExpressions;
using MobileAPI_V2.Model.BillPayment;
using static MobileAPI_V2.Model.BillPayment.BillPaymentCommon;
using System.Xml.Linq;
using Microsoft.Extensions.Configuration;
using Microsoft.AspNetCore.DataProtection.KeyManagement;
using MobileAPI_V2.Model.Master;
//using iTextSharp.text.pdf.qrcode;


namespace MobileAPI_V2.Controllers
{

    // [ServiceFilter(typeof(Tenant))]
    [ServiceFilter(typeof(ApiLog))]
    [Route("api/[controller]")]
    [ApiController]
    public class AuthController : ControllerBase
    {
        private readonly LogWrite _logwrite;
        string AESKEY = new ConfigurationBuilder().AddJsonFile($"appsettings.json").Build().GetSection("AESKEY").Value;
        private Microsoft.AspNetCore.Hosting.IHostingEnvironment _env;
        private readonly IDataRepository _dataRepository;
        private readonly IConfiguration _configuration;
        public string razorpayupikey = string.Empty;
        public string razorpayupisecret = string.Empty;
        public string razorpaydebitcardkey = string.Empty;
        public string razorpaydebitcardsecret = string.Empty;
        public string razorpaycreditcardkey = string.Empty;
        public string razorpaycreditcardsecret = string.Empty;
        public string VenusRechargeURL = string.Empty;
        public string INSURANCEURLNEW = string.Empty;
        public string INSURANCEURLCOMPAYCODE = string.Empty;
        public string INSURANCEURLENCRYPTIONKEY = string.Empty;
        public string INSURANCEURL = string.Empty;
        string razorpaycontactsUrl = string.Empty;
        string razorpayfundAccountUrl = string.Empty;
        string razorpaypayoutUrl = string.Empty;
        string VOUCHERURL = string.Empty;
        string ToPayBAseURL = "";
        RechargeConn recConn = new RechargeConn();
        CommonJsonPostRequest CommonJsonPostRequestobj;
        PineCommonRequest PineCommonRequestobj;
        ApiRequest request;
        JWTToken objJWT;
        SendSMS objsms;
        OAuthorization oAuthorization;
        string PineCardbaseUrl = string.Empty;
        string PINECARDTOKENURL = string.Empty;
        string WorkingKey = string.Empty;
        string CheckSumUrl = string.Empty;
        string PINEVIRTUALCARDURL = string.Empty;
        string PINEAddFundURL = string.Empty;
        string PINECARDBALANCEURL = string.Empty;
        string PINECARDTransactionDetailURL = string.Empty;
        string PINEPHYSICALCARDURL = string.Empty;
        string PINEPHYSICALCARDReIssueURL = string.Empty;
        string PINECARDOrderDetailURL = string.Empty;
        string BILLFETCHURL = string.Empty;
        string VENUSPAYBILLURL = string.Empty;
        string EASYBILLFETCHURL = string.Empty;
        string EASYPAYBILLURL = string.Empty;
        string EASYTransactionStatusURL = string.Empty;
        string FintechRequestTokenUrl = string.Empty;
        string FintechWalletCreationUrl = string.Empty;
        string FintechPartnerID = string.Empty;
        string FintechSecurityKey = string.Empty;
        string FintechAESKEY = string.Empty;
        string FintechWalletCreationOTPValidateUrl = string.Empty;
        string FintechWalletCreationResendOTPUrl = string.Empty;
        string FintechGetWalletInfoUrl = string.Empty;
        string FintechMobileValidationUrl = string.Empty;
        string FintechWalletRechargeUrl = string.Empty;
        string FintechCHECKWALLETBALANCEUrl = string.Empty;
        string FintechRechargeRequeryUrl = string.Empty;
        string FintechMiniStatementUrl = string.Empty;
        string FintechWallettoWalletTransferUrl = string.Empty;
        string FintechGenerateTransactionOTPUrl = string.Empty;
        string FintechGetWalletBlockunblockOTPUrl = string.Empty;
        string FintechDebitTransactionRequeryUrl = string.Empty;
        string FintechWalletBlockunblockOTPValidationUrl = string.Empty;
        string FintechWalletTransactionUrl = string.Empty;
        string FintechWalletTransactionPINUrl = string.Empty;
        string FintechTransactionReversalUrl = string.Empty;
        string FintechActivateRupayCardOTPGenUrl = string.Empty;
        string FintechActivateRupayCardResendOTPGenUrl = string.Empty;
        string FintechActivateRupayCardUrl = string.Empty;
        string FintechCardReplacementOTPUrl = string.Empty;
        string FintechCardReplacementResendOTPUrl = string.Empty;
        string FintechCardReplacementUrl = string.Empty;

        IRCTCService iRCTCService;

        string StationCodeURL = string.Empty;
        string TrainbetweenStationsURL = string.Empty;
        string AvailabilityFareEnquiryURL = string.Empty;
        string IRCTCUserName = string.Empty;
        string IRCTCPassword = string.Empty;
        string PNREnquiryURL = string.Empty;
        string TicketCancellationURL = string.Empty;
        string TicketRefundDetailURL = string.Empty;
        string TicketBookingDetailURL = string.Empty;
        string HistorySearchByTransactionIDURL = string.Empty;
        string ClusterStationSearchEnquiryURL = string.Empty;
        string TrainScheduleEnquiryURL = string.Empty;
        string TrainBoardingStationEnquiryURL = string.Empty;
        string RDSAccountDetailsURL = string.Empty;
        string NewsAndAlertServiceURL = string.Empty;
        string BoardingPointChangeURL = string.Empty;
        string VikalpTrainListURL = string.Empty;
        string OptVikalpURL = string.Empty;
        string IRCTCRegisterURL = string.Empty;
        string tatktservices = string.Empty;
        string IRCTCPINDetailsURL = string.Empty;
        string CheckUserAvailabilityURL = string.Empty;
        string CountryListURL = string.Empty;
        string UserStatusURL = string.Empty;
        string GetSMSeMailOTPURL = string.Empty;
        string VerifySMSeMailOTPURL = string.Empty;
        string IRCTCForgotDetailsURL = string.Empty;
        Fintech fintech;
        string WalletCreationV2URL = string.Empty;
        string WalletCreationOTPV2URL = string.Empty;
        string WalletBalanceV2URL = string.Empty;
        string CardInfoV2URL = string.Empty;
        string WalletSetPINV2URL = string.Empty;
        string WalletPreferencesV2URL = string.Empty;
        string WalletSetPreferencesV2URL = string.Empty;
        string WalletLimitV2URL = string.Empty;
        string WalletTopupV2URL = string.Empty;
        string WalletDebitV2URL = string.Empty;
        string WalletBlockUnblockV2URL = string.Empty;
        string WallettransactionsV2URL = string.Empty;
        string WallettransactionStatusV2URL = string.Empty;
        string WalletInfoV2URL = string.Empty;
        string WalletDashboardV2URL = string.Empty;
        string GetCardData = string.Empty;
        string SetPinWallet = string.Empty;
        string ReplaceCardurl = string.Empty;
        string UpdateMobileURL = string.Empty;
        string WalletPinRestOTPURL = string.Empty;
        string WalletRestOTPURL = string.Empty;
        string CreateKYCURL = string.Empty;
        string CardViewDetailURL = string.Empty;
        string AddedOnCardURL = string.Empty;
        string Wallet2WalletTrans = string.Empty;
        private readonly EmailTemplateService _emailTemplateService;
        private readonly IDataRepositoryEcomm _dataRepositoryEcomm;

        public AuthController(Microsoft.AspNetCore.Hosting.IHostingEnvironment env, IDataRepository dataRepository, IConfiguration configuration, EmailTemplateService emailTemplateService, IDataRepositoryEcomm dataRepositoryEcomm, LogWrite logwrite)
        {
            _logwrite = logwrite;
            _env = env;
            _dataRepository = dataRepository;
            _configuration = configuration;
            oAuthorization = new OAuthorization(_configuration);
            objJWT = new JWTToken(_dataRepository);
            objsms = new SendSMS(_configuration, _dataRepository);
            CommonJsonPostRequestobj = new CommonJsonPostRequest(_configuration);
            PineCommonRequestobj = new PineCommonRequest(_configuration);
            razorpayupikey = _configuration["razorpayupikey"];
            razorpayupisecret = _configuration["razorpayupisecret"];
            razorpaydebitcardkey = _configuration["razorpaydebitcardkey"];
            razorpaydebitcardsecret = _configuration["razorpaydebitcardsecret"];
            razorpaycreditcardkey = _configuration["razorpaycreditcardkey"];
            razorpaycreditcardsecret = _configuration["razorpaycreditcardsecret"];
            VenusRechargeURL = _configuration["VenusRecharge"];
            INSURANCEURLNEW = _configuration["INSURANCEURLNEW"];
            INSURANCEURLCOMPAYCODE = _configuration["INSURANCEURLCOMPAYCODE"];
            INSURANCEURLENCRYPTIONKEY = _configuration["INSURANCEURLENCRYPTIONKEY"];
            INSURANCEURL = _configuration["INSURANCEURL"];
            razorpaycontactsUrl = _configuration["razorpaycontactsUrl"];
            razorpayfundAccountUrl = _configuration["razorpayfundAccountUrl"];
            razorpaypayoutUrl = _configuration["razorpaypayoutUrl"];
            request = new ApiRequest(_configuration);
            PineCardbaseUrl = _configuration["PineCardbaseUrl"];
            PINECARDTOKENURL = _configuration["PINECARDTOKENURL"];
            WorkingKey = _configuration["WorkingKey"];
            CheckSumUrl = _configuration["CheckSumUrl"];
            PINEVIRTUALCARDURL = _configuration["PINEVIRTUALCARDURL"];
            PINEAddFundURL = _configuration["PINEAddFundURL"];
            PINECARDBALANCEURL = _configuration["PINECARDBALANCEURL"];
            PINECARDTransactionDetailURL = _configuration["PINECARDTransactionDetailURL"];
            PINEPHYSICALCARDURL = _configuration["PINEPHYSICALCARDURL"];
            PINEPHYSICALCARDReIssueURL = _configuration["PINEPHYSICALCARDReIssueURL"];
            PINECARDOrderDetailURL = _configuration["PINECARDOrderDetailURL"];
            VOUCHERURL = _configuration["VOUCHERURL"];
            BILLFETCHURL = _configuration["BILLFETCHURL"];
            VENUSPAYBILLURL = _configuration["VENUSPAYBILLURL"];
            EASYBILLFETCHURL = _configuration["easyapiBILLFETCHURL"];
            EASYPAYBILLURL = _configuration["easyPAYBILLURL"];
            EASYTransactionStatusURL = _configuration["easyTransactionStatusURL"];

            //////////////////////Wallet

            FintechPartnerID = _configuration["FintechPartnerID"];
            FintechSecurityKey = _configuration["FintechSecurityKey"];
            FintechRequestTokenUrl = _configuration["FintechRequestTokenUrl"];
            FintechWalletCreationUrl = _configuration["FintechWalletCreationUrl"];
            FintechAESKEY = _configuration["FintechAESKEY"];
            FintechWalletCreationOTPValidateUrl = _configuration["FintechWalletCreationOTPValidateUrl"];
            FintechWalletCreationResendOTPUrl = _configuration["FintechWalletCreationResendOTPUrl"];
            FintechGetWalletInfoUrl = _configuration["FintechGetWalletInfoUrl"];
            FintechMobileValidationUrl = _configuration["FintechMobileValidationUrl"];
            FintechWalletRechargeUrl = _configuration["FintechWalletRechargeUrl"];
            FintechCHECKWALLETBALANCEUrl = _configuration["FintechCHECKWALLETBALANCEUrl"];
            FintechRechargeRequeryUrl = _configuration["FintechRechargeRequeryUrl"];
            FintechMiniStatementUrl = _configuration["FintechMiniStatementUrl"];
            FintechWallettoWalletTransferUrl = _configuration["FintechWallettoWalletTransferUrl"];
            FintechGenerateTransactionOTPUrl = _configuration["FintechGenerateTransactionOTPUrl"];
            FintechGetWalletBlockunblockOTPUrl = _configuration["FintechGetWalletBlockunblockOTPUrl"];
            FintechDebitTransactionRequeryUrl = _configuration["FintechDebitTransactionRequeryUrl"];
            FintechWalletBlockunblockOTPValidationUrl = _configuration["FintechWalletBlockunblockOTPValidationUrl"];
            FintechWalletTransactionUrl = _configuration["FintechWalletTransactionUrl"];
            FintechWalletTransactionPINUrl = _configuration["FintechWalletTransactionPINUrl"];
            FintechTransactionReversalUrl = _configuration["FintechTransactionReversalUrl"];
            FintechActivateRupayCardOTPGenUrl = _configuration["FintechActivateRupayCardOTPGenUrl"];
            FintechActivateRupayCardResendOTPGenUrl = _configuration["FintechActivateRupayCardResendOTPGenUrl"];
            FintechActivateRupayCardUrl = _configuration["FintechActivateRupayCardUrl"];
            FintechCardReplacementOTPUrl = _configuration["FintechCardReplacementOTPUrl"];
            FintechCardReplacementResendOTPUrl = _configuration["FintechCardReplacementResendOTPUrl"];
            FintechCardReplacementUrl = _configuration["FintechCardReplacementUrl"];
            //////////////////////// IRCTC 

            iRCTCService = new IRCTCService(_configuration);
            IRCTCUserName = _configuration["IRCTCUserName"];
            IRCTCPassword = _configuration["IRCTCPassword"];
            StationCodeURL = _configuration["StationCodeURL"];
            TrainbetweenStationsURL = _configuration["TrainbetweenStationsURL"];
            AvailabilityFareEnquiryURL = _configuration["AvailabilityFareEnquiryURL"];
            PNREnquiryURL = _configuration["PNREnquiryURL"];
            TicketCancellationURL = _configuration["TicketCancellationURL"];
            TicketRefundDetailURL = _configuration["TicketRefundDetailURL"];
            TicketBookingDetailURL = _configuration["TicketBookingDetailURL"];
            HistorySearchByTransactionIDURL = _configuration["HistorySearchByTransactionIDURL"];
            ClusterStationSearchEnquiryURL = _configuration["ClusterStationSearchEnquiryURL"];
            TrainScheduleEnquiryURL = _configuration["TrainScheduleEnquiryURL"];
            TrainBoardingStationEnquiryURL = _configuration["TrainBoardingStationEnquiryURL"];
            RDSAccountDetailsURL = _configuration["RDSAccountDetailsURL"];
            NewsAndAlertServiceURL = _configuration["NewsAndAlertServiceURL"];
            BoardingPointChangeURL = _configuration["BoardingPointChangeURL"];
            VikalpTrainListURL = _configuration["VikalpTrainListURL"];
            OptVikalpURL = _configuration["OptVikalpURL"];
            IRCTCRegisterURL = _configuration["IRCTRegURL"];
            tatktservices = _configuration["tatktservices"];
            IRCTCPINDetailsURL = _configuration["IRCTCPINDetailsURL"];
            CountryListURL = _configuration["CountryListURL"];
            UserStatusURL = _configuration["UserStatusURL"];
            GetSMSeMailOTPURL = _configuration["GetSMSeMailOTPURL"];
            CheckUserAvailabilityURL = _configuration["CheckUserAvailabilityURL"];
            VerifySMSeMailOTPURL = _configuration["VerifySMSeMailOTPURL"];
            IRCTCForgotDetailsURL = _configuration["IRCTCForgotDetailsURL"];

            //
            fintech = new Fintech(_configuration);
            WalletCreationV2URL = _configuration["WalletCreationV2URL"];
            WalletCreationOTPV2URL = _configuration["WalletCreationOTPV2URL"];
            WalletBalanceV2URL = _configuration["WalletBalanceV2URL"];
            CardInfoV2URL = _configuration["CardInfoV2URL"];
            WalletSetPINV2URL = _configuration["WalletSetPINV2URL"];
            WalletPreferencesV2URL = _configuration["WalletPreferencesV2URL"];
            WalletSetPreferencesV2URL = _configuration["WalletSetPreferencesV2URL"];
            WalletLimitV2URL = _configuration["WalletLimitV2URL"];
            WalletTopupV2URL = _configuration["WalletTopupV2URL"];
            WalletDebitV2URL = _configuration["WalletDebitV2URL"];
            WalletBlockUnblockV2URL = _configuration["WalletBlockUnblockV2URL"];
            WallettransactionsV2URL = _configuration["WallettransactionsV2URL"];
            WallettransactionStatusV2URL = _configuration["WallettransactionStatusV2URL"];
            WalletInfoV2URL = _configuration["WalletInfoV2URL"];
            WalletDashboardV2URL = _configuration["WalletDashboardV2URL"];
            SetPinWallet = _configuration["WalletSetPin"];
            GetCardData = _configuration["GetCardData"];
            ReplaceCardurl = _configuration["ReplaceCard"];
            UpdateMobileURL = _configuration["UpdateMobileURL"];
            WalletPinRestOTPURL = _configuration["WalletPinRestOTPURL"];
            WalletRestOTPURL = _configuration["WalletRestOTPURL"];
            CreateKYCURL = _configuration["CreateKYCURL"];
            CardViewDetailURL = _configuration["CardViewDetailURL"];
            AddedOnCardURL = _configuration["AddedOnCardURL"];
            Wallet2WalletTrans = _configuration["Wallet2WalletTrans"];
            ToPayBAseURL = new ConfigurationBuilder().AddJsonFile($"appsettings.json").Build().GetSection("TopayBaseURL").Value;
            _emailTemplateService = emailTemplateService;
            _dataRepositoryEcomm = dataRepositoryEcomm;
        }


        private readonly Dictionary<string, byte[]> _mimeTypes = new Dictionary<string, byte[]>
        {
            {"image/jpeg", new byte[] {255, 216, 255}},
            {"image/jpg", new byte[] {255, 216, 255}},
            //{"image/pjpeg", new byte[] {255, 216, 255}},
            //{"image/apng", new byte[] {137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82}},
            {"image/png", new byte[] {137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82}},
           // {"image/bmp", new byte[] {66, 77}},
            {"image/gif", new byte[] {71, 73, 70, 56}},
        };

        private bool ValidateMimeType(byte[] file, string contentType)
        {
           
            var imageType = _mimeTypes.SingleOrDefault(x => x.Key.Equals(contentType));

            return file.Take(imageType.Value.Length).SequenceEqual(imageType.Value);
        }
        [HttpGet("GetProfile")]
        public async Task<CommonResponse<LoginResponse>> GetProfile(long memberId)
        {

            CommonResponse<LoginResponse> objUserProfile = new CommonResponse<LoginResponse>();

            try
            {

                var res = await _dataRepository.GetUserProfile(memberId);
                if (res != null)
                {
                    if (res.BankStatus == "2")
                    {
                        var bank = await _dataRepository.bankdetails(memberId);
                        if (!string.IsNullOrEmpty(bank.account_number))
                        {
                            res.bankdetails = bank;
                        }
                        else
                        {
                            res.bankdetails = new Bankdetails_accountResponse();
                        }

                    }
                    else
                    {


                    }
                    objUserProfile.result = res;
                    objUserProfile.response = "success";
                    objUserProfile.message = "success";
                }
                else
                {
                    objUserProfile.response = "error";
                    objUserProfile.message = "error";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objUserProfile.response = "error";
                objUserProfile.message = ex.Message;
            }


            return objUserProfile;
        }

        [HttpPost("ChangePassword")]
        public async Task<Common> ChangePassword(ChangePassword objrequest)
        {
            Common obj = new Common();
            try
            {
                MD5 md5Hash = MD5.Create();
                string OldPassword = Md5Encyption.GetMd5Hash(md5Hash, objrequest.OldPassword);
                string NewPassword = Md5Encyption.GetMd5Hash(md5Hash, objrequest.NewPassword);
                objrequest.OldPassword = OldPassword;
                objrequest.NewPassword = NewPassword;
                var res = await _dataRepository.ChangePassword(objrequest);
                if (res != null && res.flag == 1)
                {
                    obj.response = "success";
                    obj.message = res.msg;
                }
                else
                {
                    obj.response = "error";
                    obj.message = res.msg;
                }


            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                obj.response = "error";
                obj.message = ex.Message;
            }

            return obj;
        }

        [HttpPost("SignOut")]
        public async Task<Common> SignOut(SignOutRequest model)
        {
            Common objresponse = new Common();
            //var Token = Request.Headers["Tenant"].ToString();
            //model.Token = Token;
            try
            {
                var res = await _dataRepository.SignOut(model);
                if (res != null && res.Id == 1)
                {
                    objresponse.response = "Success";
                    objresponse.message = res.msg;
                }
                else
                {
                    objresponse.response = "error";
                    objresponse.message = res.msg;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objresponse.response = "error";
                objresponse.message = ex.Message;

            }

            return objresponse;
        }

        [HttpPost("EditProfile")]
        public async Task<Common> EditProfile(ProfileRequest model)
        {
            Common objres = new Common();

            try
            {
                model.DOB = string.IsNullOrEmpty(model.DOB) ? null : Common.ConvertToSystemDate(model.DOB, "dd/MM/yyyy");
                model.NomineeDOB = string.IsNullOrEmpty(model.NomineeDOB) ? null : Common.ConvertToSystemDate(model.NomineeDOB, "dd/MM/yyyy");
                var res = await _dataRepository.EditProfile(model);
                if (res != null && res.flag == 1)
                {
                    objres.message = res.msg;
                    objres.response = "success";
                }
                else
                {
                    objres.message = res.msg;
                    objres.response = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";
            }

            return objres;
        }

        [HttpPost("CalCulateCommission")]
        public CommonResponse<CommissionCalculation> CalCulateCommission(CommissionCalculationRequest model)
        {
            CommonResponse<CommissionCalculation> objres = new CommonResponse<CommissionCalculation>();

            try
            {
                if (model != null)
                {
                    objres.result = new CommissionCalculation();
                    if (model.CommType.ToLower() == "card")
                    {
                        objres.result.Amount = (model.Number * model.Amount * 0.0091M * 0.75M * 0.08M) / 12;
                    }
                    else
                    {
                        objres.result.Amount = (model.Number * model.Amount * 0.04M * 0.75M * 0.08M) / 12;
                    }
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "All Parameters are required";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpGet("CUGSize")]
        public async Task<CommonResponse<BusinessLevelResult>> CUGSize(long MemberId)
        {
            CommonResponse<BusinessLevelResult> objres = new CommonResponse<BusinessLevelResult>();
            try
            {
                var res = await _dataRepository.BusinessLevel(MemberId);
                if (objres != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("OperatorDetails")]
        public async Task<CommonResponse<operatordetails>> OperatorDetails(string mobilenumber)
        {
            CommonResponse<operatordetails> objres = new CommonResponse<operatordetails>();
            try
            {
                var res = await _dataRepository.OperatorDetails(mobilenumber);
                if (res != null && res.success == true)
                {
                    var url = await _dataRepository.GetOperatorsCode(2, "mobile recharge", res.data.Operator);
                    objres.result = res.data;
                    objres.result.imageurl = url[0].ImageUrl;
                    objres.result.OperatorCode = url[0].OperatorCode;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Please select operator manually";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("RechargePlan")]
        public async Task<CommonResponse<List<RechargePlan>>> RechargePlan(string operator_id, string circle_id)
        {
            CommonResponse<List<RechargePlan>> objres = new CommonResponse<List<RechargePlan>>();
            try
            {
                var res = await _dataRepository.RechargePlan(operator_id, circle_id);
                if (res.data.Count > 0)
                {
                    objres.result = res.data;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("RechargePlanV2")]
        public async Task<CommonResponse<List<MobileRechargePlan>>> RechargePlanV2(string operator_id, string circle_id)
        {
            CommonResponse<List<MobileRechargePlan>> objres = new CommonResponse<List<MobileRechargePlan>>();
            List<MobileRechargePlan> data = new List<MobileRechargePlan>();

            try
            {
                var res = await _dataRepository.RechargePlan(operator_id, circle_id);
                if (res.data.Count > 0)
                {
                    for (int i = 0; i < res.data.Count; i++)
                    {
                        var check = data.Where(m => m.recharge_type == res.data[i].recharge_type).ToList();
                        if (check.Count == 0)
                        {
                            MobileRechargePlan rechargetype = new MobileRechargePlan();
                            rechargetype.recharge_type = res.data[i].recharge_type;
                            data.Add(rechargetype);
                        }

                    }
                    for (int i = 0; i < data.Count; i++)
                    {

                        data[i].data = res.data.Where(x => x.recharge_type == data[i].recharge_type).ToList();



                    }
                    objres.result = data.Distinct().ToList();
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("GETSupper30Expense")]
        public async Task<CommonResponse<List<Expense>>> GETSupper30Expense(string type)
        {
            CommonResponse<List<Expense>> objres = new CommonResponse<List<Expense>>();
            try
            {
                var res = await _dataRepository.GETSupper30Expense(type);
                if (res != null && res.Count > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetDirect")]
        public async Task<CommonResponse<List<Direct>>> GetDirect(long MemberId, long OldmemberId)
        {
            CommonResponse<List<Direct>> objres = new CommonResponse<List<Direct>>();
            try
            {
                var res = await _dataRepository.GetDirect(MemberId, OldmemberId);
                if (res != null && res.Count > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetLevelWiseDetails")]
        public async Task<CommonResponse<List<Direct>>> GetLevelWiseDetails(long MemberId, string level, string type, string search, int page = 1)
        {
            CommonResponse<List<Direct>> objres = new CommonResponse<List<Direct>>();
            try
            {
                var res = await _dataRepository.GetLevelWiseDetail(MemberId, level, type, search, page);
                if (res != null && res.Count > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        //[HttpGet("GetTeamStatus")]
        //public async Task<CommonResponse<List<TeamStatus>>> GetTeamStatus(long MemberId)
        //{
        //    CommonResponse<List<TeamStatus>> objres = new CommonResponse<List<TeamStatus>>();
        //    try
        //    {
        //        var res = await _dataRepository.GetTeamStatus(MemberId);
        //        if (res.result.Count > 0)
        //        {
        //            objres.result = res.result;
        //            objres.response = "success";
        //            objres.message = "success";
        //        }
        //        else
        //        {

        //            objres.response = "error";
        //            objres.message = "Record Not Found";
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}

        [HttpGet("GetTeamStatus")]
        public async Task<CommonResponse<TeamStatusResponseV2>> GetTeamStatus(long MemberId, string search)
        {
            CommonResponse<TeamStatusResponseV2> objres = new CommonResponse<TeamStatusResponseV2>();
            try
            {
                var res = await _dataRepository.GetTeamStatus(MemberId, search);
                if (res != null)
                {

                    objres.result = new TeamStatusResponseV2();
                    objres.result.TopHeader = res.header1;
                    objres.result.data = new CugItemRoot();

                    objres.result.data.cugItems = new List<CugItem>();

                    for (int i = 0; i < res.header2.Count(); i++)
                    {

                        objres.result.data.cugItems.Add(new CugItem() { header = res.header2[i].Text });
                        objres.result.data.cugItems[i].data = res.data.Where(m => m.LevelId == res.header2[i].Value).ToList();

                    }

                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpGet("GetRecentRecharge")]
        public async Task<CommonResponse<List<RecentRecharge>>> GetRecentRecharge(long MemberId, string type = "", int page = 1)
        {
            CommonResponse<List<RecentRecharge>> objres = new CommonResponse<List<RecentRecharge>>();
            try
            {
                var res = await _dataRepository.GetRecentRecharge(MemberId, type, page);
                if (res != null && res.Count > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetMiniStatement")]
        public async Task<CommonResponse<List<Ministatement>>> GetMiniStatement(long MemberId, int page)
        {
            CommonResponse<List<Ministatement>> objres = new CommonResponse<List<Ministatement>>();
            try
            {
                var res = await _dataRepository.GetMiniStatement(MemberId, page);
                if (res != null && res.Count() > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("GetFranchiseDetails")]
        public async Task<CommonResponse<List<FranchiseDetails>>> GetFranchiseDetails(int DistrictId)
        {
            CommonResponse<List<FranchiseDetails>> objres = new CommonResponse<List<FranchiseDetails>>();
            try
            {
                var res = await _dataRepository.GetFranchiseDetails(DistrictId);
                if (res.result.Count > 0)
                {
                    objres.result = res.result;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpGet("GETOperatorCode")]
        public async Task<CommonResponse<List<OperatorCodeModel>>> GETOperatorCode(string type)
        {
            _logwrite.LogRequestException("Auth Controller , GETOperatorCode :" + type);
            CommonResponse<List<OperatorCodeModel>> objres = new CommonResponse<List<OperatorCodeModel>>();

            try
            {
                type = type.Replace("+", "");
                var res = await _dataRepository.GetOperatorsCode(2, type, "");
                if (res != null && res.Count > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "No Operator found";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("SubFranchiseCardRequest")]
        public async Task<CommonResponse<Common>> SubFranchiseCardRequest(SubFranchiseCardRequest model)
        {
            CommonResponse<Common> objres = new CommonResponse<Common>();

            try
            {
                var res = await _dataRepository.SubFranchiseCardRequest(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "No Operator found";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        //[HttpPost("PaymentOrder")]
        //public async Task<CommonResponse<PaymentOrderModel>> PaymentOrder(PaymentOrderModel model)
        //{
        //    CommonResponse<PaymentOrderModel> objres = new CommonResponse<PaymentOrderModel>();

        //    Order objorder = null;
        //    try
        //    {
        //        string OrderId = "", Status = "";
        //        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
        //        RazorpayClient client = null;
        //        if (model.PaymentMode.ToLower() == "upi" || model.PaymentMode.ToLower() == "rupay" || model.PaymentMode.ToLower() == "rupaycard")
        //        {

        //            if (model.Type.ToLower() == "bankverification")
        //            {
        //                model.Amount = 10;
        //            }
        //            //if (model.Type.ToLower() == "cardcost")
        //            //{
        //            //    model.Amount = 600;
        //            //}
        //            client = new RazorpayClient(razorpayupikey, razorpayupisecret);
        //        }
        //        if (model.PaymentMode.ToLower() == "debitcard")
        //        {
        //            client = new RazorpayClient(razorpaydebitcardkey, razorpaydebitcardsecret);
        //            if (model.Type.ToLower() == "bankverification")
        //            {
        //                model.Amount = 10.06M;
        //            }
        //            //if (model.Type.ToLower() == "cardcost")
        //            //{
        //            //    model.Amount = 603.54M;
        //            //}

        //        }
        //        if (model.PaymentMode.ToLower() == "creditcard")
        //        {
        //            client = new RazorpayClient(razorpaycreditcardkey, razorpaycreditcardsecret);
        //            if (model.Type.ToLower() == "bankverification")
        //            {
        //                model.Amount = 10.22M;
        //            }
        //            //if (model.Type.ToLower() == "cardcost")
        //            //{
        //            //    model.Amount = 613.44M;
        //            //}
        //        }
        //        if (model.ProcId == 1)
        //        {

        //            objres.result = new PaymentOrderModel();
        //            Dictionary<string, object> options = new Dictionary<string, object>();
        //            options.Add("amount", Convert.ToInt64(model.Amount * 100));
        //            options.Add("receipt", "");
        //            options.Add("currency", "INR");
        //            options.Add("payment_capture", 1);
        //            objorder = client.Order.Create(options);
        //            OrderId = objorder["id"].ToString();
        //            objres.result.OrderId = OrderId;
        //            model.OrderId = OrderId;

        //        }


        //        var res = await _dataRepository.PaymentOrder(model);
        //        if (res != null && res.result.flag == 1)
        //        {
        //            if (model.PaymentMode.ToLower() == "upi" || model.PaymentMode.ToLower() == "rupay" || model.PaymentMode.ToLower() == "rupaycard")
        //            {
        //                objres.result.key = razorpayupikey;
        //                objres.result.secret = razorpayupisecret;
        //            }
        //            if (model.PaymentMode.ToLower() == "debitcard")
        //            {
        //                objres.result.key = razorpaydebitcardkey;
        //                objres.result.secret = razorpaydebitcardsecret;
        //            }
        //            if (model.PaymentMode.ToLower() == "creditcard")
        //            {
        //                objres.result.key = razorpaycreditcardkey;
        //                objres.result.secret = razorpaycreditcardsecret;
        //            }
        //            objres.response = "success";
        //            objres.message = "success";
        //        }
        //        else
        //        {

        //            objres.response = "error";
        //            objres.message = res.result.message;
        //            objres.result = new Model.PaymentOrderModel();
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        objres.message = ex.Message;
        //        objres.response = "error";
        //        objres.result = new Model.PaymentOrderModel();
        //    }
        //    return objres;
        //}

        [HttpPost("V2/PaymentOrder")]
        public async Task<CommonResponse<PaymentOrderModel>> PaymentOrder_V2(PaymentOrderModel model)
        {
            CommonResponse<PaymentOrderModel> objres = new CommonResponse<PaymentOrderModel>();

            Order objorder = null;
            try
            {
                if (model.IsLocal == 1)
                {
                    razorpaydebitcardkey = "rzp_test_uF6itBiYzVL13D";
                    razorpaydebitcardsecret = "hVXLLndzYmZZNMTE4yuvSrNf";
                }
                string OrderId = "", Status = "";
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
                RazorpayClient client = null;


                //if (model.Type.ToLower() == "mobile recharge" || model.Type.ToLower() == "dth recharge" || model.Type.ToLower() == "voucher")
                //{

                //    var res1 = await _dataRepository.LevelWiseLedger(model.MemberId, "Cashpoint", 0, 0);

                //    if (res1 != null && res1.summarydata != null && res1.summarydata.Count > 0)
                //    {
                //        var points = decimal.Parse(res1.summarydata[0].Value);
                //        if (points >= (model.Amount * 1) / 100)
                //        {
                //            model.Amount = (model.Amount - (model.Amount * 1) / 100);
                //        }
                //    }
                //}


                if (model.PaymentMode.ToLower() == "upi" || model.PaymentMode.ToLower() == "rupay" || model.PaymentMode.ToLower() == "rupaycard")
                {

                    if (model.Type.ToLower() == "bankverification")
                    {
                        model.Amount = 10;
                    }


                    client = new RazorpayClient(razorpayupikey, razorpayupisecret);
                }
                if (model.PaymentMode.ToLower() == "debitcard")
                {
                    client = new RazorpayClient(razorpaydebitcardkey, razorpaydebitcardsecret);
                    if (model.Type.ToLower() == "bankverification")
                    {
                        model.Amount = 10.06M;
                    }
                    if (model.Type.ToLower() == "cardcost")
                    {
                        model.Amount = 1005.90M;
                    }


                }
                if (model.PaymentMode.ToLower() == "creditcard")
                {
                    client = new RazorpayClient(razorpaycreditcardkey, razorpaycreditcardsecret);
                    if (model.Type.ToLower() == "bankverification")
                    {
                        model.Amount = 10.22M;
                    }
                    if (model.Type.ToLower() == "cardcost")
                    {
                        model.Amount = 1022.40M;
                    }

                }
                if (model.ProcId == 1)
                {

                    objres.result = new PaymentOrderModel();
                    Dictionary<string, object> options = new Dictionary<string, object>();
                    options.Add("amount", Convert.ToInt64(model.Amount * 100));
                    options.Add("receipt", "");
                    options.Add("currency", "INR");
                    options.Add("payment_capture", 1);
                    objorder = client.Order.Create(options);
                    OrderId = objorder["id"].ToString();
                    objres.result.OrderId = OrderId;
                    model.OrderId = OrderId;

                }
                if (model.Type.ToLower() == "mobile" || model.Type.ToLower() == "dth" || model.Type.ToLower() == "electricity"
                    || model.Type.ToLower() == "lic"
                    )
                {
                    if (model.dict != null)
                    {
                        if (model.dict.Count > 0)
                        {
                            foreach (var item in model.dict)
                            {
                                if (item.Key == "Mobile")
                                {
                                    model.Mobile = item.Value;
                                }
                                else if (item.Key == "CustomerId")
                                {
                                    model.CustomerId = item.Value;
                                }
                                else
                                {
                                    model.OperatorCode = item.Value;
                                }
                            }
                        }

                    }

                }
                if (model.Type.ToLower() == "mobilepemall")
                {
                    if (model.dict.Count > 0)
                    {
                        foreach (var item in model.dict)
                        {
                            if (item.Key == "CartItemId")
                            {
                                model.CartItemId = item.Value;
                            }
                            else
                            {
                                model.AddressId = item.Value;
                            }
                        }
                    }
                }
                if (model.Type.ToLower() == "flightbooking")
                {
                    DataTable dt = new DataTable();
                    dt.Columns.Add("JourneyType");
                    dt.Columns.Add("TripIndicator");
                    dt.Columns.Add("PNR");
                    dt.Columns.Add("Origin");
                    dt.Columns.Add("Destination");
                    dt.Columns.Add("AirlineCode");
                    dt.Columns.Add("LastTicketDate");
                    dt.Columns.Add("NonRefundable");


                    DataTable dtSegment = new DataTable();
                    dtSegment.Columns.Add("AirportCode");
                    dtSegment.Columns.Add("AirportName");
                    dtSegment.Columns.Add("Terminal");
                    dtSegment.Columns.Add("CityCode");
                    dtSegment.Columns.Add("CityName");
                    dtSegment.Columns.Add("CountryCode");
                    dtSegment.Columns.Add("CountryName");
                    dtSegment.Columns.Add("DepTime");
                    dtSegment.Columns.Add("Destination");
                    dtSegment.Columns.Add("ArrivalTime");


                    DataTable dtSegmentR = new DataTable();
                    dtSegmentR.Columns.Add("AirportCode");
                    dtSegmentR.Columns.Add("AirportName");
                    dtSegmentR.Columns.Add("Terminal");
                    dtSegmentR.Columns.Add("CityCode");
                    dtSegmentR.Columns.Add("CityName");
                    dtSegmentR.Columns.Add("CountryCode");
                    dtSegmentR.Columns.Add("CountryName");
                    dtSegmentR.Columns.Add("DepTime");

                    TravelSaveResponse travelSaveResponse = new TravelSaveResponse();
                    ResultTravel resultTravel = JsonConvert.DeserializeObject<ResultTravel>(model.Request);
                    for (int i = 0; i <= resultTravel.data.Count - 1; i++)
                    {
                        string JourneyType = "";
                        if(resultTravel.data.Count==2)
                        {
                            JourneyType = "2";
                        }
                        else
                        {
                            JourneyType = "1";
                        }
                       

                        if (resultTravel.data[i].isLcc == true)
                        {           
                            
                            ResultTravelForLCC resultTravelForLCC = JsonConvert.DeserializeObject<ResultTravelForLCC>(model.Request);
                            string ResultIndex = resultTravelForLCC.data[i].ResultIndex;

                            travelSaveResponse.IsSuccess = 2;
                            travelSaveResponse.Message = "Flight booking is pending";
                            travelSaveResponse.TraceId = resultTravelForLCC.data[i].TraceId;
                            travelSaveResponse.Fk_MemId =int.Parse(model.MemberId.ToString());
                            travelSaveResponse.IsLcc = "1";
                            travelSaveResponse.JourneyDate = resultTravelForLCC.data[i].Flight[0].JourneyDate;
                            travelSaveResponse.Class = resultTravelForLCC.data[i].Flight[0].Class;
                            int BaggageCount = resultTravelForLCC.data[i].Passengers[0].Baggage.Count;
                            string Origin= resultTravelForLCC.data[i].Flight[0].Origin;
                            string Desitination= resultTravelForLCC.data[i].Flight[0].Destination;
                            dt.Rows.Add(JourneyType, "", "", Origin, Desitination, "", "", "");
                            travelSaveResponse.tblFlightItinerary = dt;

                            for (int k = 0; k < resultTravelForLCC.data[i].Flight.Count; k++)
                            {
                                dtSegment.Rows.Add(resultTravelForLCC.data[i].Flight[k].AirlineCode, resultTravelForLCC.data[i].Flight[k].FlightNumber,"", resultTravelForLCC.data[i].Flight[k].Origin, resultTravelForLCC.data[i].Flight[k].Origin, "", "", resultTravelForLCC.data[i].Flight[k].DepartureTime, resultTravelForLCC.data[i].Flight[k].Destination,
                                    resultTravelForLCC.data[i].Flight[k].ArrivalTime);
                                //dtSegmentR.Rows.Add(resultTravelForLCC.data[i].Flight[k].AirlineCode, resultTravelForLCC.data[i].Flight[k].FlightNumber, "", resultTravelForLCC.data[i].Flight[k].Destination, resultTravelForLCC.data[i].Flight[k].Destination, "", "", resultTravelForLCC.data[i].Flight[k].DepartureTime);

                            }

                            travelSaveResponse.dtSegment = dtSegment;
                            travelSaveResponse.dtSegmentR = dtSegmentR;
                            travelSaveResponse.OrderId = model.OrderId;
                            var SaveBookingResponse = _dataRepository.SaveBookingResponse(travelSaveResponse);





                        }
                        else
                        {
                            ResultTravelForLCC resultTravelForLCC = JsonConvert.DeserializeObject<ResultTravelForLCC>(model.Request);
                            string ResultIndex = resultTravelForLCC.data[i].ResultIndex;
                            travelSaveResponse.IsSuccess = 2;
                            travelSaveResponse.Message = "Flight booking is pending";
                            travelSaveResponse.TraceId = resultTravelForLCC.data[i].TraceId;
                            travelSaveResponse.Fk_MemId = int.Parse(model.MemberId.ToString());
                            travelSaveResponse.IsLcc = "0";
                            travelSaveResponse.JourneyDate = resultTravelForLCC.data[i].Flight[0].JourneyDate;
                            travelSaveResponse.Class = resultTravelForLCC.data[i].Flight[0].Class;
                            int BaggageCount = resultTravelForLCC.data[i].Passengers[0].Baggage.Count;
                            string Origin = resultTravelForLCC.data[i].Passengers[0].Baggage[0].Origin;
                            string Desitination = resultTravelForLCC.data[i].Passengers[BaggageCount].Baggage[0].Destination;
                            dt.Rows.Add(JourneyType, "", "", Origin, Desitination, "", "", "");
                            travelSaveResponse.tblFlightItinerary = dt;

                            for (int k = 0; k < resultTravelForLCC.data[i].Flight.Count; k++)
                            {
                                dtSegment.Rows.Add(resultTravelForLCC.data[i].Flight[k].AirlineCode, resultTravelForLCC.data[i].Flight[k].FlightNumber, "", resultTravelForLCC.data[i].Flight[k].Origin, resultTravelForLCC.data[i].Flight[k].Origin, "", "", resultTravelForLCC.data[i].Flight[k].DepartureTime);
                                //dtSegmentR.Rows.Add(resultTravelForLCC.data[i].Flight[k].AirlineCode, resultTravelForLCC.data[i].Flight[k].FlightNumber, "", resultTravelForLCC.data[i].Flight[k].Destination, resultTravelForLCC.data[i].Flight[k].Destination, "", "", resultTravelForLCC.data[i].Flight[k].DepartureTime);

                            }

                            travelSaveResponse.dtSegment = dtSegment;
                            travelSaveResponse.dtSegmentR = dtSegmentR;
                            travelSaveResponse.OrderId = model.OrderId;
                            var SaveBookingResponse = _dataRepository.SaveBookingResponse(travelSaveResponse);

                        }
                    }
                }
                model.ipAddress = model.DeviceInfo == null ? "": model.DeviceInfo.ipAddress;
                model.os = model.DeviceInfo == null ? "" : model.DeviceInfo.os;
                model.deviceId = model.DeviceInfo == null ? "" : model.DeviceInfo.deviceId;
                model.appversion = model.DeviceInfo == null ? "" : model.DeviceInfo.appversion;

                DataSet dataset = model.GenerateOrderId(model);

               // var res = await _dataRepository.PaymentOrder(model);
                if (dataset != null && dataset.Tables[0].Rows[0]["flag"].ToString() == "1")
                {
                    if (model.PaymentMode.ToLower() == "upi" || model.PaymentMode.ToLower() == "rupay" || model.PaymentMode.ToLower() == "rupaycard")
                    {

                        objres.result.key = razorpayupikey;
                        objres.result.secret = razorpayupisecret;
                    }
                    if (model.PaymentMode.ToLower() == "debitcard")
                    {
                        objres.result.key = razorpaydebitcardkey;
                        objres.result.secret = razorpaydebitcardsecret;
                    }
                    if (model.PaymentMode.ToLower() == "creditcard")
                    {
                        objres.result.key = razorpaycreditcardkey;
                        objres.result.secret = razorpaycreditcardsecret;
                    }
                    objres.result.Amount1 = Convert.ToDecimal(model.Amount);
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = dataset.Tables[0].Rows[0]["message"].ToString();
                    objres.result = new Model.PaymentOrderModel();
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";
                objres.result = new Model.PaymentOrderModel();
            }
            return objres;
        }

        [HttpGet("Ledger")]
        public async Task<CommonResponse<LedgerResult>> Ledger(long MemberId, string Type, int monthId, int yearId, string leveltype)
        {
            CommonResponse<LedgerResult> objres = new CommonResponse<LedgerResult>();
            try
            {
                var res = await _dataRepository.Ledger(MemberId, Type, leveltype, monthId, yearId);
                if (res != null && res.balance != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("MobilePeRegularEarnings")]
        public async Task<CommonResponse<MobilePeRegularResult>> MobilePeRegularEarnings(long MemberId)
        {
            CommonResponse<MobilePeRegularResult> objres = new CommonResponse<MobilePeRegularResult>();
            try
            {
                var res = await _dataRepository.MobilePeRegularEarnings(MemberId);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("SelfCUGMore")]
        public async Task<CommonResponse<SelfCUGMoreResult>> SelfCUGMore(long MemberId, int monthId, int year)
        {
            CommonResponse<SelfCUGMoreResult> objres = new CommonResponse<SelfCUGMoreResult>();
            try
            {
                var res = await _dataRepository.SelfCUGMore(MemberId, monthId, year);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("CUGMore")]
        public async Task<CommonResponse<CUGMoreResponse>> CUGMore(CUGMoreRequest model)
        {
            CommonResponse<CUGMoreResponse> objres = new CommonResponse<CUGMoreResponse>();
            try
            {
                var res = await _dataRepository.CUGMore(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("CUGMoredetails")]
        public async Task<CommonResponse<List<CUGMoreDetails>>> CUGMoredetails(CUGMoreRequest model)
        {
            CommonResponse<List<CUGMoreDetails>> objres = new CommonResponse<List<CUGMoreDetails>>();
            try
            {
                var res = await _dataRepository.CUGMoreDetails(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("cardActivationMore")]
        public async Task<CommonResponse<CardActivationMore>> cardActivationMore(CardActivationEarningRequest model)
        {
            CommonResponse<CardActivationMore> objres = new CommonResponse<CardActivationMore>();
            try
            {
                var res = await _dataRepository.cardActivationMore(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("MobilePeClub")]
        public async Task<CommonResponse<List<MobilePeClubResult>>> MobilePeClub(long MemberId, int monthId, int year)
        {
            CommonResponse<List<MobilePeClubResult>> objres = new CommonResponse<List<MobilePeClubResult>>();
            try
            {
                var res = await _dataRepository.MobilePeClub(MemberId, monthId, year);
                if (res != null)
                {
                    objres.result = res.result;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("EarningBankTrf")]
        public async Task<CommonResponse<List<EarningBankTrf>>> EarningBankTrf(long MemberId, int monthId, int year)
        {
            CommonResponse<List<EarningBankTrf>> objres = new CommonResponse<List<EarningBankTrf>>();
            try
            {
                var res = await _dataRepository.EarningBankTrf(MemberId, monthId, year);
                if (res != null)
                {
                    objres.result = res.result;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpPost("RedeemRewardPoints")]
        public async Task<CommonResponse<ResultSet>> RedeemRewardPoints(RedeamRewardPoints model)
        {
            CommonResponse<ResultSet> objres = new CommonResponse<ResultSet>();
            try
            {
                var res = await _dataRepository.RedeemRewardPoints(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("BusinessDashboard")]
        public async Task<CommonResponse<BusinessDashboard>> BusinessDashboard(long MemberId)
        {
            CommonResponse<BusinessDashboard> objres = new CommonResponse<BusinessDashboard>();
            try
            {
                var res = await _dataRepository.BusinessDashboard(MemberId);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("Market")]
        public async Task<CommonResponse<List<Market>>> Market(long memberId = 0, string type = "")
        {
            CommonResponse<List<Market>> objres = new CommonResponse<List<Market>>();
            List<Market> mlist = new List<Market>();
            try
            {
                var AffiliateCategory = await _dataRepository.GetAffiliateCategory();
                //var AffiliateOffers = await _dataRepository.GetAffiliateOffers();
                if (AffiliateCategory != null && AffiliateCategory.Count > 0)
                {

                    var AffiliateProgram = await _dataRepository.GetAffiliateProgram(memberId, type);
                    //foreach (var item in AffiliateCategory)
                    //{

                    for (int i = 0; i < AffiliateCategory.Count(); i++)
                    {
                        Market m = new Market();
                        // objres.result.affilicate = new Market();
                        if (AffiliateProgram.Where(p => p.CategoryId == AffiliateCategory[i].CategoryId) != null
                         && AffiliateProgram.Where(p => p.CategoryId == AffiliateCategory[i].CategoryId).ToList().Count() > 0)
                        {
                            m.CategoryId = AffiliateCategory[i].CategoryId;
                            m.CategoryName = AffiliateCategory[i].CategoryName;
                            m.url = AffiliateCategory[i].url;
                            m.data = AffiliateProgram.Where(p => p.CategoryId == AffiliateCategory[i].CategoryId).ToList();
                            mlist.Add(m);
                        }
                    }
                    objres.result = mlist;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("v2/Market")]
        public async Task<CommonResponse<Marketv2>> Marketv2(long memberId, string type)
        {
            CommonResponse<Marketv2> objres = new CommonResponse<Marketv2>();
            Marketv2 obj = new Marketv2();
            List<Market> mlist = new List<Market>();
            try
            {
                var AffiliateCategory = await _dataRepository.GetAffiliateCategory();
                var banner = await _dataRepository.DashboradBanner(memberId);
                //var AffiliateOffers = await _dataRepository.GetAffiliateOffers();
                if (AffiliateCategory != null && AffiliateCategory.Count > 0)
                {

                    var AffiliateProgram = await _dataRepository.GetAffiliateProgram(memberId, type);
                    //foreach (var item in AffiliateCategory)
                    //{

                    for (int i = 0; i < AffiliateCategory.Count(); i++)
                    {
                        Market m = new Market();
                        // objres.result.affilicate = new Market();
                        if (AffiliateProgram.Where(p => p.CategoryId == AffiliateCategory[i].CategoryId) != null
                         && AffiliateProgram.Where(p => p.CategoryId == AffiliateCategory[i].CategoryId).ToList().Count() > 0)
                        {
                            m.CategoryId = AffiliateCategory[i].CategoryId;
                            m.CategoryName = AffiliateCategory[i].CategoryName;
                            m.url = AffiliateCategory[i].url;
                            m.data = AffiliateProgram.Where(p => p.CategoryId == AffiliateCategory[i].CategoryId).ToList();
                            mlist.Add(m);
                        }
                    }
                    obj.market = mlist;
                    obj.banner = banner.data;
                    objres.result = obj;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("BusinessTransaction")]
        public async Task<CommonResponse<Dashboard>> BusinessTransaction(long MemberId)
        {
            CommonResponse<Dashboard> objres = new CommonResponse<Dashboard>();
            List<CompanyTransactionDetails> mlist = new List<CompanyTransactionDetails>();
            Dashboard das = new Dashboard();
            try
            {

                var dashboardResponse = await _dataRepository.BusinessTransaction(MemberId);
                if (dashboardResponse != null)
                {
                    string[] trans = new string[6] { "Transaction", "Card", "Club", "SuperUser", "Shopping", "Bank" };

                    for (int i = 0; i < trans.Length; i++)
                    {
                        CompanyTransactionDetails m = new CompanyTransactionDetails();

                        if (dashboardResponse.transactiondetails.Where(p => p.Type == trans[i]) != null &&
                            dashboardResponse.transactiondetails.Where(p => p.Type == trans[i]).ToList().Count() > 0)
                        {
                            m.Type = trans[i];
                            m.data = dashboardResponse.transactiondetails.Where(p => p.Type == trans[i]).ToList();
                            mlist.Add(m);
                        }



                    }
                    das.UserWallet = dashboardResponse.UserWallet;
                    das.CompanyTransactionDetails = mlist;
                    das.totalAmount = dashboardResponse.totalAmount;
                    objres.response = "success";
                    objres.message = "success";
                    objres.result = das;

                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("DashboardBanner")]
        public async Task<CommonResponse<DashboradBannerResponse>> DashboardBanner(long memberId)
        {
            CommonResponse<DashboradBannerResponse> objres = new CommonResponse<DashboradBannerResponse>();
            objres.result = new DashboradBannerResponse();
            try
            {
                var res = await _dataRepository.DashboradBanner(memberId);
                if (res != null && res.data != null && res.data.Count() > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetCardDetails")]
        public async Task<CommonResponse<CardMasterResponse>> GetCardDetails(long memberId)
        {
            CommonResponse<CardMasterResponse> objres = new CommonResponse<CardMasterResponse>();
            CommonResponse<PineCardBalanceResponse> cardbalance
                = new CommonResponse<PineCardBalanceResponse>();
            objres.result = new CardMasterResponse();
            try
            {
                var res = await _dataRepository.GetCardDetails(memberId);
                if (res != null && res.carddata != null)
                {
                    if (res.carddata.IsCardApplied)
                    {
                        PineCardBalanceRequest request = new PineCardBalanceRequest();
                        request.cardBalanceRequestList = new List<string>();
                        var reference = await _dataRepository.GetCardReference(memberId);
                        objres.result = res;
                        if (reference != null && !string.IsNullOrEmpty(reference.TransactionId))
                        {
                            request.cardBalanceRequestList.Add(reference.TransactionId);
                            request.memberId = memberId;

                            var newusercardstatus = await _dataRepository.CheckNewUserCardStatus(memberId);
                            if (newusercardstatus.flag == 1)
                            {
                                cardbalance = CardBalance_V1(request);
                            }
                            else
                            {
                                cardbalance = await CardBalance(request);
                            }

                            if (cardbalance.response == "success")
                            {
                                decimal balance = cardbalance.result.cardBalanceDetailList[0].availableAmount / 100M;
                                objres.result.carddata.cardbalance = balance;
                            }
                            else
                            {
                                decimal balance = 0.0M;
                                objres.result.carddata.cardbalance = balance;
                            }
                        }
                        else
                        {
                            decimal balance = 0.0M;
                        }

                    }
                    else
                    {
                        objres.result = res;
                    }
                    objres.result.viewstatement = new List<CommonResult>();
                    objres.result.viewstatement.Add(new CommonResult { Text = "Gift", Value = "Gift" });
                    objres.result.viewstatement.Add(new CommonResult { Text = "Reloadable", Value = "Reloadable" });
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("Recharge")]
        public async Task<CommonResponse<Common>> Recharge(RechargeDeskRequest model)
        {
            CommonResponse<Common> objres = new CommonResponse<Common>();
            VenusRechargeResponse response = new VenusRechargeResponse();
            try
            {


                var check = await _dataRepository.CheckAmountByTransactionId(model.TransactionId);

                if (model.amount >= decimal.Parse(check.message))
                {
                    model.amount = (Convert.ToDecimal(model.amount) - ((Convert.ToDecimal(model.amount)) * 0.01m));
                }
                if (check.message != null && decimal.Parse(check.message) >= model.amount)
                {

                    model.amount = Math.Round(model.amount * 1.01m);
                    model.ProcId = 1;
                    // model.merchantInfoTxn = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);

                    var res = await _dataRepository.OperatorRecharge_V2(model);
                    if (res != null && res.Id > 0)
                    {
                        model.merchantInfoTxn = res.TransactionId;
                        string serviceType = string.Empty;
                        if (model.Type.ToLower() == "mobile" || model.Type.ToLower() == "mobile recharge")
                        {
                            serviceType = "MR";
                        }
                        else if (model.Type.ToLower() == "dth" || model.Type.ToLower() == "dth recharge")
                        {
                            serviceType = "DH";
                        }

                        VenusRechargeURL = VenusRechargeURL.Replace("[number]", model.number).Replace("[recharge_amount]", model.amount.ToString()).Replace("[operator_code]", model.OperatorCode).Replace("[transaction_id]", model.merchantInfoTxn).Replace("[ServiceType]", serviceType);
                        var result = CommonJsonPostRequest.CommonSendRequest(VenusRechargeURL, "GET", null);
                        XmlDocument doc = new XmlDocument();
                        doc.LoadXml(result);

                        string json = JsonConvert.SerializeXmlNode(doc);
                        response = JsonConvert.DeserializeObject<VenusRechargeResponse>(json);
                        if (response != null && response.Response != null)
                        {
                            model.ProcId = 2;
                            model.Id = res.Id;
                            model.status = response.Response.ResponseStatus;
                            model.description = response.Response.Description;
                            if (response.Response.ResponseStatus.ToLower() == "success")
                            {
                                model.optr_txn_id = response.Response.OperatorTxnID;
                            }
                            model.response = result;

                            var res1 = _dataRepository.OperatorRecharge_V2(model);
                            if (res1 != null && res1.Id > 0)
                            {
                                objres.message = "RECHARGE " + response.Response.ResponseStatus.ToLower();
                                objres.response = response.Response.ResponseStatus.ToLower();
                            }
                            else
                            {
                                objres.message = "Error";
                                objres.response = "error";

                            }

                        }
                        else
                        {
                            objres.message = "Error";
                            objres.response = "error";

                        }
                    }
                    else
                    {
                        objres.message = res.msg;
                        objres.response = "error";

                    }

                }
                else
                {
                    objres.message = "Payment is pending";
                    objres.response = "error";

                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";

            }
            return objres;
        }

        [EnableCors("MyPolicy")]
        [HttpPost("UploadFile")]
        public async Task<Common> UploadFile(long MemberId)
        {
            Common objcm = new Common();
            try
            {

                var f = HttpContext.Request.Form;
                var formkeys = HttpContext.Request.Form.Keys;
                string DocumentType = string.Empty;
                foreach (var key in formkeys)
                {
                    if (key != null && key.Length > 0)
                    {
                        DocumentType = key;
                    }
                }
                if (!string.IsNullOrEmpty(DocumentType))
                {
                    var files = HttpContext.Request.Form.Files;
                    var webRoot = _env.WebRootPath;
                    if (files.Count > 0)
                    {
                        foreach (var Image in files)
                        {
                            if (Image != null && Image.Length > 0)
                            {
                                var file = Image;
                                string childfolderpath = "/ReadWriteData/" + DocumentType;
                                var folderpath = webRoot + "\\ReadWriteData\\" + DocumentType;

                                var contenttype = file.ContentType;
                                int count = file.FileName.Split('.').Length - 1;
                                if (count == 1)
                                {
                                    if (contenttype == "image/png" || contenttype == "image/jpeg" || contenttype == "image/jpg" || contenttype == "image/pdf")
                                    {


                                        if (file.Length > 0 && file.Length < 2091009)
                                        {
                                            if (!Directory.Exists(folderpath))
                                            {
                                                Directory.CreateDirectory(folderpath);
                                            }
                                            string extension = Path.GetExtension(file.FileName);
                                            if (extension.ToLower() == ".jpeg" || extension.ToLower() == ".jpg" || extension.ToLower() == ".pdf" || extension.ToLower() == ".png")
                                            {
                                                var fileName = file.FileName;
                                                string savefilepath = childfolderpath + "/" + DocumentType + "_" + MemberId.ToString() + extension;
                                                var filepath = folderpath + "\\" + DocumentType + "_" + MemberId.ToString() + "_" + DateTime.Now.ToString("ddMMyyyyHHmmss") + extension;

                                                if (System.IO.File.Exists(filepath))
                                                {
                                                    System.IO.File.Delete(filepath);
                                                }
                                                using (var fileStream = new FileStream(filepath, FileMode.Create))
                                                {
                                                    await file.CopyToAsync(fileStream);


                                                }
                                                var v = ValidateMimeType(System.IO.File.ReadAllBytes(filepath), contenttype);
                                                if (v)
                                                {
                                                    var res = _dataRepository.ImageUpload(savefilepath, DocumentType, MemberId);
                                                    if (res != null && res.Result.flag == 1)
                                                    {
                                                        objcm.response = "success";
                                                        objcm.message = DocumentType + " uploded successfully";
                                                        objcm.Id = res.Result.Id;



                                                        //objcm.filepath = filepath.Replace("C:\\home\\site\\wwwroot\\wwwroot\\", "https:\\apiv2.mobilepe.co.in\\");
                                                        //objcm.filepath = filepath.Replace("C:\\inetpub\\wwwroot\\", "https:\\apiv2.mobilepe.co.in\\");
                                                        objcm.filepath = "https://newapiv2.mobilepe.co.in" + savefilepath;
                                                        //filepath.add("C:\\inetpub\\wwwroot\\", "https:\\apiv2.mobilepe.co.in\\");
                                                    }
                                                    else
                                                    {
                                                        objcm.response = "error";
                                                        objcm.message = "An error occured while uploading " + DocumentType;
                                                    }
                                                }
                                                else
                                                {
                                                    if (System.IO.File.Exists(filepath))
                                                    {
                                                        System.IO.File.Delete(filepath);
                                                    }
                                                    objcm.response = "error";
                                                    objcm.message = "Only jpeg,jpg,pdf,png files are allowed";
                                                }
                                            }
                                            else
                                            {
                                                objcm.response = "error";
                                                objcm.message = "Only jpeg,jpg,pdf,png files are allowed";
                                            }


                                        }
                                        else
                                        {
                                            objcm.response = "error";
                                            objcm.message = "Upto 2MB file size allowed";
                                        }
                                    }
                                    else
                                    {
                                        objcm.response = "error";
                                        objcm.message = "Invalid Content Type";
                                    }
                                }
                                else
                                {
                                    objcm.response = "error";
                                    objcm.message = "double extension not allowed";
                                }
                            }
                            else
                            {
                                objcm.response = "error";
                                objcm.message = "Please select file";
                            }
                        }
                    }
                    else
                    {
                        objcm.response = "error";
                        objcm.message = "Please select file";
                    }
                }

                else
                {
                    objcm.response = "error";
                    objcm.message = "document type missing";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objcm.response = "error";
                objcm.message = ex.Message;
            }

            return objcm;
        }

        [HttpGet("AllLedger")]
        public async Task<CommonResponse<AllLedgerResponse>> AllLedger(long memberId, string type, int monthId, int yearId)
        {
            CommonResponse<AllLedgerResponse> objres = new CommonResponse<AllLedgerResponse>();
            objres.result = new AllLedgerResponse();
            try
            {
                var res = await _dataRepository.AllLedger(memberId, type, monthId, yearId);
                if (res != null && res != null)
                {

                    objres.result = res;

                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetLevelWiseLedger")]
        public async Task<CommonResponse<AllLedgerResponse>> GetLevelWiseLedger(long memberId, string type, int monthId, int yearId, string comtype)
        {
            CommonResponse<AllLedgerResponse> objres = new CommonResponse<AllLedgerResponse>();
            objres.result = new AllLedgerResponse();
            try
            {
                var res = await _dataRepository.LevelWiseLedger(memberId, type, monthId, yearId);
                if (res != null && res != null)
                {

                    objres.result = res;

                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("SendEmailVerificationLink")]
        public Common SendEmailVerificationLink(string mobileno, string email, string Name)
        {
            Common objres = new Common();
            try
            {
                MD5 md5Hash = MD5.Create();
                var token = objJWT.GenerateToken(mobileno);

                var emailconfirmation = _dataRepository.EmailConfirmationLink(token, "Insert", mobileno, email, Md5Encyption.GetMd5Hash(md5Hash, mobileno));
                if (emailconfirmation.Result.response == "success")
                {
                    string emailconfirmationmsg = "https://mobilepe.co.in/Home/EmailVerification?UserId=" + Md5Encyption.GetMd5Hash(md5Hash, mobileno) + "&Token=" + token + "";
                    string msg = objsms.EmailVerificationMailMessage(Name, emailconfirmationmsg);
                    var emailconfirmationres = objsms.SendEmail(email, "Email Verification", msg, Name);
                }

                objres.response = "success";
                objres.message = "Email Verification link has been sent  to your registered Email";


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("GetNotification")]
        public async Task<CommonResponse<List<FCM>>> GetNotification(long MemberId)
        {
            CommonResponse<List<FCM>> objres = new CommonResponse<List<FCM>>();
            try
            {
                var res = await _dataRepository.GetNotification(MemberId);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetNotificationCount")]
        public async Task<CommonResponse<NotificationCount>> GetNotificationCount(long MemberId)
        {
            CommonResponse<NotificationCount> objres = new CommonResponse<NotificationCount>();
            try
            {
                var res = await _dataRepository.GetNoticationCount(MemberId);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("ReadNotification")]
        public async Task<CommonResponse<Common>> ReadNotification(ReadNotification model)
        {
            CommonResponse<Common> objres = new CommonResponse<Common>();
            try
            {
                var res = await _dataRepository.ReadNotification(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetInsurance")]
        public async Task<CommonResponse<List<BindDropDown>>> GetInsurance()
        {
            CommonResponse<List<BindDropDown>> objres = new CommonResponse<List<BindDropDown>>();
            try
            {


                var res = await _dataRepository.GetDropDown(11, "");
                if (res != null && res.Count() > 0)
                {
                    objres.response = "success";
                    objres.result = res;
                }
                else
                {
                    objres.response = "error";
                    objres.result = null;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
                objres.result = null;
            }

            return objres;
        }
        [HttpGet("GetInsuranceUrl")]
        public CommonResponse<InsuranceReponse> GetInsuranceUrl(int serviceId, long memberId)
        {
            CommonResponse<InsuranceReponse> res = new CommonResponse<InsuranceReponse>();
            InsuranceRequest objreq = new InsuranceRequest();
            try
            {
                res.result = new InsuranceReponse();
                if (serviceId == -1)
                {
                    string CompanyCode = MD5Encryption.Encrypt(INSURANCEURLCOMPAYCODE, INSURANCEURLENCRYPTIONKEY);
                    string UniqueID = MD5Encryption.Encrypt(memberId.ToString(), INSURANCEURLENCRYPTIONKEY);
                    int UserType = 2;
                    INSURANCEURL += "CompanyCode=" + CompanyCode + "&UniqueID=" + UniqueID + "&UserType=" + UserType;
                    res.response = "success";
                    res.message = "success";
                    res.result.url = INSURANCEURL;
                }
                else
                {

                    objreq.serviceId = serviceId;
                    objreq.partnerCode = "43";
                    objreq.platform = "API";
                    objreq.userCode = memberId.ToString();
                    objreq.authToken = "7f39a67da4816370e36583c09f5e9e05";
                    DataContractJsonSerializer js;
                    MemoryStream ms;
                    StreamReader sr;
                    string CustData = "";
                    js = new DataContractJsonSerializer(typeof(InsuranceRequest));
                    ms = new MemoryStream();
                    js.WriteObject(ms, objreq);
                    ms.Position = 0;
                    sr = new StreamReader(ms);
                    CustData = sr.ReadToEnd();
                    sr.Close();
                    ms.Close();
                    dynamic result = JsonConvert.DeserializeObject<object>(CommonJsonPostRequest.CommonSendRequest(INSURANCEURLNEW, "POST", CustData));
                    res.response = "success";
                    res.message = "success";
                    res.result.url = result.data.url;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("FreeCardApply")]
        public async Task<Common> FreeCardApply(FREECARDCOSTRequest model)
        {
            Common objres = new Common();
            model.ProcId = 2;

            try
            {
                var check = await _dataRepository.CheckAmountByTransactionId(model.transactionId);
                if (check.message != null && decimal.Parse(check.message) >= model.Amount)
                {
                    var res = await _dataRepository.FreeCardCostProduct(model);
                    if (res != null && res.response == "success")
                    {

                        objres.response = "success";
                        objres.message = res.message;
                    }

                }
                else
                {

                    objres.response = "error";
                    objres.message = "Payment is pending";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("CardLedger")]
        public async Task<CommonResponse<List<CardLedgerDetails>>> CardLedger(long memberId, string type = "gift")
        {
            CommonResponse<List<CardLedgerDetails>> objres = new CommonResponse<List<CardLedgerDetails>>();

            try
            {

                if (type.ToLower() == "reloadable")
                {
                    var rescardData = await _dataRepository.CardLedger(memberId, type);
                    var link = rescardData[rescardData.Count - 1].link;

                    PineCardTransactionDetailRequest model = new PineCardTransactionDetailRequest();
                    model.memberId = memberId;
                    var referenceNumber = await _dataRepository.GetCardReference(memberId);
                    if (referenceNumber != null && !string.IsNullOrEmpty(referenceNumber.TransactionId))
                    {
                        model.referenceNumber = referenceNumber.TransactionId;
                        var result = await CardTransactionDetail(model);


                        if (result.response == "success")
                        {
                            objres.result = new List<CardLedgerDetails>();
                            objres.response = result.response;

                            for (int i = 0; i < result.result.transactionDetailList.Count(); i++)
                            {
                                if (result.result.transactionDetailList[i].transactionType.ToLower() == "credit")
                                {
                                    Thread.CurrentThread.CurrentCulture = new CultureInfo("en-IN");
                                    CardLedgerDetails cardLedgerDetails = new CardLedgerDetails();
                                    cardLedgerDetails.creditAmount = "+ " + CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol + Convert.ToString(result.result.transactionDetailList[i].transactionAmount / 100M);
                                    cardLedgerDetails.credit = Convert.ToDecimal(result.result.transactionDetailList[i].transactionAmount / 100M);
                                    cardLedgerDetails.debit = 0.0M;
                                    cardLedgerDetails.debitAmount = "";
                                    cardLedgerDetails.remark = "Amount Added in Card.";
                                    cardLedgerDetails.date = result.result.transactionDetailList[i].transactionDate;
                                    cardLedgerDetails.transactionId = result.result.transactionDetailList[i].orderId;
                                    cardLedgerDetails.link = link;
                                    objres.result.Add(cardLedgerDetails);
                                    //objres.result.Add(new CardLedgerDetails
                                    //{
                                    //    CreditAmount = "+ " + CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol + Convert.ToString(result.result.transactionDetailList[i].transactionAmount / 100M)

                                    //    ,
                                    //    credit = Convert.ToDecimal(result.result.transactionDetailList[i].transactionAmount / 100M),
                                    //    debit = 0.0M,
                                    //    DebitAmount = ""
                                    //    ,
                                    //    Remark = "Amount Added in Card",
                                    //    date = result.result.transactionDetailList[i].transactionDate,
                                    //    transactionId = result.result.transactionDetailList[i].orderId,
                                    //    link = link
                                    //}); ;
                                }
                                else if (result.result.transactionDetailList[i].transactionType.ToLower() == "refund" || result.result.transactionDetailList[i].transactionType.ToLower() == "reversed")
                                {
                                    Thread.CurrentThread.CurrentCulture = new CultureInfo("en-IN");
                                    objres.result.Add(new CardLedgerDetails
                                    {
                                        creditAmount = "+ " + CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol + Convert.ToString(result.result.transactionDetailList[i].transactionAmount / 100M)

                                        ,
                                        credit = Convert.ToDecimal(result.result.transactionDetailList[i].transactionAmount / 100M),
                                        debit = 0.0M,
                                        debitAmount = ""
                                        ,
                                        remark = "Amount refunded",
                                        date = result.result.transactionDetailList[i].transactionDate,
                                        transactionId = "",
                                        link = link
                                    }); ;
                                }
                                else if (result.result.transactionDetailList[i].transactionType.ToLower() == "debit")
                                {
                                    Thread.CurrentThread.CurrentCulture = new CultureInfo("en-IN");
                                    objres.result.Add(new CardLedgerDetails
                                    {

                                        debitAmount = "- " + CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol + Convert.ToString(result.result.transactionDetailList[i].transactionAmount / 100M)
                                    ,
                                        debit = Convert.ToDecimal(result.result.transactionDetailList[i].transactionAmount / 100M),
                                        credit = 0.0M,
                                        creditAmount = "",
                                        remark = "Amount used at " + result.result.transactionDetailList[i].merchantName,
                                        date = result.result.transactionDetailList[i].transactionDate,
                                        transactionId = result.result.transactionDetailList[i].approvalCode.ToString(),
                                        link = ""
                                    }); ;

                                }

                            }
                            objres.result = objres.result.OrderByDescending(m => Convert.ToDateTime(m.date)).ToList();
                        }
                    }
                    else
                    {
                        objres.response = "error";
                        objres.message = "No Record found";

                    }

                }
                else
                {
                    var res = await _dataRepository.CardLedger(memberId, type);
                    if (res != null && res.Count > 0)
                    {
                        objres.response = "success";
                        objres.message = "success";
                        objres.result = res;

                    }
                    else
                    {
                        objres.response = "error";
                        objres.message = "No Record found";

                    }
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;

            }

            return objres;
        }

        [HttpPost("BlockCard")]
        public async Task<Common> BlockCard(BlockCardRequest model)
        {
            Common objres = new Common();
            try
            {
                var check = await _dataRepository.CheckAmountByTransactionId(model.transactionId);
                if (check != null && check.message != null && decimal.Parse(check.message) >= model.amount)
                {
                    var res = await _dataRepository.BlockCard(model);
                    if (res != null && res.response == "success")
                    {
                        objres.response = "success";
                        objres.message = res.message;


                    }
                    else
                    {
                        objres.response = "error";
                        objres.message = res.message;

                    }
                }
                else
                {
                    objres.response = "error";
                    objres.message = "Payment is Pending";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;

            }

            return objres;
        }

        [HttpGet("VerifyPhysicalCard")]
        public async Task<Common> VerifyPhysicalCard(string Cardno, long MemberId)
        {
            Common objres = new Common();
            try
            {
                var res = await _dataRepository.VerifyPhysicalCard(Cardno, MemberId);
                if (res != null && res.flag == 0)
                {

                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = res.msg;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("CreateRazorpayXContact")]
        public async Task<Common> CreateRazorpayXContact(CreateRazorPayContactRequest model)
        {

            Common objres = new Common();
            ContactRequest data = new ContactRequest();
            data.name = model.name;
            data.contact = model.contact;
            data.email = model.email;
            data.type = model.type;
            data.reference_id = model.reference_id;
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {
                //var check = _dataRepository.CheckAmountByTransactionId(model.transactionId);
                //if (check.Result != null && check.Result.message != null && decimal.Parse(check.Result.message) >= model.amount)
                //{
                var result = await _dataRepository.CreateRazorpayXContact(model, 1);
                if (result != null && result.flag == 1)
                {
                    js = new DataContractJsonSerializer(typeof(ContactRequest));
                    ms = new MemoryStream();
                    js.WriteObject(ms, data);
                    ms.Position = 0;
                    sr = new StreamReader(ms);
                    CustData = sr.ReadToEnd();
                    sr.Close();
                    ms.Close();
                    var res = CommonJsonPostRequestobj.sendRequest(razorpaycontactsUrl, "POST", CustData, model.memberId);
                    if (res != null && res.statuscode == 200 || res.statuscode == 201)
                    {
                        var objresponse = JsonConvert.DeserializeObject<CreateContactResponse>(res.responseText);
                        var result2 = await _dataRepository.UpdateRazorpayXContact(objresponse, 2);
                        FundAccountRequest fundrequest = new FundAccountRequest();
                        Bank_accountRequest bankdetails = new Bank_accountRequest();
                        fundrequest.contact_id = objresponse.id;
                        fundrequest.account_type = "bank_account";
                        bankdetails.name = model.name;
                        bankdetails.ifsc = model.ifsc;
                        bankdetails.account_number = model.account_number;
                        fundrequest.bank_account = bankdetails;
                        var fundaccountresponse = FundAccount(fundrequest, model.amount, model.memberId);
                        objres.message = fundaccountresponse.Result.message;
                        objres.response = fundaccountresponse.Result.response;

                    }
                    else
                    {
                        objres.message = res.responseText;
                        objres.response = "error";
                    }
                }
                else
                {
                    objres.message = result.msg;
                    objres.response = "error";
                }
            }



            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";

            }
            return objres;
        }


        [HttpPost("FundAccount")]
        public async Task<Common> FundAccount(FundAccountRequest model, int amount, long memberId)
        {

            Common objres = new Common();
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {

                js = new DataContractJsonSerializer(typeof(FundAccountRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                var res = CommonJsonPostRequestobj.sendRequest(razorpayfundAccountUrl, "POST", CustData, memberId);

                if (res != null && res.statuscode == 200 || res.statuscode == 201)
                {
                    var objresponse = JsonConvert.DeserializeObject<FundAccountResponse>(res.responseText);
                    var result = await _dataRepository.UpdateRazorpayXFundAccount(objresponse);
                    if (result.flag == 1)
                    {
                        payoutsRequest request = new payoutsRequest();
                        request.account_number = "409001301619";
                        request.fund_account_id = objresponse.id;
                        request.amount = 410;
                        request.currency = "INR";
                        request.mode = "IMPS";
                        request.purpose = "payout";
                        request.queue_if_low_balance = true;
                        request.reference_id = GetTimestamp(DateTime.Now);
                        request.narration = "Bank Verification";
                        var checkstatus = await _dataRepository.CheckBankStatus(memberId);
                        if (checkstatus.flag == 0)
                        {
                            var payoutres = payouts(request, memberId);
                            objres.message = payoutres.Result.message;
                            objres.response = payoutres.Result.response;
                        }


                    }
                    else
                    {
                        objres.message = result.msg;
                        objres.response = "error";
                    }

                }
                else
                {
                    objres.message = res.responseText;
                    objres.response = "error";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";

            }
            return objres;
        }

        [HttpPost("payouts")]
        public async Task<Common> payouts(payoutsRequest model, long memberId)
        {

            payoutsdataRequest data = new payoutsdataRequest();
            data.account_number = model.account_number;
            data.fund_account_id = model.fund_account_id;
            data.amount = model.amount;
            data.currency = model.currency;
            data.mode = model.mode;
            data.purpose = model.purpose;
            data.queue_if_low_balance = model.queue_if_low_balance;
            data.reference_id = model.reference_id;
            data.narration = model.narration;
            Common objres = new Common();
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {

                var result = await _dataRepository.insertpayout(model, 1);
                if (result != null && result.Id > 0)
                {
                    js = new DataContractJsonSerializer(typeof(payoutsdataRequest));
                    ms = new MemoryStream();
                    js.WriteObject(ms, data);
                    ms.Position = 0;
                    sr = new StreamReader(ms);
                    CustData = sr.ReadToEnd();
                    sr.Close();
                    ms.Close();
                    var res = CommonJsonPostRequestobj.sendRequest(razorpaypayoutUrl, "POST", CustData, memberId);

                    if (res != null && res.statuscode == 200)
                    {
                        var objresponse = JsonConvert.DeserializeObject<payoutresponse>(res.responseText);
                        model.entity = objresponse.entity;
                        model.payoutId = objresponse.id;
                        model.status = objresponse.status;
                        model.created_at = objresponse.created_at.ToString();
                        model.Pk_CustomerPayoutId = result.Id;
                        var result2 = await _dataRepository.insertpayout(model, 2);
                        if (result2.flag == 1)
                        {
                            objres.message = result2.msg;
                            objres.response = "success";
                        }
                        else
                        {
                            objres.message = result2.msg;
                            objres.response = "error";
                        }

                    }
                    else
                    {
                        objres.message = res.responseText;
                        objres.response = "error";
                    }
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";
            }
            return objres;
        }
        public static String GetTimestamp(DateTime value)
        {
            return value.ToString("yyyyMMddHHmmssffff");
        }
        [HttpGet("Addedfunddetailsv2")]
        public async Task<CommonResponse<List<cardamountdetails>>> Addedfunddetailsv2(long memberId, string type)
        {
            CommonResponse<List<cardamountdetails>> objres = new CommonResponse<List<cardamountdetails>>();
            try
            {
                var res = await _dataRepository.Cardamountdetails(memberId, type);

                if (res != null && res.Count() > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "No record found";
                }


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("GetCommissionTransfered")]
        public async Task<CommonResponse<List<CommissionTransferdetail>>> GetCommissionTransfered(long memberId)
        {

            CommonResponse<List<CommissionTransferdetail>> objres = new CommonResponse<List<CommissionTransferdetail>>();
            try
            {
                var res = await _dataRepository.GetCommissionTransfer(memberId);
                if (res != null && res.Count() > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "No record found";
                }


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;

        }
        [HttpGet("CommissionTransferedDetails")]
        public async Task<CommonResponse<CommissionDetailsResponse>> CommissionTransferedDetails(long memberId, decimal amount)
        {
            CommonResponse<CommissionDetailsResponse> objres = new CommonResponse<CommissionDetailsResponse>();
            try
            {

                var res = await _dataRepository.transferedCommissionDetails(memberId, amount);
                if (res != null && res.message == "success")
                {
                    objres.result = new CommissionDetailsResponse();
                    objres.response = "success";
                    objres.message = "success";
                    objres.result.data = res;
                    var bank = await _dataRepository.bankdetails(memberId);
                    objres.result.bankdetails = bank;
                }
                else
                {
                    objres.response = "error";
                    objres.message = res.message;

                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;

            }

            return objres;
        }

        [HttpPost("commissiontransferByAdmin")]
        public async Task<Common> commissiontransferByAdmin(long memberId, decimal amount, decimal tds)
        {
            payoutsdataRequest data = new payoutsdataRequest();
            Common resdata = new Common();

            payoutresponse objres = new payoutresponse();
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {
                var res = await _dataRepository.transferedCommissionDetails(memberId, amount);
                if (res.tdscharge == tds)
                {
                    var result1 = await _dataRepository.bankdetails(memberId);
                    if (result1 != null)
                    {


                        data.account_number = "409001301619";
                        data.fund_account_id = result1.bankId;
                        data.amount = Convert.ToInt32((amount - 10 - tds) * 100);
                        data.currency = "INR";
                        data.mode = "IMPS";
                        data.purpose = "payout";
                        data.queue_if_low_balance = true;
                        data.reference_id = GetTimestamp(DateTime.Now);
                        data.narration = "commission transfer";
                        var result3 = await _dataRepository.transfercommission(1, memberId, amount, result1.account_number, "", 0, 0, 0, 0);
                        if (result1 != null && result3.response == "success")
                        {
                            js = new DataContractJsonSerializer(typeof(payoutsdataRequest));
                            ms = new MemoryStream();
                            js.WriteObject(ms, data);
                            ms.Position = 0;
                            sr = new StreamReader(ms);
                            CustData = sr.ReadToEnd();
                            sr.Close();
                            ms.Close();
                            var res1 = CommonJsonPostRequestobj.sendRequest(razorpaypayoutUrl, "POST", CustData, memberId);

                            if (res1 != null && res1.statuscode == 200)
                            {
                                objres = JsonConvert.DeserializeObject<payoutresponse>(res1.responseText);
                                var result2 = await _dataRepository.transfercommission(2, memberId, amount, result1.account_number, objres.id, result3.commissionId, result3.tdsId, result3.transferchargeId, result3.transferCommissionId);
                                if (result2 != null && result2.response == "success")
                                {
                                    resdata.response = result2.response;
                                    resdata.message = result2.message;
                                }


                            }
                            else
                            {
                                resdata.response = "error";
                                resdata.message = res1.responseText;
                            }

                        }
                        else
                        {
                            resdata.response = "error";
                            resdata.message = result3.message;
                        }
                    }
                    else
                    {
                        resdata.response = "error";
                        resdata.message = "please update your bank details";
                    }
                }
                else
                {
                    resdata.response = "error";
                    resdata.message = "please enter valid amount";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                resdata.response = "error";
                resdata.message = ex.Message;

            }
            return resdata;
        }

        [HttpPost("commissiontransfer")]
        public async Task<Common> commissiontransfer(long memberId, decimal amount, decimal tds)
        {
            Common res = new Common();
            try
            {
                res = await _dataRepository.AddCommissionTransferRequest(memberId, amount, tds, DateTime.UtcNow.Ticks.ToString().Substring(0, 14));
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }


        [HttpGet("GetInformationMessage")]
        public async Task<CommonResponse<List<Information>>> GetInformationMessage(long memberId, string appType, string appVersion)
        {
            CommonResponse<List<Information>> res = new CommonResponse<List<Information>>();
            try
            {

                var result = await _dataRepository.GetInformationMessage(memberId, appType, appVersion);
                if (result != null && result.Count() > 0)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }


            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("FAQ")]
        public async Task<CommonResponse<List<FAQResponse>>> FAQ(long faqId = 0)
        {
            CommonResponse<List<FAQResponse>> res = new CommonResponse<List<FAQResponse>>();
            try
            {
                List<FAQResponse> data = new List<FAQResponse>();

                var result = await _dataRepository.FAQ(faqId);

                if (result != null && result.Count > 0)
                {
                    if (faqId == 0)
                    {
                        foreach (var item in result)
                        {
                            FAQResponse objfaq = new FAQResponse();
                            List<SubFAQ> SubFAQlist = new List<SubFAQ>();
                            var subfaq = await _dataRepository.FAQ(item.FAQID);
                            objfaq.FAQID = -1;
                            objfaq.Question = item.Question;
                            objfaq.Answer = item.Answer;
                            objfaq.link = item.link;
                            objfaq.Videolink = item.Videolink;
                            foreach (var datares in subfaq)
                            {
                                SubFAQ obj = new SubFAQ();
                                obj.FAQID = datares.FAQID;
                                obj.Question = datares.Question;
                                SubFAQlist.Add(obj);
                            }
                            objfaq.SUBFAQ = SubFAQlist;
                            data.Add(objfaq);
                        }
                    }
                    else
                    {
                        foreach (var item in result)
                        {
                            FAQResponse objfaq = new FAQResponse();

                            objfaq.FAQID = item.FAQID;
                            objfaq.Question = item.Question;
                            objfaq.Answer = item.Answer;
                            objfaq.link = item.link;
                            objfaq.Videolink = item.Videolink;
                            data.Add(objfaq);
                        }
                    }
                    res.result = data;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "No record found";
                }


            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("OrderDetail")]
        public async Task<CommonResponse<OrderDetailResponse>> OrderDetail(long TransId)
        {
            CommonResponse<OrderDetailResponse> res = new CommonResponse<OrderDetailResponse>();
            try
            {
                var result = await _dataRepository.OrderDetail(TransId);
                if (result != null && result.orderhead != null
                    && result.orderhead.data != null && result.orderhead.data.Count() > 0)
                {
                    if (result.orderhead.data != null && result.orderhead.data.Count() > 0)
                    {
                        result.orderhead.header = result.orderhead.data[0].value.ToString();
                        result.orderhead.data.RemoveAt(0);
                    }
                    if (result.orderdetails.data != null && result.orderdetails.data.Count() > 0)
                    {
                        result.orderdetails.header = result.orderdetails.data[0].value.ToString();
                        result.orderdetails.data.RemoveAt(0);
                    }
                    if (result.orderstatus.data != null && result.orderstatus.data.Count() > 0)
                    {
                        result.orderstatus.header = result.orderstatus.data[0].value.ToString();
                        result.orderstatus.data.RemoveAt(0);
                    }
                    if (result.summarydetails.data != null && result.summarydetails.data.Count() > 0)
                    {
                        result.summarydetails.header = result.summarydetails.data[0].value.ToString();

                        result.summarydetails.data.RemoveAt(0);
                    }

                    if (result.payment.data != null && result.payment.data.Count() > 0)
                    {
                        result.payment.header = result.payment.data[0].value.ToString();
                        result.payment.data.RemoveAt(0);
                    }









                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("SupportRequest")]
        public async Task<CommonResponse<Common>> SupportRequest(SupportRequest model)
        {
            CommonResponse<Common> response = new CommonResponse<Common>();
            Common res = new Common();
            try
            {
                model.RepliedBy = "User";
                res = await _dataRepository.SupportRequest(model);
                response.result = res;
                response.response = "success";
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                response.response = "error";
                response.message = ex.Message;
            }
            return response;
        }
        [HttpGet("SupportRequestStatus")]
        public async Task<CommonResponse<SupportRequestdataresponse>> SupportRequestStatus(long memberId)
        {
            CommonResponse<SupportRequestdataresponse> res = new CommonResponse<SupportRequestdataresponse>();
            SupportRequestdataresponse data = new SupportRequestdataresponse();
            try
            {

                var result = await _dataRepository.SupportRequestStatus(memberId);
                if (result != null && result.Count > 0)
                {
                    res.response = "success";
                    data.result = result;
                    res.result = data;
                }
                else
                {
                    res.response = "error";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpGet("SupportRequestByTicket")]
        public async Task<CommonResponse<SupportMessageDetailsresponse>> SupportRequestByTicket(string TicketNo)
        {
            CommonResponse<SupportMessageDetailsresponse> response = new CommonResponse<SupportMessageDetailsresponse>();
            SupportMessageDetailsresponse res = new SupportMessageDetailsresponse();
            try
            {
                var result = await _dataRepository.SupportRequestByTicket(TicketNo);
                if (result != null && result.Count > 0)
                {
                    res.result = result;
                    response.response = "success";
                    response.result = res;
                }
                else
                {
                    response.response = "error";
                    response.message = "Record not found";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                response.response = "error";
                response.message = ex.Message;
            }
            return response;
        }
        [HttpPost("RepliedMessage")]
        public async Task<CommonResponse<Common>> RepliedMessage(ReplyMessage model)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                model.RepliedBy = "User";
                var result = await _dataRepository.RepliedMessage(model);
                res.result = result;
                res.response = "success";
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }

            return res;
        }
        [EnableCors("MyPolicy")]
        [HttpPost("UploadSupportFile")]
        public async Task<SupportResponse> UploadSupportFile(string MemberId)
        {
            SupportResponse objcm = new SupportResponse();
            try
            {
                string base64Decoded;
                byte[] database64 = System.Convert.FromBase64String(MemberId);
                base64Decoded = System.Text.ASCIIEncoding.ASCII.GetString(database64);
                long Id = Convert.ToInt64(base64Decoded);
                var formkeys = HttpContext.Request.Form.Keys;
                string DocumentType = string.Empty;
                foreach (var key in formkeys)
                {
                    if (key != null && key.Length > 0)
                    {
                        DocumentType = key;
                    }
                }
                if (!string.IsNullOrEmpty(DocumentType))
                {
                    var files = HttpContext.Request.Form.Files;
                    var webRoot = _env.WebRootPath;
                    if (files.Count > 0)
                    {
                        foreach (var Image in files)
                        {
                            if (Image != null && Image.Length > 0)
                            {
                                var file = Image;
                                string childfolderpath = "/ReadWriteData/" + DocumentType;
                                var folderpath = webRoot + "\\ReadWriteData\\" + DocumentType;

                                var contenttype = file.ContentType;
                                int count = file.FileName.Split('.').Length - 1;
                                if (count == 1)
                                {
                                    if (contenttype == "image/png" || contenttype == "image/jpeg" || contenttype == "image/jpg" || contenttype == "image/pdf")
                                    {


                                        if (file.Length > 0 && file.Length < 2091009)
                                        {
                                            if (!Directory.Exists(folderpath))
                                            {
                                                Directory.CreateDirectory(folderpath);
                                            }
                                            string extension = Path.GetExtension(file.FileName);
                                            if (extension.ToLower() == ".jpeg" || extension.ToLower() == ".jpg" || extension.ToLower() == ".pdf" || extension.ToLower() == ".png")
                                            {
                                                var fileName = file.FileName;
                                                string savefilepath = childfolderpath + "/" + DocumentType + "_" + Id.ToString() + extension;
                                                var filepath = folderpath + "\\" + DocumentType + "_" + Id.ToString() + extension;

                                                if (System.IO.File.Exists(filepath))
                                                {
                                                    System.IO.File.Delete(filepath);
                                                }
                                                using (var fileStream = new FileStream(filepath, FileMode.Create))
                                                {
                                                    await file.CopyToAsync(fileStream);


                                                }
                                                var v = ValidateMimeType(System.IO.File.ReadAllBytes(filepath), contenttype);
                                                if (v)
                                                {
                                                    var res = await _dataRepository.ImageUpload(savefilepath, DocumentType, Id); ;
                                                    if (res != null && res.flag == 1)
                                                    {
                                                        objcm.response = "success";
                                                        if (DocumentType == "Support")
                                                        {
                                                            objcm.message = DocumentType + " file uploded successfully";
                                                        }
                                                        else
                                                        {
                                                            objcm.message = DocumentType + " uploded successfully";
                                                        }

                                                        objcm.imageurl = savefilepath;
                                                        objcm.SupportId = res.Id;

                                                    }
                                                    else
                                                    {
                                                        objcm.response = "error";
                                                        objcm.message = "An error occured while uploading " + DocumentType;
                                                    }
                                                }
                                                else
                                                {
                                                    if (System.IO.File.Exists(filepath))
                                                    {
                                                        System.IO.File.Delete(filepath);
                                                    }
                                                    objcm.response = "error";
                                                    objcm.message = "Only jpeg,jpg,pdf,png files are allowed";
                                                }
                                            }
                                            else
                                            {
                                                objcm.response = "error";
                                                objcm.message = "Only jpeg,jpg,pdf,png files are allowed";
                                            }


                                        }
                                        else
                                        {
                                            objcm.response = "error";
                                            objcm.message = "Upto 2MB file size allowed";
                                        }
                                    }
                                    else
                                    {
                                        objcm.response = "error";
                                        objcm.message = "Invalid Content Type";
                                    }
                                }
                                else
                                {
                                    objcm.response = "error";
                                    objcm.message = "double extension not allowed";
                                }
                            }
                            else
                            {
                                objcm.response = "error";
                                objcm.message = "Please select file";
                            }
                        }
                    }
                    else
                    {
                        objcm.response = "error";
                        objcm.message = "Please select file";
                    }
                }

                else
                {
                    objcm.response = "error";
                    objcm.message = "document type missing";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objcm.response = "error";
                objcm.message = ex.Message;
            }

            return objcm;
        }

        [HttpGet("PineToken")]
        public async Task<string> PineToken()
        {
            string token = "";
            try
            {
                var tokenresult = await _dataRepository.Getpinetoken(2, "", "");
                if (tokenresult.flag == 0)
                {
                    var res = PineCommonRequestobj.sendRequest(PineCardbaseUrl + "" + PINECARDTOKENURL, "GET", null);
                    if (res.statuscode == 200)
                    {
                        dynamic result = JsonConvert.DeserializeObject<object>(res.responseText);
                        _dataRepository.Getpinetoken(1, result.accessToken.ToString(), result.tokenExpiryTime.ToString());
                        return token = result.accessToken.ToString();
                    }
                    else
                    {
                        return "";
                    }
                }
                else
                {
                    return token = tokenresult.msg;
                }


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                return "";

            }

        }

        [HttpGet("checkSum")]
        public string checkSum(string externalRequestId, string cardschemeId, string amount, string quantity)
        {
            string checksum = "";
            try
            {
                var res = PineCommonRequestobj.Checksum(PineCardbaseUrl + "" + CheckSumUrl, externalRequestId, cardschemeId, amount, quantity);
                if (res.statuscode == 200)
                {
                    dynamic result = JsonConvert.DeserializeObject<object>(res.responseText);
                    return checksum = result.accessToken.ToString();
                }
                else
                {
                    return "";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                return "";

            }

        }
        [HttpPost("CardBalance")]
        public async Task<CommonResponse<PineCardBalanceResponse>> CardBalance(PineCardBalanceRequest model)
        {
            CommonResponse<PineCardBalanceResponse> res = new CommonResponse<PineCardBalanceResponse>();
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {


                js = new DataContractJsonSerializer(typeof(PineCardBalanceRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                string token = await PineToken();
                var response = PineCommonRequestobj.sendRequest(PineCardbaseUrl + "" + PINECARDBALANCEURL, "POST", CustData, token);
                var r = await _dataRepository.PineCardHistroy(model.memberId, "", CustData, response.responseText, token, "CardBalance");
                if (response.statuscode == 200)
                {
                    res.result = JsonConvert.DeserializeObject<PineCardBalanceResponse>(response.responseText);

                    if (res.result.cardBalanceDetailList[0].responseCode == 0)
                    {

                        res.response = "success";

                    }
                    else
                    {
                        res.response = "error";

                    }

                }
                else
                {
                    res.message = response.responseText;
                    res.response = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);

                res.message = ex.Message;
                res.response = "error";
            }
            return res;
        }


        [HttpPost("CardTransactionDetail")]
        public async Task<CommonResponse<PineCardTransactionDetailResponse>> CardTransactionDetail(PineCardTransactionDetailRequest model)
        {
            CommonResponse<PineCardTransactionDetailResponse> res = new CommonResponse<PineCardTransactionDetailResponse>();
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {


                var newusercardstatus = await _dataRepository.CheckNewUserCardStatus(model.memberId);
                if (newusercardstatus.flag == 1)
                {


                    var response = PineCommonRequestobj.sendRequestV1("https://mobilepefintech.com/api/card/CardTransactionDetail", "POST", CustData);
                }
                else
                {

                    js = new DataContractJsonSerializer(typeof(PineCardTransactionDetailRequest));
                    ms = new MemoryStream();
                    js.WriteObject(ms, model);
                    ms.Position = 0;
                    sr = new StreamReader(ms);
                    CustData = sr.ReadToEnd();
                    sr.Close();
                    ms.Close();
                    string token = await PineToken();

                    var response = PineCommonRequestobj.sendRequest(PineCardbaseUrl + "" + PINECARDTransactionDetailURL, "POST", CustData, token);
                    var r = await _dataRepository.PineCardHistroy(model.memberId, "", CustData, response.responseText, token, "CardTransactionDetail");
                    if (response.statuscode == 200)
                    {
                        res.result = JsonConvert.DeserializeObject<PineCardTransactionDetailResponse>(response.responseText);

                        if (res.result.responseCode == 0)
                        {

                            res.response = "success";



                        }
                        else
                        {
                            res.response = "error";

                        }

                    }
                    else
                    {
                        res.message = response.responseText;
                        res.response = "error";
                    }
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.message = ex.Message;
                res.response = "error";
            }
            return res;
        }

        [HttpGet("DashboardV2")]
        public async Task<CommonResponse<DashboardV2Response>> DashboardV2(long memberId)
        {
            CommonResponse<DashboardV2Response> res = new CommonResponse<DashboardV2Response>();
            try
            {
                var result = await _dataRepository.DashboardDetailV2(memberId);
                if (result != null)
                {
                    if (result.topheader.data != null && result.topheader.data.Count() > 0)
                    {
                        result.topheader.header = result.topheader.data[0].value.ToString();
                        result.topheader.data.RemoveAt(0);
                    }

                    if (result.data1.data != null && result.data1.data.Count() > 0)
                    {
                        result.data1.header = result.data1.data[0].value.ToString();
                        result.data1.data.RemoveAt(0);

                    }
                    if (result.data2.data != null && result.data2.data.Count() > 0)
                    {
                        result.data2.header = result.data2.data[0].value.ToString();
                        result.data2.data.RemoveAt(0);
                    }
                    if (result.data3.data != null && result.data3.data.Count() > 0)
                    {
                        result.data3.header = result.data3.data[0].value.ToString();
                        result.data3.data.RemoveAt(0);
                    }






                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("ProductDetials")]
        public async Task<CommonResponse<ProductDetailsResponse>> ProductDetials(long productDetialsId)
        {
            CommonResponse<ProductDetailsResponse> res = new CommonResponse<ProductDetailsResponse>();
            List<avialableoffer> avialableoffers = new List<avialableoffer>();
            // avialableoffers.Add(new avialableoffer { offer = "" });
            try
            {
                var result = await _dataRepository.ProductDetail(productDetialsId);

                if (result != null)
                {
                    if (result.productdetails.productReviews.Count > 0)
                    {
                        for (int i = 0; i < result.productdetails.productReviews.Count; i++)
                        {
                            var reviewres = await _dataRepository.ReviewUser(result.productdetails.productReviews[i].user_id);
                            result.productdetails.productReviews[i].userName = reviewres.Name;
                            result.productdetails.productReviews[i].userImage = reviewres.ProfilePic;
                        }

                    }
                    result.productdetails.avialableoffer = avialableoffers;
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("AddCartItem")]
        public async Task<CommonResponse<Common>> AddCartItem(CartRequest model)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                if (string.IsNullOrEmpty(model.RequestType))
                {
                    res.response = "error";
                    res.message = "RequestType is mandatory";
                }
                else
                {
                    var result = await _dataRepository.AddCartItem(model);
                    if (result != null)
                    {
                        res.result = result;
                        res.response = "success";

                    }
                    else
                    {
                        res.response = "error";
                        res.message = "error";
                    }
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("GetCartItem")]
        public async Task<CommonResponse<CartRespone>> GetCartItem(long memberId)
        {
            CommonResponse<CartRespone> res = new CommonResponse<CartRespone>();
            CartRespone data = new CartRespone();
            List<CartList> cartlist = new List<CartList>();
            cartsummary summary = new cartsummary();
            decimal amount = 0;
            try
            {
                var result = await _dataRepository.GetCartItem(memberId);
                if (result != null)
                {
                    if (result.Count > 0)
                    {
                        foreach (var item in result)
                        {
                            amount = amount + Convert.ToDecimal(item.OfferPrice);
                        }
                    }
                    summary.discountAmount = 0.0M;
                    summary.shippingAmount = 0.0M;
                    summary.taxAmount = 0.0M;
                    summary.payableAmount = amount;
                    summary.totalAmount = amount + summary.shippingAmount + summary.taxAmount;
                    data.cartsummary = summary;
                    data.cartlist = result;
                    res.result = data;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("RemoveCartItem")]
        public async Task<CommonResponse<Common>> RemoveCartItem(long Pk_CartItemId)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.RemoveCartItem(Pk_CartItemId);
                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("UpdateProductQuantity")]
        public async Task<CommonResponse<Common>> UpdateProductQuantity(long Pk_CartItemId, string type)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.UpdateProductQuantity(Pk_CartItemId, type);
                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("CheckDeliveryAddress")]
        public async Task<CommonResponse<Common>> CheckDeliveryAddress(long ProductId, string pincode)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.CheckDeliveryAddress(ProductId, pincode);
                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpPost("AddReview")]
        public async Task<CommonResponse<Common>> AddReview(Review model)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.AddReview(model);
                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("ProductList")]
        public async Task<CommonResponse<List<ProductList>>> ProductList(int? CategoryId, string BrandId, int? SizeId, int? ColorId, int? SubategoryId, int Offset, int Page, string Sort)
        {
            CommonResponse<List<ProductList>> res = new CommonResponse<List<ProductList>>();
            try
            {
                var brandxml = "<brand>";
                if (Page == 0)
                {
                    Page = 9;
                }
                if (BrandId == "null" || BrandId == null)
                {
                    BrandId = null;
                    brandxml = null;
                }
                else
                {
                    var brand = BrandId.Split(',');

                    for (int i = 0; i < brand.Length; i++)
                    {
                        brandxml += "<brandIddetails><Id>" + brand[i] + "</Id></brandIddetails>";
                    }
                    brandxml += "</brand>";
                }
                var result = await _dataRepository.ProductList(CategoryId, brandxml, SizeId, ColorId, SubategoryId, Offset, Page, Sort);
                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpGet("V2/ProductList")]
        public async Task<CommonResponse<ProductData>> ProductList_V2(int? CategoryId, string BrandId, int? SizeId, int? ColorId, int? SubategoryId, int Offset, int Page, int Sort, int SearchTypeId, int SearchId)
        {
            CommonResponse<ProductData> res = new CommonResponse<ProductData>();
            try
            {
                var brandxml = "<brand>";
                if (Page == 0)
                {
                    Page = 9;
                }
                if (BrandId == "null" || BrandId == null)
                {
                    BrandId = null;
                    brandxml = null;
                }
                else
                {
                    var brand = BrandId.Split(',');

                    for (int i = 0; i < brand.Length; i++)
                    {
                        brandxml += "<brandIddetails><Id>" + brand[i] + "</Id></brandIddetails>";
                    }
                    brandxml += "</brand>";
                }
                var result = await _dataRepository.ProductList_V2(CategoryId, brandxml, SizeId, ColorId, SubategoryId, Offset, Page, Sort.ToString(), SearchTypeId, SearchId);
                if (result != null)
                {
                    if (result.filter != null && result.filter.Count > 0)
                    {
                        for (int i = 0; i < result.filter.Count; i++)
                        {
                            var data = await _dataRepository.GetFilterData(result.filter[i].Text);
                            result.filter[i].data = data;
                        }
                    }
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("GetVoucherBrand")]
        public async Task<CommonResponse<vocherresponse>> GetVoucherBrand(string Brand)
        {
            CommonResponse<vocherresponse> res = new CommonResponse<vocherresponse>();
            try
            {

                var result = await _dataRepository.GetVoucherBrand(Brand);
                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("AddUserAddress")]
        public async Task<CommonResponse<Common>> AddUserAddress(UserAddress model)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.UserAddress(model);
                if (result != null && result.response == "success")
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = result.message;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("DeleteUserAddress")]
        public async Task<CommonResponse<Common>> DeleteUserAddress(UserAddress model)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.DeleteUserAddress(model);
                if (result != null && result.response == "success")
                {
                    res.result = result;
                    res.response = "success";
                    res.message = result.message;
                }
                else
                {
                    res.response = "error";
                    res.message = result.message;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpGet("GetUserAddress")]
        public async Task<CommonResponse<UserAddressresponse>> GetUserAddress(long memberId, string RequestType)
        {
            CommonResponse<UserAddressresponse> res = new CommonResponse<UserAddressresponse>();

            UserAddressresponse result = new UserAddressresponse();

            try
            {
                if (string.IsNullOrEmpty(RequestType))
                {
                    res.response = "error";
                    res.message = "RequestType is mandatory";
                }
                else
                {
                    result = await _dataRepository.GetUserAddress(memberId, RequestType);
                    if (result != null)
                    {
                        cartsummary summary = new cartsummary();
                        decimal amount = 0;
                        if (result.purchasedetails.Count > 0)
                        {
                            foreach (var item in result.purchasedetails)
                            {
                                amount = amount + Convert.ToDecimal(item.ProductAmt);
                            }
                        }
                        summary.discountAmount = 0.0M;
                        summary.shippingAmount = 0.0M;
                        summary.taxAmount = 0.0M;
                        summary.payableAmount = amount;
                        summary.totalAmount = amount + summary.shippingAmount + summary.taxAmount;

                        res.result = result;
                        res.result.summary = summary;
                        res.response = "success";

                    }
                    else
                    {
                        res.response = "error";
                        res.message = "error";
                    }
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("CreateOrder")]
        public async Task<CommonResponse<OrderResponse>> CreateOrder(CreateOrder model)
        {
            CommonResponse<OrderResponse> res = new CommonResponse<OrderResponse>();
            try
            {
                if (model.CouponAmount > 0)
                {
                    model.IsCouponApplied = true;
                }
                if (model.cartdata.Count > 0)
                {
                    string cart = "<Cart>";
                    foreach (var item in model.cartdata)
                    {
                        cart += "<CartItem><cartId>" + item.cartId + "</cartId></CartItem>";
                    }
                    cart += "</Cart>";
                    model.cartitem = cart;
                }

                model.paymentstatus = "success";
                model.CustomerId = model.memberId;
                var check = await _dataRepository.CheckAmountByTransactionId(model.PaymentId);
                if (check.message != null && decimal.Parse(check.message) >= model.PaidAmount)
                {
                    var result = await _dataRepository.CreateOrder(model);
                    if (result != null && result.response == "success")
                    {

                        var couponresponse = _dataRepository.RedeemPoint(model.CustomerId, Convert.ToInt32(model.CouponAmount), res.Id, model.PaymentId, model.PaidAmount, result.Payout);

                        res.result = result;
                        res.response = "success";
                        res.message = result.message;
                        res.Id = result.Id;

                    }
                    else
                    {
                        res.response = "error";
                        res.message = result.message;
                    }
                }
                else
                {
                    res.response = "error";
                    res.message = "invalid amount";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("MallOrder")]
        public async Task<CommonResponse<MallOrderDetail>> MallOrder(string paymentId)
        {
            CommonResponse<MallOrderDetail> res = new CommonResponse<MallOrderDetail>();
            customerordersummary customerordersummary = new customerordersummary();

            try
            {
                var result = await _dataRepository.MallOrderDetail(paymentId);
                var result2 = await _dataRepository.GetPaymentMethod(paymentId);
                if (result != null)
                {
                    if (result.customerOrderItem.Count > 0)
                    {
                        for (int i = 0; i < result.customerOrderItem.Count; i++)
                        {
                            List<productstatus> ls = new List<productstatus>();
                            ls = await _dataRepository.GetorderstatusV3(result.customerOrder.orderId, result.customerOrderItem[i].vendorId.ToString(), result.customerOrderItem[i].pK_ProductId);
                            result.customerOrderItem[i].status = ls;
                            customerordersummary.item = customerordersummary.item + result.customerOrderItem[i].offerPrice;
                        }
                    }
                    customerordersummary.discount = result.customerOrder.discount;
                    customerordersummary.total = customerordersummary.item - result.customerOrder.discount;
                    result.customerordersummary = customerordersummary;
                    result.paymentMethod = result2.paymentMethod;
                    result.helpdetails = result2.helpdetails;

                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpGet("CancelOrder")]
        public async Task<CommonResponse<Common>> CancelOrder(long pk_OrderItemId, long memberId, string reason)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();
            try
            {
                var result = await _dataRepository.CancelOrder(pk_OrderItemId, memberId, reason);
                if (result != null && result.response == "success")
                {
                    if (result.RedeemPoint > 0)
                    {
                        var objres = _dataRepository.CreatePoint(memberId, result.RedeemPoint, result.Id);
                    }
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("BuyVoucher")]
        public async Task<CommonResponse<VoucherResponse>> BuyVoucher(VoucherRequest model)
        {

            Common res = new Common();
            CommonResponse<VoucherResponse> dataresponse = new CommonResponse<VoucherResponse>();
            VoucherResponse response = new VoucherResponse();
            try
            {
                if (model.VoucherId == 509 || model.VoucherId == 510 || model.VoucherId == 511 || model.VoucherId == 512)
                {
                    var check = await _dataRepository.CheckAmountByTransactionId(model.paymentId);
                    if (check.message != null && decimal.Parse(check.message) >= model.amount - model.Discountamount)
                    {
                        dataresponse.response = "success";
                        dataresponse.message = "Voucher purcharsed successfully";
                    }
                    else
                    {
                        dataresponse.response = "error";
                        dataresponse.message = "error";
                    }
                }
                else
                {

                    vouchercart vouchercart = new vouchercart();
                    vouchercart.MemberId = model.MemberId;
                    vouchercart.Quantity = model.Quantity;
                    vouchercart.TotalAmount = model.amount;
                    vouchercart.VoucherId = model.VoucherId;
                    vouchercart.paymentId = model.paymentId;
                    var cartres = await _dataRepository.AddVoucherItem(vouchercart);
                    if (cartres != null && cartres.response.ToLower() == "success")
                    {

                        var checkvoucher = await _dataRepository.checkvoucher(model.MemberId, model.VoucherId);
                        model.ProductGuid = checkvoucher.ProductGuid;
                        model.amount = checkvoucher.amount;
                        model.Quantity = checkvoucher.Quantity;
                        model.Pk_CartId = cartres.Id;


                        var check = await _dataRepository.CheckAmountByTransactionId(model.paymentId);
                        if (model.amount >= decimal.Parse(check.message))
                        {
                            model.amount = (Convert.ToDecimal(model.amount) - ((Convert.ToDecimal(model.amount)) * 0.01m));
                        }


                        if (check.message != null && decimal.Parse(check.message) >= model.amount)
                        {
                            // model.amount = Math.Round(model.amount * 1.01m);
                            string voucherdetails = "<Vouchers>";
                            string ExternalOrderID = model.paymentId;
                            VOUCHERURL = VOUCHERURL.Replace("[ProductGuid]", model.ProductGuid).Replace("[ExternalOrderID]", ExternalOrderID).Replace("[Quantity]", model.Quantity.ToString());
                            var result = recConn.sendRequest(VOUCHERURL, "GET", "", model.MemberId);
                            var SaveJonRes = _dataRepository.SaveTravelRequest(result, "Voucher", int.Parse(model.MemberId.ToString()));


                            response = JsonConvert.DeserializeObject<VoucherResponse>(result);
                            response.VoucherId = model.VoucherId;
                            response.MemberId = model.MemberId;
                            response.paymentId = model.paymentId;
                            response.Pk_CartId = model.Pk_CartId;
                            response.Discountamount = model.Discountamount;
                            response.response = result;
                            foreach (var item in response.vPullVouchersResult.PullVouchers[0].Vouchers)
                            {
                                voucherdetails += "<VouchersDetails><EndDate>" + item.EndDate + "</EndDate><Value>" + item.Value + "</Value><VoucherGCcode>" + item.VoucherGCcode + "</VoucherGCcode><VoucherGuid>" + item.VoucherGuid + "</VoucherGuid><VoucherNo>" + item.VoucherNo + "</VoucherNo><Voucherpin>" + item.Voucherpin + "</Voucherpin></VouchersDetails>";
                            }
                            voucherdetails += "</Vouchers>";
                            var r = await _dataRepository.UpdateVoucherV2(response, voucherdetails);

                            if (r.Id == 1)
                            {
                                foreach (var item in response.vPullVouchersResult.PullVouchers[0].Vouchers)
                                {
                                    if (!string.IsNullOrEmpty(item.Voucherpin))
                                    {
                                        checkvoucher.valid = checkvoucher.valid + "<br>PIN: " + item.Voucherpin;
                                    }

                                    string message = "Greetings of the day from MobilePe!!!<br>Dear " + checkvoucher.name + ",<br>You are successfully purchased " + checkvoucher.BRAND + " voucher for Rs. " + item.Value + " <br>Find below your voucher details:";
                                    message = message + "<br><br>" + objsms.voucher(checkvoucher.valid, item.VoucherNo, item.Value, checkvoucher.BRAND, checkvoucher.Url);
                                    message = message + "<br><br>For any assistance or query connect us: support@mobilepe.co.in <br><br>Team MobilePe";
                                    var emailresponse = objsms.SendEmail(checkvoucher.email, checkvoucher.BRAND + " Voucher", message, checkvoucher.name);
                                }
                                dataresponse.response = "success";
                                dataresponse.message = r.message;
                                dataresponse.result = response;
                            }
                            else
                            {
                                dataresponse.response = "success";
                                dataresponse.message = "success";
                                dataresponse.result = response;
                            }
                        }
                        else
                        {
                            dataresponse.response = "error";
                            dataresponse.message = "invalid amount";
                            dataresponse.result = response;
                        }


                    }
                    else
                    {
                        dataresponse.response = "error";
                        dataresponse.message = "an error occurred";
                    }
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                dataresponse.response = "error";
                dataresponse.message = ex.Message;

            }
            return dataresponse;
        }


        [HttpGet("GetReplacementItem")]
        public async Task<CommonResponse<Replacement>> GetReplacementItem(long pk_OrderItemId)
        {
            CommonResponse<Replacement> res = new CommonResponse<Replacement>();

            try
            {

                var result = await _dataRepository.GetReplacementItem(pk_OrderItemId);

                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpPost("ReplacementRequest")]
        public async Task<CommonResponse<Common>> ReplacementRequest(ReplacementRequest model)
        {
            CommonResponse<Common> res = new CommonResponse<Common>();

            try
            {

                var result = await _dataRepository.ReplacementRequest(model);

                if (result != null)
                {
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpGet("GetCartCount")]
        public async Task<CommonResponse<CartCount>> GetCartCount(long memberId)
        {
            CommonResponse<CartCount> res = new CommonResponse<CartCount>();
            CartCount count = new CartCount();
            try
            {

                var result = await _dataRepository.GetCartCount(memberId);

                if (result != null)
                {
                    count.count = Convert.ToInt32(result.Id);
                    res.result = count;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }


        [HttpGet("GetMiniStatement_V2")]
        public async Task<CommonResponse<MinistatementV2Response>> GetMiniStatement_V2(long MemberId, int page, string transtype, string categorytype)
        {
            CommonResponse<MinistatementV2Response> objres = new CommonResponse<MinistatementV2Response>();
            try
            {
                var res = await _dataRepository.GetMiniStatement_V2(MemberId, page, transtype, categorytype);
                if (res != null && res.data != null && res.data.Count() > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("LedgerV2")]
        public async Task<CommonResponse<LedgerResultV2>> LedgerV2(long MemberId, string Type, int monthId, int yearId, int page, string commtype, string transtype, string categorytype)
        {
            CommonResponse<LedgerResultV2> objres = new CommonResponse<LedgerResultV2>();
            try
            {
                var res = await _dataRepository.LedgerV2(MemberId, Type, commtype, transtype, categorytype, monthId, yearId, page);
                if (res != null && res.balancedetails != null && res.balancedetails.Count() > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpGet("AllLedgerV2")]
        public async Task<CommonResponse<AllLedgerResponse>> AllLedgerV2(long memberId, string type, int monthId, int yearId, string level)
        {
            CommonResponse<AllLedgerResponse> objres = new CommonResponse<AllLedgerResponse>();
            objres.result = new AllLedgerResponse();
            try
            {
                var res = await _dataRepository.AllLedgerV2(memberId, type, monthId, yearId, level);
                if (res != null && res != null)
                {

                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("BusinessDashboardV2")]
        public async Task<CommonResponse<BusinessDashboardV2>> BusinessDashboardV2(long MemberId)
        {
            CommonResponse<BusinessDashboardV2> objres = new CommonResponse<BusinessDashboardV2>();
            try
            {
                var res = await _dataRepository.BusinessDashboardV2(MemberId);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpPost("GetHelp")]
        public async Task<CommonResponse<CustomerHelpResponse>> GetHelp(HelpRequest model)
        {
            CommonResponse<CustomerHelpResponse> objres = new CommonResponse<CustomerHelpResponse>();

            try
            {
                var res = await _dataRepository.GetHelp(model);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpGet("ViewTicket")]
        public async Task<CommonResponse<List<ViewTicket>>> ViewTicket(long MemberId)
        {
            CommonResponse<List<ViewTicket>> objres = new CommonResponse<List<ViewTicket>>();
            try
            {
                var res = await _dataRepository.ViewTicket(MemberId);
                if (res != null && res.Count > 0)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("GetBillInfo")]
        public CommonResponse<VenusBillInfoResponse> GetBillInfo(VenusBillInfoRequest model)
        {

            CommonResponse<VenusBillInfoResponse> response = new CommonResponse<VenusBillInfoResponse>();
            response.result = new VenusBillInfoResponse();
            response.result.Response = new VenusBillInfo();
            try
            {


                BILLFETCHURL = BILLFETCHURL.Replace("[OPCODE]", model.OpertorCode).Replace("[CUSTID]", model.CustomerId);
                var result = recConn.sendRequest(BILLFETCHURL, "GET", "", 0);

                var result1 = JsonConvert.DeserializeObject<ElectricityBillDataResponse>(result);
                if (result1.data.success == "false")
                {
                    response.response = "error";
                    response.message = result1.data.msg;
                }
                else
                {
                    response.response = "success";
                    response.result.Response.DueDate = result1.data.key_value[0].value;

                    response.result.Response.DueAmount = result1.data.bill_amount;
                    response.result.Response.ConsumerName = result1.data.key_value[1].value;
                    response.result.Response.ConsumerID = "";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                response.response = "error";
                response.message = ex.Message;
            }
            return response;
        }

        //[HttpPost("GetBillInfo")]
        //public CommonResponse<VenusBillInfoResponse> GetBillInfo(VenusBillInfoRequest model)
        //{

        //    CommonResponse<VenusBillInfoResponse> response = new CommonResponse<VenusBillInfoResponse>();
        //    try
        //    {

        //        model.TransactionNo = DateTime.UtcNow.Ticks.ToString().Substring(0, 12);
        //        BILLFETCHURL = BILLFETCHURL.Replace("[OPCODE]", model.OpertorCode).Replace("[TRANSNO]", model.TransactionNo).Replace("[CUSTID]", model.CustomerId).Replace("[MobileNo]", model.MobileNo);
        //        var result = recConn.sendRequest(BILLFETCHURL, "GET", "", 0);
        //        XmlDocument doc = new XmlDocument();
        //        doc.LoadXml(result);

        //        string json = JsonConvert.SerializeXmlNode(doc);
        //        response.result = JsonConvert.DeserializeObject<VenusBillInfoResponse>(json);
        //        if (response != null && response.result.Response != null && response.result.Response.ResponseStatus == "RCS")
        //        {
        //            response.response = "success";
        //            response.message = response.result.Response.Description;
        //        }
        //        else
        //        {
        //            response.response = "error";
        //            response.message = response.result.Response.Description;
        //        }

        //    }
        //    catch (Exception ex)
        //    {
        //        response.response = "error";
        //        response.message = ex.Message;
        //    }
        //    return response;
        //}
        [HttpPost("BillPay")]
        public async Task<CommonResponse<Common>> BillPay(VenusBillPayRequest model)
        {

            CommonResponse<Common> objres = new CommonResponse<Common>();

            VenusBillPayResponse response = new VenusBillPayResponse();
            try
            {
                var check = await _dataRepository.CheckAmountByTransactionId(model.TransactionNo);
                if (check.message != null && decimal.Parse(check.message) >= model.Amount)
                {
                    Random rand = new Random();
                    long randnum2 = (long)(rand.NextDouble() * 90000000000000) + 10000000000000;

                    model.ProcId = 1;
                    // model.merchantInfoTxn = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);


                    var res = await _dataRepository.BillRecharge(model);
                    if (res != null && res.Id > 0)
                    {
                        model.merchantInfoTxn = res.TransactionId;
                        //VENUSPAYBILLURL = VENUSPAYBILLURL.Replace("[OPCODE]", model.OpertorCode).Replace("[TRANSNO]", model.merchantInfoTxn.ToString()).Replace("[CUSTID]", model.CustomerId).Replace("[MobileNo]", model.MobileNo).Replace("[Amount]", model.Amount.ToString()).Replace("[OrderId]", model.OrderId);
                        //var result = recConn.sendRequest(VENUSPAYBILLURL, "GET", "", 0);
                        //XmlDocument doc = new XmlDocument();
                        //doc.LoadXml(result);
                        //model.response = result;
                        //string json = JsonConvert.SerializeXmlNode(doc);
                        //response = JsonConvert.DeserializeObject<VenusBillPayResponse>(json);
                        //if (response != null && response.response != null)
                        //{
                        //    model.ProcId = 2;
                        //    model.Id = res.Id;
                        //    model.description = response.response.Description;
                        //    model.status = response.response.ResponseStatus;


                        //    if (response.response.ResponseStatus == "TXN")
                        //    {
                        //        model.status = "Success";
                        //        model.optr_txn_id = response.response.OperatorTxnId;
                        //    }

                        //    var res1 = await _dataRepository.BillRecharge(model);
                        //    if (res1 != null && res1.Id > 0)
                        //    {
                        //        objres.message = "Bill " + response.response.ResponseStatus;
                        //        objres.response = response.response.ResponseStatus;
                        //    }

                        //}
                        //else
                        //{
                        //    objres.message = "Error";
                        //    objres.response = "error";
                        //}

                        objres.message = "Your Bill payment is under process";
                        objres.response = "Success";
                    }
                    else
                    {
                        objres.message = res.message;
                        objres.response = "error";
                    }
                }
                else
                {
                    objres.message = "error";
                    objres.response = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";
            }
            return objres;
        }
        /////////////////added
        ///version 3 api's
        [HttpGet("BusinessDashboardV3")]
        public async Task<CommonResponse<BusinessDashboardV3>> BusinessDashboardV3(long MemberId)
        {
            CommonResponse<BusinessDashboardV3> objres = new CommonResponse<BusinessDashboardV3>();
            try
            {
                var res = await _dataRepository.BusinessDashboardV3(MemberId);
                if (res != null)
                {
                    if (res.Second.data != null && res.Second.data.Count() > 1)
                    {
                        res.Second.Header = res.Second.data[0].LevelName;
                        res.Second.data.RemoveAt(0);

                    }
                    else
                    {
                        if (res.Second.data != null && res.Second.data.Count() > 0)
                        {
                            res.Second.data.RemoveAt(0);
                        }
                    }

                    if (res.Third.data != null && res.Third.data.Count() > 1)
                    {
                        res.Third.Header = res.Third.data[0].text;
                        res.Third.data.RemoveAt(0);

                    }
                    else
                    {
                        if (res.Third.data != null && res.Third.data.Count() > 0)
                        {
                            res.Third.data.RemoveAt(0);
                        }
                    }

                    objres.result = res;

                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpGet("DashboardV3")]
        public async Task<CommonResponse<DashboardV3Response>> DashboardV3(long memberId)
        {
            CommonResponse<DashboardV3Response> res = new CommonResponse<DashboardV3Response>();
            try
            {
                var result = await _dataRepository.DashboardDetailV3(memberId);
                if (result != null)
                {


                    if (result.data1.data != null && result.data1.data.Count() > 1)
                    {
                        result.data1.header = result.data1.data[0].value.ToString();
                        result.data1.data.RemoveAt(0);

                    }
                    else
                    {
                        if (result.data1.data != null && result.data1.data.Count() > 0)
                        {
                            result.data1.data.RemoveAt(0);
                        }
                    }
                    if (result.data2.data != null && result.data2.data.Count() > 1)
                    {
                        result.data2.header = result.data2.data[0].value.ToString();
                        result.data2.data.RemoveAt(0);
                    }
                    else
                    {
                        if (result.data2.data != null && result.data2.data.Count() > 0)
                        {
                            result.data2.data.RemoveAt(0);
                        }
                    }
                    if (result.data3.data != null && result.data3.data.Count() > 1)
                    {
                        result.data3.header = result.data3.data[0].value.ToString();
                        result.data3.data.RemoveAt(0);
                    }
                    else
                    {
                        if (result.data3.data != null && result.data3.data.Count() > 0)
                        {
                            result.data3.data.RemoveAt(0);
                        }
                    }
                    if (result.data4.data != null && result.data4.data.Count() > 1)
                    {
                        result.data4.header = result.data4.data[0].value.ToString();
                        result.data4.data.RemoveAt(0);
                    }
                    else
                    {
                        if (result.data4.data != null && result.data4.data.Count() > 0)
                        {
                            result.data4.data.RemoveAt(0);
                        }
                    }
                    if (result.data5.data != null && result.data5.data.Count() > 1)
                    {
                        result.data5.header = result.data5.data[0].value.ToString();
                        result.data5.data.RemoveAt(0);
                    }
                    else
                    {
                        if (result.data5.data != null && result.data5.data.Count() > 0)
                        {
                            result.data5.data.RemoveAt(0);
                        }
                    }
                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }
        [HttpGet("DashboardV4")]
        public async Task<CommonResponse<DashboardV3Response>> DashboardV4(long memberId)
        {
            CommonResponse<DashboardV3Response> res = new CommonResponse<DashboardV3Response>();
            try
            {
                var result = await _dataRepository.DashboardDetailV4(memberId);
                if (result != null)
                {

                    res.result = result;
                    res.response = "success";

                }
                else
                {
                    res.response = "error";
                    res.message = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("AddCardDispatchDetail")]
        public async Task<CommonResponse<ResultSet>> AddCardDispatchDetail(CardDispatchDetail model)
        {
            CommonResponse<ResultSet> res = new CommonResponse<ResultSet>();
            try
            {
                var result = await _dataRepository.AddCardDispatchDetail(model);
                if (result != null && result.flag == 1)
                {

                    res.response = "success";
                    res.message = result.msg;

                }
                else
                {
                    res.response = "error";
                    res.message = result.msg;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.response = "error";
                res.message = ex.Message;
            }
            return res;
        }

        [HttpPost("CardBalance_V1")]
        public CommonResponse<PineCardBalanceResponse> CardBalance_V1(PineCardBalanceRequest model)
        {
            CommonResponse<PineCardBalanceResponse> res = new CommonResponse<PineCardBalanceResponse>();

            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            string CustData = "";
            try
            {


                js = new DataContractJsonSerializer(typeof(PineCardBalanceRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();



                var response = PineCommonRequestobj.sendRequestV1("https://mobilepefintech.com/api/card/CardBalance", "POST", CustData);

                if (response.statuscode == 200)
                {
                    res.result = JsonConvert.DeserializeObject<PineCardBalanceResponse>(response.responseText);

                    if (res.result != null &&
                        res.result.cardBalanceDetailList != null &&
                        res.result.cardBalanceDetailList.Count() > 0 &&
                        res.result.cardBalanceDetailList[0].responseCode == 0)
                    {

                        res.response = "success";


                    }
                    else
                    {
                        res.response = "error";

                    }
                }

                else
                {
                    res.response = "error";

                }


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                res.message = ex.Message;
                res.response = "error";
            }
            return res;
        }

        [HttpGet("GetBankDetails")]
        public async Task<CommonResponse<BankDetailResponse>> GetBankDetails(long MemberId)
        {
            CommonResponse<BankDetailResponse> objres = new CommonResponse<BankDetailResponse>();
            try
            {
                var res = await _dataRepository.GetBank(MemberId);
                if (res != null)
                {
                    objres.result = res;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {

                    objres.response = "error";
                    objres.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("EasyBillFetch")]
        public CommonResponse<EasyBillFetchResponses> EasyBillFetch(EasyBillFetch model)
        {
            CommonResponse<EasyBillFetchResponses> response = new CommonResponse<EasyBillFetchResponses>();
            try
            {
                model.APIRequestID = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
                model.GEOCode = "23.8530,87.9727";
                model.OutletID = "10001";
                EASYBILLFETCHURL = EASYBILLFETCHURL.Replace("[Account]", model.Account).Replace("[Amount]", model.Amount).Replace("[SPKey]", model.SPKey).Replace("[APIRequestID]", model.APIRequestID).Replace("[GEOCode]", model.GEOCode).Replace("[CustomerNumber]", model.CustomerNumber).Replace("[Pincode]", model.Pincode).Replace("[OutletID]", model.OutletID);
                var result = recConn.sendRequest(EASYBILLFETCHURL, "GET", "", 0);
                response.result = JsonConvert.DeserializeObject<EasyBillFetchResponses>(result);
                if (response != null && response.result.errorcode != null && response.result.errorcode == "200")
                {
                    response.response = "success";
                    response.message = response.result.msg;
                }
                else
                {
                    response.response = "error";
                    response.message = response.result.msg;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                response.response = "error";
                response.message = ex.Message;
            }
            return response;
        }


        [HttpPost("EasyBillPay")]
        public async Task<CommonResponse<Common>> EasyBillPay(EasyBillPay model)
        {


            CommonResponse<Common> objres = new CommonResponse<Common>();
            EasyBillPayResponse response = new EasyBillPayResponse();
            try
            {

                if (model.type.ToLower() == "fastag recharge")
                {
                    RechargeDeskRequest model1 = new RechargeDeskRequest();
                    model1.amount = decimal.Parse(model.Amount);
                    model1.Type = model.type;
                    model1.OperatorCode = model.SPKey;
                    model1.merchantInfoTxn = model.APIRequestID;
                    model1.TransactionId = model.APIRequestID;
                    model1.number = model.Account;
                    model1.MemberId = model.memberId;
                    var res = await Recharge(model1);
                    objres.message = res.message;
                    objres.response = res.response;
                }
                else
                {
                    var check = await _dataRepository.CheckAmountByTransactionId(model.APIRequestID);
                    if (check.message != null && decimal.Parse(check.message) >= Convert.ToDecimal(model.Amount))
                    {

                        model.ProcId = 1;
                        model.RefID = model.APIRequestID;
                        model.GEOCode = "23.8530,87.9727";
                        model.OutletID = "10001";

                        var res = await _dataRepository.EasyBillRecharge(model, response);
                        if (res != null && res.Id > 0)
                        {
                            EASYPAYBILLURL = EASYPAYBILLURL.Replace("[Account]", model.Account).Replace("[Amount]", model.Amount).Replace("[SPKey]", model.SPKey).Replace("[APIRequestID]", model.APIRequestID).Replace("[GEOCode]", model.GEOCode).Replace("[CustomerNumber]", model.CustomerNumber).Replace("[Pincode]", model.Pincode).Replace("[OutletID]", model.OutletID).Replace("[RefID]", model.RefID);
                            var result = recConn.sendRequest(EASYPAYBILLURL, "GET", "", 0);
                            response = JsonConvert.DeserializeObject<EasyBillPayResponse>(result);
                            if (response != null && response.STATUS != null)
                            {

                                if (response.STATUS == "1")
                                {
                                    response.STATUS = "Pending";

                                }
                                else if (response.STATUS == "2")
                                {
                                    response.STATUS = "Success";
                                }
                                else
                                {
                                    response.STATUS = "Failed";
                                }
                                model.ProcId = 2;
                                model.transId = res.Id;

                                var res1 = await _dataRepository.EasyBillRecharge(model, response);
                                if (res1 != null)
                                {
                                    objres.message = response.MSG;
                                    objres.response = response.STATUS;
                                }
                            }
                            else
                            {
                                objres.message = "Error";
                                objres.response = "error";
                            }
                            //objres.message = "Your Bill payment is " + response.STATUS;
                            //objres.response = "Success";
                        }
                        else
                        {
                            objres.message = res.message;
                            objres.response = "error";
                        }
                    }
                    else
                    {
                        objres.message = "error";
                        objres.response = "error";
                    }
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
                objres.response = "error";
            }
            return objres;
        }

        [HttpPost("EasyTransactionStatus")]
        public CommonResponse<StatusCheckResponse> EasyTransactionStatus(StastusCheck model)
        {
            CommonResponse<StatusCheckResponse> response = new CommonResponse<StatusCheckResponse>();
            try
            {
                model.RPID = "S201008105418617298BA";
                model.AGENTID = "8822499";
                model.Optional1 = "";
                // model.Token = DateTime.UtcNow.Ticks.ToString().Substring(0, 32);
                EASYTransactionStatusURL = EASYTransactionStatusURL.Replace("[UserId]", model.UserID).Replace("[Token]", model.Token).Replace("[RPID]", model.RPID).Replace("[AGENTID]", model.AGENTID).Replace("[Optional1]", model.Optional1);
                var result = recConn.sendRequest(EASYTransactionStatusURL, "GET", "", 0);
                response.result = JsonConvert.DeserializeObject<StatusCheckResponse>(result);
                if (response != null && response.result.Status != null && response.result.Status == "2")
                {
                    response.response = "success";
                    response.message = response.result.Message;
                }
                else
                {
                    response.response = "error";
                    response.message = response.result.Message;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                response.response = "error";
                response.message = ex.Message;
            }
            return response;
        }



        [HttpGet("SupportType")]
        public async Task<CommonResponse<List<SupportTypeList>>> SupportType()
        {
            CommonResponse<List<SupportTypeList>> res = new CommonResponse<List<SupportTypeList>>();
            try
            {
                var r = await _dataRepository.SupportType(13);
                if (r != null && r.Count > 0)
                {
                    res.result = r;
                    res.response = "success";
                }
                else
                {
                    res.response = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
            }
            return res;
        }

        [HttpGet("GetVoucherSummary")]
        public async Task<CommonResponse<vouchersummary>> GetVoucherSummary(long memberId)
        {
            CommonResponse<vouchersummary> res = new CommonResponse<vouchersummary>();
            try
            {
                var r = await _dataRepository.GetVoucherSummary(memberId);
                if (r != null)
                {
                    res.result = r;
                    res.response = "success";
                }
                else
                {
                    res.response = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
            }
            return res;
        }

        [HttpGet("GetVoucherDescriptionDetails")]
        public async Task<CommonResponse<VoucherDescription>> GetVoucherDescriptionDetails(string Brand, string Product)
        {
            CommonResponse<VoucherDescription> res = new CommonResponse<VoucherDescription>();
            try
            {
                var r = await _dataRepository.GetVoucherDescriptionDetails(Brand, Product);
                if (r != null)
                {
                    res.result = r;
                    res.response = "success";
                }
                else
                {
                    res.response = "error";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
            }
            return res;
        }

        [HttpGet("GetDropDown")]
        public async Task<CommonResponse<List<BindDropDown2>>> GetDropDown(int ProcId, string data)
        {
            CommonResponse<List<BindDropDown2>> objres = new CommonResponse<List<BindDropDown2>>();
            try
            {
                var res = await _dataRepository.GetDropDown2(ProcId, data);
                if (res != null && res.Count() > 0)
                {
                    objres.response = "success";
                    objres.result = res;
                }
                else
                {
                    objres.response = "error";
                    objres.result = null;
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
                objres.result = null;
            }

            return objres;
        }

        #region Wallet
        //[HttpGet("RequestToken")]
        //public CommonResponse<RequestTokenResult> RequestToken()
        //{
        //    string result = "";
        //    CommonResponse<RequestTokenResult> objres = new CommonResponse<RequestTokenResult>();
        //    try
        //    {
        //        result = oAuthorization.sendRequest(FintechRequestTokenUrl, "GET", "", null, null, 0);
        //        var r = JsonConvert.DeserializeObject<RequestTokenResult>(result);

        //        if (r.OAUTH.STATUS == "0")
        //        {
        //            objres.response = "success";
        //            objres.message = "success";
        //            objres.result = r;
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = r.OAUTH.STATUS;
        //        }
        //    }
        //    catch (Exception ex)
        //    {

        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;


        //}
        [HttpGet("RequestToken")]
        public CommonResponse<RequestTokenResult> RequestToken()
        {

            CommonResponse<RequestTokenResult> objres = new CommonResponse<RequestTokenResult>();
            try
            {
                objres.result = new RequestTokenResult();
                objres.result.OAUTH = new RequestTokenModel();
                objres.result.OAUTH.STATUS = "0";
                objres.result.OAUTH.TOKEN = "R2V3MDdEV3oya2pXZXNFL0phWCtScGhpYVo1RjE4ZVE1";
                objres.result.OAUTH.SECRETKEY = "UzI4dmVWUTRibUZhVjNCS2FuTXdlSE5CYWxCalRVZ3pPV0p3TjJKc01rcGlMemxGZWtOT1pUbDVPVWt6TlRGaU9ISjVkRkEyY25OWFZtZEVUa1J3T1Ey0";
                objres.response = "success";
                objres.message = "success";
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;


        }
        //[HttpPost("WalletRegistration")]
        //public async Task<CommonResponse<WalletCreationResponse>> WalletRegistration(WalletCreationRequest model)
        //{
        //    CommonResponse<WalletCreationResponse> objres = new CommonResponse<WalletCreationResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        if (string.IsNullOrEmpty(model.CUSTOMERLASTNAME))
        //        {
        //            model.CUSTOMERLASTNAME = model.CUSTOMERNAME;
        //        }
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.TRANSACTIONID = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
        //        js = new DataContractJsonSerializer(typeof(WalletCreationRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.CUSTOMEREMAILID + model.KYCFLAG + model.PARTNERID + model.TRANSACTIONID + model.SECURITYKEY;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        var result = await _dataRepository.WalletRegistration(model, 1);
        //        if (result.flag == 1)
        //        {
        //            ResponseText = oAuthorization.sendRequest(FintechWalletCreationUrl, "POST", EncryptedText, model.access_token, model.access_secret, model.MemberId);
        //            js = new DataContractJsonSerializer(typeof(Request_Response));
        //            ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //            Request_Response response = (Request_Response)js.ReadObject(ms);
        //            ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //            objres.result = JsonConvert.DeserializeObject<WalletCreationResponse>(ResponseText);
        //            if (objres.result.STATUSCODE == "0")
        //            {
        //                model.TRANSACTIONID = objres.result.APITRANSACTIONID;
        //                model.TRANSID = result.Id;
        //                var res = await _dataRepository.WalletRegistration(model, 2);
        //                objres.response = "success";
        //                objres.message = objres.result.RESPONSEDESC; ;
        //            }
        //            else
        //            {
        //                objres.response = "error";
        //                objres.message = objres.result.RESPONSEDESC; ;
        //            }
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = "An error occured.Please try again later!";
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}

        [HttpPost("WalletRegistration")]
        public async Task<CommonResponse<WalletCreationResponse>> WalletRegistration(WalletCreationRequest model)
        {
            CommonResponse<WalletCreationResponse> objres = new CommonResponse<WalletCreationResponse>();

            try
            {
                if (string.IsNullOrEmpty(model.CUSTOMERLASTNAME))
                {
                    model.CUSTOMERLASTNAME = model.CUSTOMERNAME;
                }
                model.TRANSACTIONID = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
                var result = await _dataRepository.WalletRegistration(model, 1);
                if (result.flag == 1)
                {


                    model.TRANSACTIONID = result.TransactionId;
                    model.TRANSID = result.Id;
                    var res = await _dataRepository.WalletRegistration(model, 2);
                    OTPRequest objrequest = new OTPRequest();
                    objrequest.ProcId = 2;
                    objrequest.Purpose = "Wallet Creation";
                    objrequest.LoginId = model.CUSTOMERMOBILENO;
                    var res1 = await _dataRepository.OTPProcess(objrequest);
                    string messgae = objsms.OTPMemberMessage(res1.Name, res1.OTP, objrequest.Purpose, objrequest.mid);
                    if (!string.IsNullOrEmpty(messgae))
                    {

                        objsms.SendSMSMessage(model.CUSTOMERMOBILENO, messgae, "OTP");

                    }

                    objres.response = "success";
                    objres.message = res.msg;


                }
                else
                {
                    objres.response = "error";
                    objres.message = result.message;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        //[HttpPost("WalletCreationOTPValidate")]
        //public async Task<CommonResponse<WalletCreationOTPValidateResponse>> WalletCreationOTPValidate(WalletCreationOTPValidateRequest model)
        //{
        //    CommonResponse<WalletCreationOTPValidateResponse> objres = new CommonResponse<WalletCreationOTPValidateResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.AGENTID = "";
        //        js = new DataContractJsonSerializer(typeof(WalletCreationOTPValidateRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.OTP + model.PARTNERID + model.APITRANSACTIONID + model.SECURITYKEY;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        ResponseText = oAuthorization.sendRequest(FintechWalletCreationOTPValidateUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //        js = new DataContractJsonSerializer(typeof(Request_Response));
        //        ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //        Request_Response response = (Request_Response)js.ReadObject(ms);
        //        ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //        objres.result = JsonConvert.DeserializeObject<WalletCreationOTPValidateResponse>(ResponseText);
        //        if (objres.result.STATUSCODE == "0")
        //        {
        //            WalletCreationRequest md = new WalletCreationRequest();
        //            md.TRANSACTIONID = model.APITRANSACTIONID;

        //            var res = await _dataRepository.WalletRegistration(md, 3);
        //            objres.message = objres.result.RESPONSEDESC; ;
        //            objres.response = "success";
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = objres.result.RESPONSEDESC; ;
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}

        [HttpPost("WalletCreationOTPValidate")]
        public async Task<CommonResponse<WalletCreationOTPValidateResponse>> WalletCreationOTPValidate(WalletCreationOTPValidateRequest model)
        {
            CommonResponse<WalletCreationOTPValidateResponse> objres = new CommonResponse<WalletCreationOTPValidateResponse>();

            try
            {
                OTPRequest objrequest = new OTPRequest();
                objrequest.ProcId = 1;
                objrequest.LoginId = model.CUSTOMERMOBILENO;
                objrequest.OTPNO = model.OTP;
                var res = await _dataRepository.OTPProcess(objrequest);
                if (res.Flag == 1)
                {
                    WalletCreationRequest md = new WalletCreationRequest();
                    md.TRANSACTIONID = model.APITRANSACTIONID;
                    var result = await _dataRepository.WalletRegistration(md, 3);
                    objres.response = "success";
                    objres.message = res.msg;
                }
                else
                {

                    objres.response = "error";
                    objres.message = res.msg;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        //[HttpPost("WalletCreationResendOTP")]
        //public CommonResponse<WalletCreationResendOTPResponse> WalletCreationResendOTP(WalletCreationResendOTPRequest model)
        //{
        //    CommonResponse<WalletCreationResendOTPResponse> objres = new CommonResponse<WalletCreationResendOTPResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.AGENTID = "";
        //        js = new DataContractJsonSerializer(typeof(WalletCreationResendOTPRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.APITRANSACTIONID + model.SECURITYKEY;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        var result =
        //        ResponseText = oAuthorization.sendRequest(FintechWalletCreationResendOTPUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //        js = new DataContractJsonSerializer(typeof(Request_Response));
        //        ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //        Request_Response response = (Request_Response)js.ReadObject(ms);
        //        ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //        objres.result = JsonConvert.DeserializeObject<WalletCreationResendOTPResponse>(ResponseText);
        //        if (objres.result.STATUSCODE == "0")
        //        {

        //            objres.message = objres.result.RESPONSEDESC; ;
        //            objres.response = "success";
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = objres.result.RESPONSEDESC; ;
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}
        //[HttpPost("WalletInfo")]
        //public CommonResponse<WalletInfoResponse> WalletInfo(WalletInfoRequest model)
        //{
        //    CommonResponse<WalletInfoResponse> objres = new CommonResponse<WalletInfoResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.AGENTID = "";
        //        js = new DataContractJsonSerializer(typeof(WalletInfoRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        ResponseText = oAuthorization.sendRequest(FintechGetWalletInfoUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //        js = new DataContractJsonSerializer(typeof(Request_Response));
        //        ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //        Request_Response response = (Request_Response)js.ReadObject(ms);
        //        ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //        objres.result = JsonConvert.DeserializeObject<WalletInfoResponse>(ResponseText);
        //        if (objres.result.STATUSCODE == 0)
        //        {

        //            objres.message = objres.result.RESPONSEDESC; ;
        //            objres.response = "success";
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = objres.result.RESPONSEDESC; ;
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}

        [HttpPost("WalletCreationResendOTP")]
        public async Task<CommonResponse<WalletCreationResendOTPResponse>> WalletCreationResendOTP(WalletCreationResendOTPRequest model)
        {
            CommonResponse<WalletCreationResendOTPResponse> objres = new CommonResponse<WalletCreationResendOTPResponse>();

            try
            {
                OTPRequest objrequest = new OTPRequest();
                objrequest.ProcId = 2;
                objrequest.Purpose = "Wallet Creation";
                objrequest.LoginId = model.CUSTOMERMOBILENO;
                var res = await _dataRepository.OTPProcess(objrequest);
                string messgae = objsms.OTPMemberMessage(res.Name, res.OTP, objrequest.Purpose, objrequest.mid);
                if (!string.IsNullOrEmpty(messgae))
                {

                    objsms.SendSMSMessage(model.CUSTOMERMOBILENO, messgae, "OTP");

                }
                objres.response = "success";
                objres.message = "OTP sent to registered mobile no";
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpPost("WalletInfo")]
        public async Task<CommonResponse<WalletInfoResponse>> WalletInfo(WalletInfoRequest model)
        {
            CommonResponse<WalletInfoResponse> objres = new CommonResponse<WalletInfoResponse>();

            try
            {
                var resut = await _dataRepository.WalletInfo(1, model.CUSTOMERMOBILENO);
                if (resut != null)
                {
                    objres.result = new WalletInfoResponse();
                    objres.result = resut;
                    objres.message = resut.RESPONSEDESC;
                    if (resut.STATUSCODE == 0)
                    {


                        objres.response = "success";
                    }
                    else
                    {
                        objres.response = "errror";
                    }
                }
                else
                {
                    objres.response = "error";
                    objres.message = "Mobile Number does not Registered";
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpPost("MobileValidation")]
        public CommonResponse<MobileValidationResponse> MobileValidation(MobileValidationRequest model)
        {
            CommonResponse<MobileValidationResponse> objres = new CommonResponse<MobileValidationResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(MobileValidationRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.IPADDRESS;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechMobileValidationUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<MobileValidationResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        //[HttpPost("WalletRecharge")]
        //public async Task<CommonResponse<WalletRechargeResponse>> WalletRecharge(WalletRechargeRequest model)

        //{
        //    CommonResponse<WalletRechargeResponse> objres = new CommonResponse<WalletRechargeResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    WalletTop walletTop = new WalletTop();
        //    walletTop.creditamount = Decimal.Parse(model.TOPUPAMOUNT);
        //    walletTop.TransactionId = model.TRANSACTIONID;
        //    walletTop.Remarks = "Rs. " + model.TOPUPAMOUNT + " added to the wallet";
        //    walletTop.MemberId = model.memberId;
        //    walletTop.status = "Pending";
        //    walletTop.type = "Wallet";
        //    walletTop.procId = 1;
        //    try
        //    {

        //        var _result = await _dataRepository.WalletRecharge(walletTop);
        //        if (_result != null && _result.flag == 1)
        //        {
        //            model.PARTNERID = FintechPartnerID;
        //            model.SECURITYKEY = FintechSecurityKey;
        //            model.AGENTID = "";
        //            var Token = RequestToken();
        //            if (Token != null && Token.response == "success")
        //            {
        //                model.access_token = Token.result.OAUTH.TOKEN;
        //                model.access_secret = Token.result.OAUTH.SECRETKEY;
        //                model.IPADDRESS = GetIPAddress();
        //                js = new DataContractJsonSerializer(typeof(WalletRechargeRequest));
        //                ms = new MemoryStream();
        //                js.WriteObject(ms, model);
        //                ms.Position = 0;
        //                sr = new StreamReader(ms);
        //                CustData = sr.ReadToEnd();
        //                sr.Close();
        //                ms.Close();
        //                CustData = CustData.Replace("\\", string.Empty);
        //                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TRANSACTIONID + model.TOPUPAMOUNT;
        //                checksum = oAuthorization.ComputeSha256Hash(checksum);
        //                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //                EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //                EncryptedText = EncryptedText.Replace("\\/", "/");
        //                ResponseText = oAuthorization.sendRequest(FintechWalletRechargeUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //                js = new DataContractJsonSerializer(typeof(Request_Response));
        //                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //                Request_Response response = (Request_Response)js.ReadObject(ms);
        //                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //                objres.result = JsonConvert.DeserializeObject<WalletRechargeResponse>(ResponseText);
        //                if (objres.result.STATUSCODE == "0")
        //                {

        //                    objres.message = objres.result.RESPONSEDESC;
        //                    objres.response = "success";
        //                }
        //                else
        //                {
        //                    objres.response = "error";
        //                    objres.message = objres.result.RESPONSEDESC;
        //                }
        //            }
        //            else
        //            {
        //                objres.message = "token not generated";
        //                objres.response = "success";
        //            }
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    finally
        //    {
        //        walletTop.procId = 2;
        //        walletTop.status = objres.response;
        //        var _result = await _dataRepository.WalletRecharge(walletTop);
        //    }
        //    return objres;
        //}


        [HttpPost("WalletRecharge")]
        public async Task<CommonResponse<WalletRechargeResponse>> WalletRecharge(WalletRechargeRequest model)
        {
            CommonResponse<WalletRechargeResponse> objres = new CommonResponse<WalletRechargeResponse>();

            WalletTop walletTop = new WalletTop();
            walletTop.creditamount = Decimal.Parse(model.TOPUPAMOUNT);
            walletTop.TransactionId = model.TRANSACTIONID;
            walletTop.Remarks = "Rs. " + model.TOPUPAMOUNT + " added to the wallet";
            walletTop.MemberId = model.memberId;
            walletTop.status = "Pending";
            walletTop.type = "Wallet";
            walletTop.procId = 1;
            try
            {
                var check = await _dataRepository.CheckAmountByTransactionId(model.TRANSACTIONID);
                if (check != null && check.message != null && decimal.Parse(check.message) >= Decimal.Parse(model.TOPUPAMOUNT))
                {

                    var _result = await _dataRepository.WalletRecharge(walletTop);
                    if (_result != null && _result.flag == 1)
                    {
                        objres.response = "success";
                    }
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            finally
            {
                walletTop.procId = 2;
                walletTop.status = objres.response;
                var _result = await _dataRepository.WalletRecharge(walletTop);
            }
            return objres;
        }

        [HttpPost("WalletRefund")]
        public async Task<CommonResponse<WalletRefundResponse>> WalletRefund(WalletRefundRequest model)
        {
            CommonResponse<WalletRefundResponse> objres = new CommonResponse<WalletRefundResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;

            try
            {

                js = new DataContractJsonSerializer(typeof(WalletRefundRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.AMOUNT + model.DEBITTRANSACTIONID + model.REFUNDTRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechTransactionReversalUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<WalletRefundResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC;
                    objres.response = "success";
                }
                else if (objres.result.STATUSCODE == "1" && objres.result.RESPONSECODE == "042")
                {

                    PostWalletTransactionRequest PostWalletmodel = new PostWalletTransactionRequest();
                    PostWalletmodel.ProcId = 4;
                    PostWalletmodel.APITransactionId = model.DEBITTRANSACTIONID;
                    PostWalletmodel.RefundId = model.REFUNDTRANSACTIONID;
                    PostWalletmodel.TransDate = DateTime.Now;

                    var _PostWalletresponse = await _dataRepository.PostWalletTransaction(PostWalletmodel);
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC;
                }



            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }

            return objres;
        }

        //[HttpPost("WALLETBALANCE")]
        //public CommonResponse<WALLETBALANCEResponse> WALLETBALANCE(WALLETBALANCERequest model)
        //{
        //    CommonResponse<WALLETBALANCEResponse> objres = new CommonResponse<WALLETBALANCEResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.AGENTID = "";
        //        js = new DataContractJsonSerializer(typeof(WALLETBALANCERequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        ResponseText = oAuthorization.sendRequest(FintechCHECKWALLETBALANCEUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //        js = new DataContractJsonSerializer(typeof(Request_Response));
        //        ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //        Request_Response response = (Request_Response)js.ReadObject(ms);
        //        ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //        objres.result = JsonConvert.DeserializeObject<WALLETBALANCEResponse>(ResponseText);
        //        if (objres.result.STATUSCODE == "0")
        //        {

        //            objres.message = objres.result.RESPONSEDESC; ;
        //            objres.response = "success";
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = objres.result.RESPONSEDESC; ;
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}



        [HttpPost("WALLETBALANCE")]
        public async Task<CommonResponse<WALLETBALANCEResponse>> WALLETBALANCE(WALLETBALANCERequest model)
        {
            _logwrite.LogRequestException("Auth Controller , WALLETBALANCE :" + model.CUSTOMERMOBILENO);
            CommonResponse<WALLETBALANCEResponse> objres = new CommonResponse<WALLETBALANCEResponse>();

            try
            {
                objres.result = await _dataRepository.WalletBalance(1, model.CUSTOMERMOBILENO);

                if (objres.result.STATUSCODE == "0")
                {
                    objres.result.RESPONSECODE = "success";
                    objres.message = "";
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("RechargeRequery")]
        public CommonResponse<RechargeRequeryResponse> RechargeRequery(RechargeRequeryRequest model)
        {
            CommonResponse<RechargeRequeryResponse> objres = new CommonResponse<RechargeRequeryResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(RechargeRequeryRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechRechargeRequeryUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<RechargeRequeryResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        //[HttpPost("WalletMiniStatement")]
        //public CommonResponse<WalletMiniStatementResponse> WalletMiniStatement(WalletMiniStatementRequest model)
        //{
        //    CommonResponse<WalletMiniStatementResponse> objres = new CommonResponse<WalletMiniStatementResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.AGENTID = "";
        //        js = new DataContractJsonSerializer(typeof(WalletMiniStatementRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        sr.Close();
        //        ms.Close();
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TODATE + model.FROMDATE;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        ResponseText = oAuthorization.sendRequest(FintechMiniStatementUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //        js = new DataContractJsonSerializer(typeof(Request_Response));
        //        ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //        Request_Response response = (Request_Response)js.ReadObject(ms);
        //        ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //        objres.result = JsonConvert.DeserializeObject<WalletMiniStatementResponse>(ResponseText);
        //        if (objres.result.STATUSCODE == 0)
        //        {

        //            objres.message = objres.result.RESPONSEDESC; ;
        //            objres.response = "success";
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = objres.result.RESPONSEDESC; ;
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}


        [HttpPost("WalletMiniStatement")]
        public async Task<CommonResponse<WalletMiniStatementResponse>> WalletMiniStatement(WalletMiniStatementRequest model)
        {
            CommonResponse<WalletMiniStatementResponse> objres = new CommonResponse<WalletMiniStatementResponse>();

            try
            {
                objres.result = new WalletMiniStatementResponse();
                objres.result.PAGE = new List<PAGE>();
                var result = await _dataRepository.WalletStatement(2, model.CUSTOMERMOBILENO, model.FROMDATE, model.TODATE);
                if (result != null && result.Count() > 0)
                {

                    objres.result.TOTALRECORD = result.Count();
                    objres.result.STATUSCODE = 0;
                    objres.result.RESPONSECODE = "success";
                    objres.result.STATUS = "SUCCESS";
                    objres.result.PAGE.Add(new PAGE { ITEM = result });
                    objres.message = "";
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("WallettoWalletTransfer")]
        public CommonResponse<WallettoWalletTransferResponse> WallettoWalletTransfer(WallettoWalletTransferRequest model)
        {
            CommonResponse<WallettoWalletTransferResponse> objres = new CommonResponse<WallettoWalletTransferResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(WallettoWalletTransferRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TRANSAMOUNT + model.TRANSACTIONID + model.OTP + model.RECEIVERMOBILENO;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechWallettoWalletTransferUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<WallettoWalletTransferResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpPost("GenerateTransactionOTP")]
        public CommonResponse<GenerateTransactionOTPResponse> GenerateTransactionOTP(GenerateTransactionOTPRequest model)
        {
            CommonResponse<GenerateTransactionOTPResponse> objres = new CommonResponse<GenerateTransactionOTPResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(GenerateTransactionOTPRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.IPADDRESS;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechGenerateTransactionOTPUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<GenerateTransactionOTPResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }



        [HttpPost("WalletBlockunblockOTP")]
        public CommonResponse<WalletBlockunblockOTPResponse> WalletBlockunblockOTP(WalletBlockunblockOTPRequest model)
        {
            CommonResponse<WalletBlockunblockOTPResponse> objres = new CommonResponse<WalletBlockunblockOTPResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(WalletBlockunblockOTPRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.BLOCKSTATUS + model.REMARKS;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechGetWalletBlockunblockOTPUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<WalletBlockunblockOTPResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        [HttpPost("WalletBlockunblockOTPValidation")]
        public CommonResponse<WalletBlockunblockOTPValidationResponse> WalletBlockunblockOTPValidation(WalletBlockunblockOTPValidationRequest model)
        {
            CommonResponse<WalletBlockunblockOTPValidationResponse> objres = new CommonResponse<WalletBlockunblockOTPValidationResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(WalletBlockunblockOTPValidationRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.PARTNERID + model.SECURITYKEY + model.CUSTOMERMOBILENO + model.OTP + model.APITRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechWalletBlockunblockOTPValidationUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<WalletBlockunblockOTPValidationResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        //[HttpPost("DebitTransactionRequery")]
        //public async Task<CommonResponse<DebitTransactionRequeryResponse>> DebitTransactionRequery(DebitTransactionRequeryRequest model)
        //{
        //    CommonResponse<DebitTransactionRequeryResponse> objres = new CommonResponse<DebitTransactionRequeryResponse>();
        //    string ResponseText = "";
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        model.AGENTID = "";
        //        js = new DataContractJsonSerializer(typeof(DebitTransactionRequeryRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TRANSACTIONID;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
        //        EncryptedText = EncryptedText.Replace("\\", string.Empty);
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        ResponseText = oAuthorization.sendRequest(FintechDebitTransactionRequeryUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
        //        js = new DataContractJsonSerializer(typeof(Request_Response));
        //        ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
        //        Request_Response response = (Request_Response)js.ReadObject(ms);
        //        ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
        //        objres.result = JsonConvert.DeserializeObject<DebitTransactionRequeryResponse>(ResponseText);
        //        if (objres.result.STATUSCODE == "0")
        //        {

        //            WalletTop walletTop = new WalletTop();
        //            walletTop.TransactionId = model.TRANSACTIONID;
        //            walletTop.procId = 4;
        //            walletTop.status = objres.result.STATUS;
        //            var _result = await _dataRepository.WalletRecharge(walletTop);




        //            objres.message = objres.result.RESPONSEDESC;
        //            objres.response = "success";
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = objres.result.RESPONSEDESC; ;
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}

        [HttpPost("DebitTransactionRequery")]
        public async Task<CommonResponse<DebitTransactionRequeryResponse>> DebitTransactionRequery(DebitTransactionRequeryRequest model)
        {
            CommonResponse<DebitTransactionRequeryResponse> objres = new CommonResponse<DebitTransactionRequeryResponse>();

            try
            {
                var check = await _dataRepository.CheckAmountByTransactionId(model.TRANSACTIONID);
                if (check != null && check.message != null)
                {



                    objres.message = "payment successful";
                    objres.response = "success";
                    objres.transactionId = model.TRANSACTIONID;
                }
                else
                {
                    objres.response = "error";
                    objres.message = "transaction not found";
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        //[HttpPost("WalletTransaction")]
        //public async Task<Common> WalletTransaction(WalletTransactionRequest model)
        //{
        //    Common objres = new Common();
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {

        //        if (model.TransType.ToLower() == "mobile recharge" || model.TransType.ToLower() == "dth recharge" || model.TransType.ToLower() == "voucher")
        //        {

        //            var res = await _dataRepository.LevelWiseLedger(model.MemberId, "Cashpoint", 0, 0);

        //            if (res != null && res.summarydata != null && res.summarydata.Count > 0)
        //            {
        //                var points = decimal.Parse(res.summarydata[0].Value);
        //                if (points >= (decimal.Parse(model.TRANSAMOUNT) * 1) / 100)
        //                {
        //                    model.TRANSAMOUNT = (decimal.Parse(model.TRANSAMOUNT) - (decimal.Parse(model.TRANSAMOUNT) * 1) / 100).ToString();
        //                }
        //            }
        //        }
        //        string Trans = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
        //        if (!string.IsNullOrEmpty(model.transData))
        //        {
        //            WalletTransactionLog walletTransactionLog = await _dataRepository.WalletTransactionAction(new WalletTransactionLog()
        //            {
        //                ProcId = 1,
        //                Request = model.transData,
        //                WalletTransactionId = Trans,
        //                RequestFrom = "app"
        //            });
        //            model.transData =null;
        //        }
        //        model.TIMESTAMP = string.Format("{0:yyyy-MM-ddTHH:mm:ss.FFFZ}", DateTime.UtcNow);
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        WalletTransactionHandShakeRequest walletTransactionHandShakeRequest = new WalletTransactionHandShakeRequest();
        //        walletTransactionHandShakeRequest.type = "Wallet Transaction";
        //        walletTransactionHandShakeRequest.memberId = model.MemberId;

        //        walletTransactionHandShakeRequest.TRANSACTIONID = Trans;
        //        walletTransactionHandShakeRequest.SESSIONID = "STRAN|" + Trans;
        //        model.TRANSACTIONID = walletTransactionHandShakeRequest.TRANSACTIONID;
        //        model.SESSIONID = walletTransactionHandShakeRequest.SESSIONID;
        //        walletTransactionHandShakeRequest.ProcId = 1;
        //        walletTransactionHandShakeRequest.Status = "Pending";
        //        walletTransactionHandShakeRequest.MOBILENO = model.CUSTOMERMOBILENO;
        //        walletTransactionHandShakeRequest.AMOUNT = model.TRANSAMOUNT;
        //        var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);
        //        js = new DataContractJsonSerializer(typeof(WalletTransactionRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        WalletTop walletTop = new WalletTop();
        //        walletTop.debitamount = decimal.Parse(model.TRANSAMOUNT);
        //        walletTop.MemberId = model.MemberId;
        //        walletTop.TransactionId = Trans;
        //        walletTop.type = model.TransType;
        //        walletTop.procId = 3;
        //        walletTop.status = "pending";
        //        walletTop.Remarks = "Payment pending";
        //        if (walletTop.type == "Add Money to Card")
        //        {
        //            walletTop.type = "AddFund|reloadable";
        //        }

        //        var _result = await _dataRepository.WalletRecharge(walletTop);

        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TRANSAMOUNT + model.TRANSACTIONID + model.REMARKS + model.IPADDRESS;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.Encrypt(CustData, FintechAESKEY);
        //        EncryptedText = HttpUtility.UrlEncode(EncryptedText.Replace("\\", string.Empty));
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        FintechWalletTransactionUrl = FintechWalletTransactionUrl.Replace("[msg]", EncryptedText).Replace("[checksum]", checksum);
        //        objres.message = FintechWalletTransactionUrl;
        //        objres.transactionId = model.TRANSACTIONID;
        //        objres.response = "success";

        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}

        [HttpPost("WalletTransaction")]
        public async Task<Common> WalletTransaction(WalletTransactionRequest model)
        {
            Common objres = new Common();
            try
            {

                if (string.IsNullOrEmpty(model.OTP))
                {


                    if (model.TransType.ToLower() == "mobile recharge" || model.TransType.ToLower() == "dth recharge" || model.TransType.ToLower() == "voucher")
                    {

                        var res = await _dataRepository.LevelWiseLedger(model.MemberId, "Cashpoint", 0, 0);

                        if (res != null && res.summarydata != null && res.summarydata.Count > 0)
                        {
                            var points = decimal.Parse(res.summarydata[0].Value);
                            if (points >= (decimal.Parse(model.TRANSAMOUNT) * 1) / 100)
                            {
                                model.TRANSAMOUNT = (decimal.Parse(model.TRANSAMOUNT) - (decimal.Parse(model.TRANSAMOUNT) * 1) / 100).ToString();
                            }
                        }
                    }
                    string Trans = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
                    if (!string.IsNullOrEmpty(model.transData))
                    {
                        WalletTransactionLog walletTransactionLog = await _dataRepository.WalletTransactionAction(new WalletTransactionLog()
                        {
                            ProcId = 1,
                            Request = model.transData,
                            WalletTransactionId = Trans,
                            RequestFrom = "app",
                            MemberId = model.MemberId,
                            Type = model.TransType
                        });
                        model.transData = null;
                    }

                    WalletTop walletTop = new WalletTop();
                    walletTop.debitamount = decimal.Parse(model.TRANSAMOUNT);
                    walletTop.MemberId = model.MemberId;
                    walletTop.TransactionId = Trans;
                    walletTop.type = model.TransType;
                    walletTop.procId = 3;
                    walletTop.status = "pending";
                    walletTop.Remarks = "Payment pending";
                    if (walletTop.type == "Add Money to Card")
                    {
                        walletTop.type = "AddFund|reloadable";
                    }

                    var _result = await _dataRepository.WalletRecharge(walletTop);

                    if (_result != null && _result.flag == 1)
                    {
                        OTPRequest objrequest = new OTPRequest();
                        objrequest.ProcId = 2;
                        objrequest.Purpose = "Wallet Transaction";
                        objrequest.LoginId = model.CUSTOMERMOBILENO;
                        var res1 = await _dataRepository.OTPProcess(objrequest);
                        string messgae = objsms.OTPMemberMessage(res1.Name, res1.OTP, objrequest.Purpose, model.mid);
                        if (!string.IsNullOrEmpty(messgae))
                        {

                            objsms.SendSMSMessage(model.CUSTOMERMOBILENO, messgae, "OTP");

                        }
                        objres.message = "success";
                        objres.transactionId = Trans;
                        objres.response = "success";
                    }
                    else
                    {
                        objres.response = "error";
                        objres.message = _result.message;
                    }

                }
                else
                {

                    OTPRequest objrequest = new OTPRequest();
                    objrequest.ProcId = 1;
                    objrequest.OTPNO = model.OTP;
                    objrequest.LoginId = model.CUSTOMERMOBILENO;
                    var res1 = await _dataRepository.OTPProcess(objrequest);
                    if (res1 != null && res1.Flag == 1)
                    {
                        WalletTop walletTop = new WalletTop();
                        walletTop.MemberId = model.MemberId;
                        walletTop.TransactionId = model.TRANSACTIONID;
                        walletTop.type = model.TransType;
                        walletTop.procId = 4;
                        walletTop.status = "success";
                        walletTop.Remarks = "Used on " + model.TransType;
                        if (walletTop.type == "Add Money to Card")
                        {
                            walletTop.type = "AddFund|reloadable";
                        }
                        var _result = await _dataRepository.WalletRecharge(walletTop);
                        Common common1 = new Common();
                        common1.WebHookEmail(model.TRANSACTIONID);
                        if (walletTop.type == "Electricity" || walletTop.type == "Gas" || walletTop.type == "Water" || walletTop.type == "Insurance" || walletTop.type == "LPG" || walletTop.type == "CableTV")
                        {
                            var TravelRequest = await _dataRepository.GetBillPaymentRequest(model.TRANSACTIONID);

                            BillPaymentResponse billPay = JsonConvert.DeserializeObject<BillPaymentResponse>(TravelRequest.Request);
                            billPay.PaymentId = model.TRANSACTIONID;
                            billPay.Fk_MemId = model.MemberId.ToString();
                            billPay.TransId = model.TRANSACTIONID;
                            Common common = new Common();
                            string Body = ApiEncrypt_Decrypt.EncryptString("MOBILEP@#@132EYZ", JsonConvert.SerializeObject(billPay));
                            string result = Common.HITAPIBillPay("https://newapiv2.mobilepe.co.in/api/auth/BillPayment", Body);
                        }

                        objres.message = "Payment successful";
                        objres.response = "success";

                    }
                    else
                    {
                        objres.message = res1.msg;
                        objres.response = "error";
                    }
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        //[HttpPost("WalletTransaction")]
        //public async Task<Common> WalletTransaction(WalletTransactionRequest model)
        //{
        //    Common objres = new Common();
        //    string EncryptedText = "";
        //    string CustData = "";
        //    DataContractJsonSerializer js;
        //    MemoryStream ms;
        //    StreamReader sr;
        //    try
        //    {

        //        if (model.TransType.ToLower() == "mobile recharge" || model.TransType.ToLower() == "dth recharge" || model.TransType.ToLower() == "voucher")
        //        {

        //            var res = await _dataRepository.LevelWiseLedger(model.MemberId, "Cashpoint", 0, 0);

        //            if (res != null && res.summarydata != null && res.summarydata.Count > 0)
        //            {
        //                var points = decimal.Parse(res.summarydata[0].Value);
        //                if (points >= (decimal.Parse(model.TRANSAMOUNT) * 1) / 100)
        //                {
        //                    model.TRANSAMOUNT = (decimal.Parse(model.TRANSAMOUNT) - (decimal.Parse(model.TRANSAMOUNT) * 1) / 100).ToString();
        //                }
        //            }
        //        }
        //        string Trans = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
        //        if (!string.IsNullOrEmpty(model.transData))
        //        {
        //            WalletTransactionLog walletTransactionLog = await _dataRepository.WalletTransactionAction(new WalletTransactionLog()
        //            {
        //                ProcId = 1,
        //                Request = model.transData,
        //                WalletTransactionId = Trans,
        //                RequestFrom = "app"
        //            });
        //            model.transData =null;
        //        }
        //        model.TIMESTAMP = string.Format("{0:yyyy-MM-ddTHH:mm:ss.FFFZ}", DateTime.UtcNow);
        //        model.PARTNERID = FintechPartnerID;
        //        model.SECURITYKEY = FintechSecurityKey;
        //        WalletTransactionHandShakeRequest walletTransactionHandShakeRequest = new WalletTransactionHandShakeRequest();
        //        walletTransactionHandShakeRequest.type = "Wallet Transaction";
        //        walletTransactionHandShakeRequest.memberId = model.MemberId;

        //        walletTransactionHandShakeRequest.TRANSACTIONID = Trans;
        //        walletTransactionHandShakeRequest.SESSIONID = "STRAN|" + Trans;
        //        model.TRANSACTIONID = walletTransactionHandShakeRequest.TRANSACTIONID;
        //        model.SESSIONID = walletTransactionHandShakeRequest.SESSIONID;
        //        walletTransactionHandShakeRequest.ProcId = 1;
        //        walletTransactionHandShakeRequest.Status = "Pending";
        //        walletTransactionHandShakeRequest.MOBILENO = model.CUSTOMERMOBILENO;
        //        walletTransactionHandShakeRequest.AMOUNT = model.TRANSAMOUNT;
        //        var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);
        //        js = new DataContractJsonSerializer(typeof(WalletTransactionRequest));
        //        ms = new MemoryStream();
        //        js.WriteObject(ms, model);
        //        ms.Position = 0;
        //        sr = new StreamReader(ms);
        //        CustData = sr.ReadToEnd();
        //        sr.Close();
        //        ms.Close();
        //        WalletTop walletTop = new WalletTop();
        //        walletTop.debitamount = decimal.Parse(model.TRANSAMOUNT);
        //        walletTop.MemberId = model.MemberId;
        //        walletTop.TransactionId = Trans;
        //        walletTop.type = model.TransType;
        //        walletTop.procId = 3;
        //        walletTop.status = "pending";
        //        walletTop.Remarks = "Payment pending";
        //        if (walletTop.type == "Add Money to Card")
        //        {
        //            walletTop.type = "AddFund|reloadable";
        //        }

        //        var _result = await _dataRepository.WalletRecharge(walletTop);

        //        CustData = CustData.Replace("\\", string.Empty);
        //        string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.TRANSAMOUNT + model.TRANSACTIONID + model.REMARKS + model.IPADDRESS;
        //        checksum = oAuthorization.ComputeSha256Hash(checksum);
        //        EncryptedText = oAuthorization.Encrypt(CustData, FintechAESKEY);
        //        EncryptedText = HttpUtility.UrlEncode(EncryptedText.Replace("\\", string.Empty));
        //        EncryptedText = EncryptedText.Replace("\\/", "/");
        //        FintechWalletTransactionUrl = FintechWalletTransactionUrl.Replace("[msg]", EncryptedText).Replace("[checksum]", checksum);
        //        objres.message = FintechWalletTransactionUrl;
        //        objres.transactionId = model.TRANSACTIONID;
        //        objres.response = "success";

        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }
        //    return objres;
        //}
        [HttpPost("WalletTransactionPIN")]
        public async Task<Common> WalletTransactionPIN(WalletTransactionPINRequest model)
        {
            Common objres = new Common();
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.TIMESTAMP = string.Format("{0:yyyy-MM-ddTHH:mm:ss.FFFZ}", DateTime.UtcNow);
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                WalletTransactionHandShakeRequest walletTransactionHandShakeRequest = new WalletTransactionHandShakeRequest();
                walletTransactionHandShakeRequest.type = "Wallet PIN";
                walletTransactionHandShakeRequest.memberId = model.MemberId;
                string Trans = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
                walletTransactionHandShakeRequest.TRANSACTIONID = Trans;
                walletTransactionHandShakeRequest.SESSIONID = "SPIN|" + Trans;
                model.TRANSACTIONID = walletTransactionHandShakeRequest.TRANSACTIONID;
                model.SESSIONID = walletTransactionHandShakeRequest.SESSIONID;

                walletTransactionHandShakeRequest.ProcId = 1;
                walletTransactionHandShakeRequest.Status = "Pending";
                walletTransactionHandShakeRequest.MOBILENO = model.CUSTOMERMOBILENO;
                var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);

                js = new DataContractJsonSerializer(typeof(WalletTransactionPINRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.IPADDRESS;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.Encrypt(CustData, FintechAESKEY);
                EncryptedText = HttpUtility.UrlEncode(EncryptedText.Replace("\\", string.Empty));
                EncryptedText = EncryptedText.Replace("\\/", "/");
                FintechWalletTransactionUrl = FintechWalletTransactionPINUrl.Replace("[msg]", EncryptedText).Replace("[checksum]", checksum);

                objres.message = FintechWalletTransactionUrl;
                objres.response = "success";

            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpPost("WalletTransactionHandShake")]
        public async Task<Request_Response> WalletTransactionHandShake(Request_Response model)
        {

            Request_Response _Response = new Request_Response();
            WalletTransactionHandShakeResponse shareresponse = new WalletTransactionHandShakeResponse();
            WalletTransactionHandShakeRequest walletTransactionHandShakeRequest = new WalletTransactionHandShakeRequest();
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;


            try
            {

                string Receivechecksum = model.CHECKSUM;
                string ENCVALUE = model.ENCVALUE;
                string ENCVALUEDecrypt = oAuthorization.Decrypt(ENCVALUE, FintechAESKEY);

                walletTransactionHandShakeRequest = JsonConvert.DeserializeObject<WalletTransactionHandShakeRequest>(ENCVALUEDecrypt);
                string checksum = walletTransactionHandShakeRequest.MOBILENO + walletTransactionHandShakeRequest.AMOUNT + walletTransactionHandShakeRequest.TRANSACTIONID + walletTransactionHandShakeRequest.SESSIONID + walletTransactionHandShakeRequest.IPADDRESS;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                walletTransactionHandShakeRequest.type = "Wallet Transaction";
                if (checksum == Receivechecksum)
                {

                    walletTransactionHandShakeRequest.ProcId = 3;
                    var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);
                    if (r != null && r.flag == 1)
                    {
                        shareresponse.STATUSCODE = "0";
                        shareresponse.STATUS = "success";
                        shareresponse.TRANSACTIONID = walletTransactionHandShakeRequest.TRANSACTIONID;
                        shareresponse.SESSIONID = walletTransactionHandShakeRequest.SESSIONID;
                        shareresponse.AMOUNT = walletTransactionHandShakeRequest.AMOUNT;
                        shareresponse.PARAM1 = "";
                        shareresponse.PARAM2 = "";
                        shareresponse.PARAM3 = "";
                        shareresponse.PARAM4 = "";
                        shareresponse.PARAM5 = "";


                    }
                    else
                    {
                        shareresponse.STATUSCODE = "001";
                        shareresponse.STATUS = "failed";
                    }
                }
                else
                {
                    shareresponse.STATUSCODE = "030";
                    shareresponse.STATUS = "error";
                }

            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                shareresponse.STATUSCODE = "001";
                shareresponse.STATUS = "error";
            }
            finally
            {

                walletTransactionHandShakeRequest.type = "Wallet Transaction";
                js = new DataContractJsonSerializer(typeof(WalletTransactionHandShakeResponse));
                ms = new MemoryStream();
                js.WriteObject(ms, shareresponse);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                EncryptedText = oAuthorization.Encrypt(CustData, FintechAESKEY);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                _Response.ENCVALUE = EncryptedText;
                walletTransactionHandShakeRequest.ProcId = 2;
                walletTransactionHandShakeRequest.Status = shareresponse.STATUS;
                var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);

            }

            return _Response;

        }


        [HttpPost("WalletTransactionPINHandShake")]
        public async Task<Request_Response> WalletTransactionPINHandShake(Request_Response model)
        {

            Request_Response _Response = new Request_Response();
            WalletTransactionHandShakeResponse shareresponse = new WalletTransactionHandShakeResponse();
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            WalletTransactionHandShakeRequest walletTransactionHandShakeRequest = new WalletTransactionHandShakeRequest();

            try
            {

                string Receivechecksum = model.CHECKSUM;
                string ENCVALUE = model.ENCVALUE;
                string ENCVALUEDecrypt = oAuthorization.Decrypt(ENCVALUE, FintechAESKEY);

                walletTransactionHandShakeRequest = JsonConvert.DeserializeObject<WalletTransactionHandShakeRequest>(ENCVALUEDecrypt);
                string checksum = walletTransactionHandShakeRequest.MOBILENO + walletTransactionHandShakeRequest.TRANSACTIONID + walletTransactionHandShakeRequest.SESSIONID + walletTransactionHandShakeRequest.IPADDRESS;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                walletTransactionHandShakeRequest.type = "Wallet PIN";

                if (checksum == Receivechecksum)
                {
                    walletTransactionHandShakeRequest.ProcId = 3;
                    var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);
                    if (r != null && r.flag == 1)
                    {
                        shareresponse.STATUSCODE = "0";
                        shareresponse.STATUS = "success";
                        shareresponse.TRANSACTIONID = walletTransactionHandShakeRequest.TRANSACTIONID;
                        shareresponse.SESSIONID = walletTransactionHandShakeRequest.SESSIONID;
                        shareresponse.PARAM1 = "";
                        shareresponse.PARAM2 = "";
                        shareresponse.PARAM3 = "";
                        shareresponse.PARAM4 = "";
                        shareresponse.PARAM5 = "";


                    }
                    else
                    {
                        shareresponse.STATUSCODE = "001";
                        shareresponse.STATUS = "failed";
                    }
                }
                else
                {
                    shareresponse.STATUSCODE = "030";
                    shareresponse.STATUS = "error";
                }





            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                shareresponse.STATUSCODE = "001";
                shareresponse.STATUS = "error";
            }
            finally
            {
                walletTransactionHandShakeRequest.type = "Wallet PIN";
                js = new DataContractJsonSerializer(typeof(WalletTransactionHandShakeResponse));
                ms = new MemoryStream();
                js.WriteObject(ms, shareresponse);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                EncryptedText = oAuthorization.Encrypt(CustData, FintechAESKEY);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                _Response.ENCVALUE = EncryptedText;
                walletTransactionHandShakeRequest.ProcId = 2;
                walletTransactionHandShakeRequest.Status = shareresponse.STATUS;
                var r = await _dataRepository.MaintainSessionIdForWallet(walletTransactionHandShakeRequest);
            }

            return _Response;

        }
       

        [HttpPost("WalletTransactionLog")]
        public async Task<CommonResponse<ResultSet>> WalletTransactionLog(WalletTop model)
        {
            CommonResponse<ResultSet> objres = new CommonResponse<ResultSet>();
            try
            {
                var _result = await _dataRepository.WalletRecharge(model);
                if (_result != null && _result.flag == 1)
                {
                    objres.response = "success";


                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
            }

            return objres;
        }


        [HttpPost("PostWalletTransaction")]
        public async Task<CommonResponse<ResultSet>> PostWalletTransaction(PostWalletTransactionRequest model)

        {
            CommonResponse<ResultSet> objres = new CommonResponse<ResultSet>();
            try
            {
                model.ProcId = 1;
                var _result = await _dataRepository.PostWalletTransaction(model);
                if (_result != null && _result.flag == 1)
                {


                    var _PaymentOrderDetail = await _dataRepository.GetPaymentOrderDetail(model.TransactionId);


                    if (_PaymentOrderDetail.Type.ToLower() == "cardcost" || _PaymentOrderDetail.Type.ToLower() == "pcwe"
                                || _PaymentOrderDetail.Type.ToLower() == "ppc" ||
                                _PaymentOrderDetail.Type.ToLower() == "ppcwe"
                                || _PaymentOrderDetail.Type.ToLower() == "photo personalization charge"
                                )
                    {

                        try
                        {
                            PaymentWebHookRequest paymentWebHookRequest = new PaymentWebHookRequest();
                            paymentWebHookRequest.contains = new List<string>();
                            paymentWebHookRequest.payload = new Payload();
                            paymentWebHookRequest.payload.payment = new PaymentWebHook();
                            paymentWebHookRequest.payload.payment.entity = new WebHookEntity();
                            paymentWebHookRequest.contains.Add("payment");
                            paymentWebHookRequest.payload.payment.entity.id = model.TransactionId;
                            paymentWebHookRequest.payload.payment.entity.status = "captured";
                            paymentWebHookRequest.payload.payment.entity.order_id = model.TransactionId;
                            string CustData = "";
                            DataContractJsonSerializer js;
                            MemoryStream ms;
                            StreamReader sr;
                            js = new DataContractJsonSerializer(typeof(PaymentWebHookRequest));
                            ms = new MemoryStream();
                            js.WriteObject(ms, paymentWebHookRequest);
                            ms.Position = 0;
                            sr = new StreamReader(ms);
                            CustData = sr.ReadToEnd();
                            sr.Close();
                            ms.Close();

                            var result = CommonJsonPostRequest.CommonSendRequest("https://newapiv1.mobilepe.co.in/webhook/payment", "POST", CustData);
                            var response = JsonConvert.DeserializeObject<object>(result);
                        }
                        catch
                        {
                            throw;
                        }
                    }




                    objres.response = "success";
                    objres.message = "success";
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }

            return objres;
        }

        //[HttpGet("AllWalletTransRefund")]
        //public async Task<CommonResponse<ResultSet>> AllWalletTransRefund()
        //{
        //    CommonResponse<ResultSet> objres = new CommonResponse<ResultSet>();
        //    try
        //    {

        //        var _result = await _dataRepository.GetDebitWalletTransaction(3);
        //        if (_result != null && _result.Count > 0)
        //        {

        //            var token = RequestToken();
        //            WalletRefundRequest walletRefundRequest = new WalletRefundRequest();

        //            if (token.response == "success")
        //            {
        //                walletRefundRequest.access_token = token.result.OAUTH.TOKEN;
        //                walletRefundRequest.access_secret = token.result.OAUTH.SECRETKEY;
        //                walletRefundRequest.IPADDRESS = GetIPAddress();
        //                walletRefundRequest.PARTNERID = FintechPartnerID;
        //                walletRefundRequest.SECURITYKEY = FintechSecurityKey;

        //                foreach (var v in _result)
        //                {
        //                    walletRefundRequest.AMOUNT = v.Amount.ToString();
        //                    walletRefundRequest.DEBITTRANSACTIONID = v.APITransactionId;
        //                    walletRefundRequest.REFUNDTRANSACTIONID = "rfnd_" + v.TransactionId;
        //                    walletRefundRequest.REMARKS = "Amount refunded";
        //                    walletRefundRequest.CUSTOMERMOBILENO = v.MobileNo;
        //                    walletRefundRequest.memberId = v.memberId;


        //                    var walletRefundResponse = await WalletRefund(walletRefundRequest);

        //                    if (walletRefundResponse != null && walletRefundResponse.response == "success")
        //                    {
        //                        PostWalletTransactionRequest model = new PostWalletTransactionRequest();
        //                        model.ProcId = 2;
        //                        model.APITransactionId = v.APITransactionId;
        //                        model.TransactionId = v.TransactionId;
        //                        model.Amount = v.Amount;
        //                        model.RefundId = "rfnd_" + v.TransactionId;
        //                        model.TransDate = v.TransDate;
        //                        model.MobileNo = v.MobileNo;

        //                        var _PostWalletresponse = await _dataRepository.PostWalletTransaction(model);
        //                        if (_PostWalletresponse != null && _PostWalletresponse.flag == 1)
        //                        {
        //                            objres.response = "success";
        //                            objres.message = "success";
        //                        }
        //                    }

        //                }
        //                objres.response = "success";
        //                objres.message = "success";
        //            }
        //        }
        //        else
        //        {
        //            objres.response = "error";
        //            objres.message = "No record found";
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        objres.response = "error";
        //        objres.message = ex.Message;
        //    }

        //    return objres;
        //}


        [HttpGet("AllWalletTransRefund")]
        public async Task<CommonResponse<ResultSet>> AllWalletTransRefund()
        {
            CommonResponse<ResultSet> objres = new CommonResponse<ResultSet>();
            try
            {

                var _result = await _dataRepository.GetDebitWalletTransaction(3);
                if (_result != null && _result.Count > 0)
                {




                    foreach (var v in _result)
                    {

                        PostWalletTransactionRequest model = new PostWalletTransactionRequest();
                        model.ProcId = 2;
                        model.APITransactionId = v.APITransactionId;
                        model.TransactionId = v.TransactionId;
                        model.Amount = v.Amount;
                        model.RefundId = "rfnd_" + v.TransactionId;
                        model.TransDate = v.TransDate;
                        model.MobileNo = v.MobileNo;

                        var _PostWalletresponse = await _dataRepository.PostWalletTransaction(model);
                        if (_PostWalletresponse != null && _PostWalletresponse.flag == 1)
                        {
                            objres.response = "success";
                            objres.message = "success";
                        }


                    }
                    objres.response = "success";
                    objres.message = "success";

                }
                else
                {
                    objres.response = "error";
                    objres.message = "No record found";
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }

            return objres;
        }

        [HttpPost("WalletTransactionAction")]
        public async Task<CommonResponse<WalletTransactionLog>> WalletTransactionAction(WalletTransactionLog model)

        {
            CommonResponse<WalletTransactionLog> objres = new CommonResponse<WalletTransactionLog>();
            try
            {
                var _result = await _dataRepository.WalletTransactionAction(model);
                if (_result != null && _result.Id > 0)
                {
                    objres.response = "success";
                    objres.result = _result;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.message = ex.Message;
            }

            return objres;
        }


        [HttpGet("AllWalletPendingTransaction")]
        public async Task<CommonResponse<ResultSet>> AllWalletPendingTransaction()
        {
            CommonResponse<ResultSet> objres = new CommonResponse<ResultSet>();
            try
            {
                List<PendingWalletTransaction> walletTransaction = await this._dataRepository.GetPendingWalletTransaction();
                if (walletTransaction != null && walletTransaction.Count > 0)
                {
                    foreach (PendingWalletTransaction v in walletTransaction)
                    {
                        WalletTop model1 = new WalletTop();
                        if (v.RequestFrom.ToLower() != "app")
                        {
                            v.Request = oAuthorization.Encrypt(v.Request, FintechAESKEY);
                        }
                        model1.TransactionId = v.TransactionId;
                        model1.procId = 4;
                        model1.status = "success";
                        ResultSet resultSet = await this._dataRepository.WalletRecharge(model1);
                        if (v.Type.ToLower() == "mobile recharge")
                        {
                            RechargeDeskRequest rechargeDeskRequest = new RechargeDeskRequest();
                            RechargeDeskRequest model2 = JsonConvert.DeserializeObject<RechargeDeskRequest>(v.Request);
                            model2.TransactionId = v.TransactionId;
                            model2.merchantInfoTxn = v.TransactionId;
                            CommonResponse<Common> commonResponse = await this.Recharge(model2);
                        }
                        if (v.Type.ToLower() == "dth recharge")
                        {
                            RechargeDeskRequest rechargeDeskRequest = new RechargeDeskRequest();
                            RechargeDeskRequest model3 = JsonConvert.DeserializeObject<RechargeDeskRequest>(v.Request);
                            model3.TransactionId = v.TransactionId;
                            model3.merchantInfoTxn = v.TransactionId;
                            CommonResponse<Common> commonResponse = await this.Recharge(model3);
                        }
                        if (v.Type.ToLower() == "electricity bill")
                        {
                            VenusBillPayRequest venusBillPayRequest = new VenusBillPayRequest();
                            VenusBillPayRequest model4 = JsonConvert.DeserializeObject<VenusBillPayRequest>(v.Request);
                            model4.TransactionNo = v.TransactionId;
                            model4.merchantInfoTxn = v.TransactionId;
                            CommonResponse<Common> commonResponse = await this.BillPay(model4);
                        }
                        if (v.Type.ToLower() == "pipe gas bill")
                        {
                            MobileAPI_V2.Model.EasyBillPay easyBillPay = new MobileAPI_V2.Model.EasyBillPay();
                            MobileAPI_V2.Model.EasyBillPay model5 = JsonConvert.DeserializeObject<MobileAPI_V2.Model.EasyBillPay>(v.Request);
                            model5.APIRequestID = v.TransactionId;
                            CommonResponse<Common> commonResponse = await this.EasyBillPay(model5);
                        }
                        if (v.Type.ToLower() == "fastag recharge")
                        {
                            MobileAPI_V2.Model.EasyBillPay easyBillPay = new MobileAPI_V2.Model.EasyBillPay();
                            MobileAPI_V2.Model.EasyBillPay model6 = JsonConvert.DeserializeObject<MobileAPI_V2.Model.EasyBillPay>(v.Request);
                            model6.APIRequestID = v.TransactionId;
                            CommonResponse<Common> commonResponse = await this.EasyBillPay(model6);
                        }
                        if (v.Type.ToLower() == "cardrequest")
                        {
                            MobileAPI_V2.Model.SubFranchiseCardRequest franchiseCardRequest = new MobileAPI_V2.Model.SubFranchiseCardRequest();
                            MobileAPI_V2.Model.SubFranchiseCardRequest model7 = JsonConvert.DeserializeObject<MobileAPI_V2.Model.SubFranchiseCardRequest>(v.Request);
                            model7.transactionId = v.TransactionId;
                            CommonResponse<Common> commonResponse = await this.SubFranchiseCardRequest(model7);
                        }
                        if (v.Type.ToLower() == "reissuecardcost")
                        {
                            BlockCardRequest blockCardRequest = new BlockCardRequest();
                            BlockCardRequest model8 = JsonConvert.DeserializeObject<BlockCardRequest>(v.Request);
                            model8.transactionId = v.TransactionId;
                            Common common = await this.BlockCard(model8);
                        }
                        if (v.Type.ToLower() == "voucher")
                        {
                            VoucherRequest voucherRequest = new VoucherRequest();
                            VoucherRequest model9 = JsonConvert.DeserializeObject<VoucherRequest>(v.Request);
                            model9.paymentId = v.TransactionId;
                            CommonResponse<VoucherResponse> commonResponse = await this.BuyVoucher(model9);
                        }

                        if (v.Type.ToLower() == "mobilepemall")
                        {

                            CreateOrder model10 = JsonConvert.DeserializeObject<CreateOrder>(v.Request);
                            model10.PaymentId = v.TransactionId;
                            CommonResponse<OrderResponse> commonResponse = await this.CreateOrder(model10);

                        }
                        if (v.Type.ToLower() == "card personalization charge" || v.Type.ToLower() == "photo personalization charge")
                        {
                            CardDispatchDetail blockCardRequest = new CardDispatchDetail();
                            CardDispatchDetail model8 = JsonConvert.DeserializeObject<CardDispatchDetail>(v.Request);
                            model8.transactionId = v.TransactionId;
                            Common common = await this.AddCardDispatchDetail(model8);
                        }

                    }
                }
                else
                {
                    objres.response = "error";
                    objres.message = "No record found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            CommonResponse<ResultSet> commonResponse1 = objres;
            objres = (CommonResponse<ResultSet>)null;
            return commonResponse1;
        }
        #endregion

        #region IRCTC

        [HttpGet("StationCode")]
        public IRCTCModel StationCode()
        {
            IRCTCModel commonResponse = new IRCTCModel();
            try
            {
                MobileAPI_V2.Model.Item item = new MobileAPI_V2.Model.Item();
                var list = new List<dynamic>();
                using (StreamReader r = new StreamReader("wwwroot/Statoincode.json"))
                {
                    string json = r.ReadToEnd();
                    string abc = "";
                    item = JsonConvert.DeserializeObject<MobileAPI_V2.Model.Item>(json);
                    for (int i = 0; i <= item.StationCode.Count - 1; i++)
                    {
                        list.Add(new { Text = item.StationCode[i].Name, Value = item.StationCode[i].Name.Split("-")[1].Trim() });
                    }

                }
                //foreach (var v in item.StationCode)
                //{

                //    list.Add(new { Text = v, Value = v.ToString().Split("-")[1].Trim() });
                //}
                commonResponse.result = list;
                commonResponse.response = "success";
                commonResponse.message = "success";



            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }

            return commonResponse;


        }

        [HttpGet("StationCodeNew")]
        public IRCTCModel StationCodeNew()
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {
                string html = string.Empty;
                string ApiUrl = "https://www.irctc.co.in/eticketing/StationListServlet.js";
                string result = BillPaymentCommon.HITMultiRechargeAPI(ApiUrl);

                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(StationCodeURL);
                request.UseDefaultCredentials = true;
                request.Proxy.Credentials = System.Net.CredentialCache.DefaultCredentials;
                request.AutomaticDecompression = DecompressionMethods.GZip;

                using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
                using (Stream stream = response.GetResponseStream())
                using (StreamReader reader = new StreamReader(stream))
                {
                    html = reader.ReadToEnd();
                }
                if (!string.IsNullOrEmpty(html))
                {
                    var s = html.Split("=")[1].Replace("[", "").Replace("]", "").Replace("\"", "").Split(",");
                    var list = new List<dynamic>();
                    foreach (var v in s)
                    {

                        list.Add(new { Text = v, Value = v.Split("-")[1] });
                    }
                    commonResponse.result = list;
                    commonResponse.response = "success";
                    commonResponse.message = "success";
                }


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpPost("AvailabilityFareEnquiry")]
        public async Task<IRCTCModel> AvailabilityFareEnquiry(string TrainNumber,
            string JourneyDate, string FromStation,
            string ToStation, string JourneyClass
            , string JourneyQuota, string PaymentenquiryFlag)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            string documentContents = string.Empty;
            try
            {
                using (Stream receiveStream = Request.Body)
                {
                    using (StreamReader readStream = new StreamReader(receiveStream, Encoding.UTF8))
                    {
                        documentContents = readStream.ReadToEnd();
                    }
                }

                Dictionary<string, object> dic = new Dictionary<string, object>();
                if (!String.IsNullOrEmpty(documentContents))
                {
                    dic = JsonConvert.DeserializeObject<Dictionary<string, object>>(documentContents);
                    //if (PaymentenquiryFlag == "N")
                    //{
                    //    string Trans = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
                    //    dic.Add("clientTransactionId", Trans);
                    //}

                    // dic.Add("wsUserLogin", "jeetroc");
                    //dic.Add("wsUserTransactionPassword", "Testing1");
                    if (dic["clientTransactionId"]==null && PaymentenquiryFlag=="Y")
                    {
                        string Trans = DateTime.UtcNow.Ticks.ToString().Substring(0, 14);
                        dic["clientTransactionId"] = "12345";
                    }
                        
                    dic.Add("reservationChoice", "99");
                }



                dic.Add("masterId", IRCTCUserName);
                dic.Add("enquiryType", "3");
                dic.Add("moreThanOneDay", "true");
                dic.Add("ticketType", "E");

                var result = iRCTCService.sendRequest(AvailabilityFareEnquiryURL
                    .Replace("[TrainNumber]", TrainNumber)
                    .Replace("[JourneyDate]", JourneyDate)
                    .Replace("[FromStation]", FromStation)
                    .Replace("[ToStation]", ToStation)
                    .Replace("[JourneyClass]", JourneyClass)
                    .Replace("[JourneyQuota]", JourneyQuota)
                    .Replace("[PaymentenquiryFlag]", PaymentenquiryFlag)
                    , "POST", JsonConvert.SerializeObject(dic.ToDictionary(m => m.Key, m => m.Value)), 0);
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                    if (commonResponse.response == "success" && PaymentenquiryFlag == "Y" && dic["clientTransactionId"]!=null && dic["clientTransactionId"]!="12345")
                    {
                        var r = await _dataRepository.TrainTicketBooking(dic["clientTransactionId"].ToString(), responseText
                            , long.Parse(dic["memberId"].ToString()), 1);

                        commonResponse.result = new
                        {
                            html = "<html><body><form action=https://www.irctc.co.in/eticketing/wsapplogin method=post><input type=hidden name=wsloginId value=" + dic["wsUserLogin"].ToString() + "> <input type=hidden name=wsTxnId value=" + dic["clientTransactionId"].ToString() + "> <input type=hidden name=wsReturnUrl value=https://newapiv2.mobilepe.co.in/api/auth/TrainBookingReturnUrl></form></body><script type=text/javascript>document.forms[0].submit()</script></html>"
                        };
                    }

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("TrainbetweenStations")]
        public IRCTCModel TrainbetweenStations(string FromStation, string ToStation, string JourneyDate)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {


                var result = iRCTCService.sendRequest(TrainbetweenStationsURL.Replace("[FromStation]", FromStation)
                    .Replace("[ToStation]", ToStation)
                    .Replace("[JourneyDate]", JourneyDate), "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("PNREnquiry")]
        public IRCTCModel PNREnquiry(string PNRNo)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {
                var result = iRCTCService.sendRequest(PNREnquiryURL.Replace("[PNRNo]", PNRNo)
                 , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("GetTrainBookingList")]
        public async Task<object> GetTrainBookingList(int FK_MemId)
        {
            TrainBookingResult bookingResult = new TrainBookingResult();
            TrainBookingListResponse objres = new TrainBookingListResponse();
            TrainBookingList bookingList = new TrainBookingList();
            var res = await this._dataRepository.GetTrainBookingList(FK_MemId);
            if (res != null && res.Count > 0)
            {
                objres.message = "Success";
                objres.response = "Success";
                bookingResult.lstBooking = res;
                objres.result = bookingResult;
            }
            else
            {
                objres.message = "error";
                objres.response = "No Record Found";
            }

            return objres;
        }


        [HttpGet("TicketCancellation")]
        public async Task<object> TicketCancellation(string reservationId, string agentTxnId, string psgnToken)

        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {


                var result = iRCTCService.sendRequest(TicketCancellationURL.Replace("[reservationId]", reservationId)
                    .Replace("[agentTxnId]", agentTxnId)
                    .Replace("[psgnToken]", psgnToken), "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    CancelIRCTCTicket cancelIRCTCTicket = JsonConvert.DeserializeObject<CancelIRCTCTicket>(responseText);

                    if(cancelIRCTCTicket.success == "true")
                    {
                        var r1 = await _dataRepository.CancellationResponse(agentTxnId, responseText);
                    }



                   

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("TicketRefundDetail")]
        public IRCTCModel TicketRefundDetail(string reservationId, string agentTxnId)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {


                var result = iRCTCService.sendRequest(TicketRefundDetailURL.Replace("[reservationId]", reservationId)
                    .Replace("[agentTxnId]", agentTxnId)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("TicketBookingDetail")]
        public IRCTCModel TicketBookingDetail(string agentTxnId)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(TicketBookingDetailURL
                    .Replace("[agentTxnId]", agentTxnId)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("HistorySearchByTransactionID")]
        public IRCTCModel HistorySearchByTransactionID(string userId, string transactionId)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(HistorySearchByTransactionIDURL
                    .Replace("[userId]", userId)
                    .Replace("[transactionId]", transactionId)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("ClusterStationSearchEnquiry")]
        public IRCTCModel ClusterStationSearchEnquiry(string trainNo, string jrnyDate, string srcStation)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(ClusterStationSearchEnquiryURL
                    .Replace("[trainNo]", trainNo)
                    .Replace("[jrnyDate]", jrnyDate)
                    .Replace("[srcStation]", srcStation)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("TrainScheduleEnquiry")]
        public IRCTCModel TrainScheduleEnquiry(string trainNo, string journeyDate, string startingStationCode)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(TrainScheduleEnquiryURL
                    .Replace("[trainNo]", trainNo)
                    .Replace("[journeyDate]", journeyDate)
                    .Replace("[startingStationCode]", startingStationCode)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("TrainBoardingStationEnquiry")]
        public IRCTCModel TrainBoardingStationEnquiry(string TrainNumber,
            string JourneyDate, string FromStation,
            string ToStation, string JourneyClass)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(TrainBoardingStationEnquiryURL
                    .Replace("[TrainNumber]", TrainNumber)
                    .Replace("[JourneyDate]", JourneyDate)
                    .Replace("[FromStation]", FromStation)
                    .Replace("[ToStation]", ToStation)
                    .Replace("[JourneyClass]", JourneyClass)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }



        [HttpGet("RDSAccountDetails")]
        public IRCTCModel RDSAccountDetails()
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {
                var RequestModel = new { masterId = IRCTCUserName };
                var result = iRCTCService.sendRequest(RDSAccountDetailsURL
                    , "POST", JsonConvert.SerializeObject(RequestModel), 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("NewsAndAlertService")]
        public IRCTCModel NewsAndAlertService()
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(NewsAndAlertServiceURL
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("BoardingPointChange")]
        public IRCTCModel BoardingPointChange(string PNRNo, string boardingStation)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(BoardingPointChangeURL
                    .Replace("[PNRNo]", PNRNo)
                    .Replace("[boardingStation]", boardingStation)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("VikalpTrainList")]
        public IRCTCModel VikalpTrainList(string TransId)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(VikalpTrainListURL
                    .Replace("[TransId]", TransId)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }
        [HttpGet("OptVikalp")]
        public IRCTCModel OptVikalp(string TransId, string token, string specialTrainFlag)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(OptVikalpURL
                    .Replace("[TransId]", TransId)
                    .Replace("[token]", token)
                     .Replace("[specialTrainFlag]", specialTrainFlag)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("CheckUserAvailability")]
        public IRCTCModel CheckUserAvailability(string userid, string email, string mobile, string userpan)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(CheckUserAvailabilityURL
                    .Replace("[userid]", userid)
                    .Replace("[email]", email)
                     .Replace("[mobile]", mobile)
                     .Replace("[userpan]", userpan)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpPost("IRCTCRegisteration")]
        public IRCTCModel IRCTCRegisteration(object model)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.RegsendRequest(IRCTCRegisterURL
                    , "POST", JsonConvert.SerializeObject(model), 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("IRCTCPINDetails")]
        public IRCTCModel IRCTCPINDetails(string pincode)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(IRCTCPINDetailsURL
                    .Replace("[pincode]", pincode)

                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpGet("CountryList")]
        public IRCTCModel CountryList()
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(CountryListURL
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("UserStatus")]
        public IRCTCModel UserStatus(string userLoginId)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(UserStatusURL
                    .Replace("[userLoginId]", userLoginId)

                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("GetSMSeMailOTP")]
        public IRCTCModel GetSMSeMailOTP(string userLoginId, string otpType)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(GetSMSeMailOTPURL
                    .Replace("[userLoginId]", userLoginId)
                    .Replace("[otpType]", otpType)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpGet("VerifySMSeMailOTP")]
        public IRCTCModel VerifySMSeMailOTP(string userLoginId, string otpType, string emailCode, string smsCode)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(VerifySMSeMailOTPURL
                    .Replace("[userLoginId]", userLoginId)
                    .Replace("[otpType]", otpType)
                    .Replace("[emailCode]", emailCode)
                    .Replace("[smsCode]", smsCode)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }



        [HttpGet("IRCTCForgotDetails")]
        public IRCTCModel IRCTCForgotDetails(string requestType,
            string userLoginId, string email, string mobile, string otpType, string dob)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            try
            {

                var result = iRCTCService.sendRequest(IRCTCForgotDetailsURL
                    .Replace("[requestType]", requestType)
                    .Replace("[userLoginId]", userLoginId)
                    .Replace("[email]", email)
                    .Replace("[mobile]", mobile)
                    .Replace("[otpType]", otpType)
                    .Replace("[dob]", dob)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }


        [HttpPost("TrainBookingReturnUrl")]
        public async Task<IRCTCModel> TrainBookingReturnUrl()
        {
            IRCTCModel commonResponse = new IRCTCModel();
            string documentContents = "";
            using (Stream receiveStream = Request.Body)
            {
                using (StreamReader readStream = new StreamReader(receiveStream, Encoding.UTF8))
                {
                    documentContents = readStream.ReadToEnd();

                }
            }
            //BookingResponse bookingResponse = JsonConvert.DeserializeObject<BookingResponse>(documentContents);
            //var _result = await _dataRepository.SaveBookingResponse(bookingResponse);
            //if (_result != null && _result.Flag == 1)
            //{
            //    commonResponse.response = "success";
            //}
            string responseText = HttpUtility.UrlDecode(documentContents).Split("data=")[1];
            byte[] data = Convert.FromBase64String(responseText);
            responseText = Encoding.UTF8.GetString(data);

            JObject jo = JObject.Parse(responseText);
            commonResponse = iRCTCService.ToApiResponse(jo);
            if (commonResponse.response == "success" && jo.ContainsKey("clientTransactionId") && jo.ContainsKey("pnrNumber"))
            {

                var r1 = await _dataRepository.TrainTicketBooking(jo["clientTransactionId"].ToString(), responseText, 0, 2);

            }
            return commonResponse;
        }
        #endregion

        #region CardMappingWithWallet
        [HttpPost("ActivateRupayCardOTPGen")]
        public CommonResponse<ActivateRupayCardOTPGenResponse> ActivateRupayCardOTPGen(ActivateRupayCardOTPGenRequest model)
        {
            CommonResponse<ActivateRupayCardOTPGenResponse> objres = new CommonResponse<ActivateRupayCardOTPGenResponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(ActivateRupayCardOTPGenRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.KITNUMBER + model.TRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechActivateRupayCardOTPGenUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<ActivateRupayCardOTPGenResponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpPost("ActivateRupayCardResendOTPGen")]
        public CommonResponse<ActivateRupayCardResendOTPGenRespose> ActivateRupayCardResendOTPGen(ActivateRupayCardResendOTPGenRequest model)
        {
            CommonResponse<ActivateRupayCardResendOTPGenRespose> objres = new CommonResponse<ActivateRupayCardResendOTPGenRespose>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(ActivateRupayCardResendOTPGenRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.APITRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechActivateRupayCardResendOTPGenUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<ActivateRupayCardResendOTPGenRespose>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {

                    objres.message = objres.result.RESPONSEDESC; ;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpPost("ActivateRupayCard")]
        public CommonResponse<ActivateRupayCardReponse> ActivateRupayCard(ActivateRupayCardRequest model)
        {
            CommonResponse<ActivateRupayCardReponse> objres = new CommonResponse<ActivateRupayCardReponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(ActivateRupayCardResendOTPGenRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.APITRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechActivateRupayCardUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<ActivateRupayCardReponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {
                    objres.message = objres.result.RESPONSEDESC;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpPost("CardReplacementOTP")]
        public CommonResponse<CardReplacementOTPReponse> CardReplacementOTP(CardReplacementOTPRequest model)
        {
            CommonResponse<CardReplacementOTPReponse> objres = new CommonResponse<CardReplacementOTPReponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(CardReplacementOTPRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.NEWKITNUMBER + model.TRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechCardReplacementOTPUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<CardReplacementOTPReponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {
                    objres.message = objres.result.RESPONSEDESC;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }



        [HttpPost("CardReplacementOTP1")]
        public CommonResponse<CardReplacementResendReponse> CardReplacementOTP1(CardReplacementResendRequest model)
        {
            CommonResponse<CardReplacementResendReponse> objres = new CommonResponse<CardReplacementResendReponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(CardReplacementResendRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.APITRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechCardReplacementResendOTPUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<CardReplacementResendReponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {
                    objres.message = objres.result.RESPONSEDESC;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }


        [HttpPost("CardReplacementResendOTP")]
        public CommonResponse<CardReplacementResendReponse> CardReplacementResendOTP(CardReplacementResendRequest model)
        {
            CommonResponse<CardReplacementResendReponse> objres = new CommonResponse<CardReplacementResendReponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(CardReplacementResendRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.APITRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechCardReplacementResendOTPUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<CardReplacementResendReponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {
                    objres.message = objres.result.RESPONSEDESC;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        [HttpPost("CardReplacement")]
        public CommonResponse<CardReplacementResendReponse> CardReplacement(CardReplacementRequest model)
        {
            CommonResponse<CardReplacementResendReponse> objres = new CommonResponse<CardReplacementResendReponse>();
            string ResponseText = "";
            string EncryptedText = "";
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            StreamReader sr;
            try
            {
                model.PARTNERID = FintechPartnerID;
                model.SECURITYKEY = FintechSecurityKey;
                model.AGENTID = "";
                js = new DataContractJsonSerializer(typeof(CardReplacementRequest));
                ms = new MemoryStream();
                js.WriteObject(ms, model);
                ms.Position = 0;
                sr = new StreamReader(ms);
                CustData = sr.ReadToEnd();
                sr.Close();
                ms.Close();
                CustData = CustData.Replace("\\", string.Empty);
                string checksum = model.CUSTOMERMOBILENO + model.PARTNERID + model.SECURITYKEY + model.NEWKITNUMBER + model.APITRANSACTIONID;
                checksum = oAuthorization.ComputeSha256Hash(checksum);
                EncryptedText = oAuthorization.encodeRequest(CustData, FintechAESKEY, checksum);
                EncryptedText = EncryptedText.Replace("\\", string.Empty);
                EncryptedText = EncryptedText.Replace("\\/", "/");
                ResponseText = oAuthorization.sendRequest(FintechCardReplacementUrl, "POST", EncryptedText, model.access_token, model.access_secret, 0);
                js = new DataContractJsonSerializer(typeof(Request_Response));
                ms = new MemoryStream(ASCIIEncoding.ASCII.GetBytes(ResponseText));
                Request_Response response = (Request_Response)js.ReadObject(ms);
                ResponseText = oAuthorization.decodeResponse(response.ENCVALUE, FintechAESKEY);
                objres.result = JsonConvert.DeserializeObject<CardReplacementResendReponse>(ResponseText);
                if (objres.result.STATUSCODE == "0")
                {
                    objres.message = objres.result.RESPONSEDESC;
                    objres.response = "success";
                }
                else
                {
                    objres.response = "error";
                    objres.message = objres.result.RESPONSEDESC; ;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }
        #endregion

        [HttpGet("GetCardDispatchDetailByUser")]
        public async Task<CommonResponse<CardDispatchDetail>> GetCardDispatchDetailByUser(long memberId)
        {
            CommonResponse<CardDispatchDetail> objres = new CommonResponse<CardDispatchDetail>();

            try
            {
                var result = await _dataRepository.GetCardDispatchDetailByUser(memberId);
                if (result != null && result.NameonCard != null)
                {
                    objres.result = result;
                    objres.response = "success";
                    objres.message = "success";
                }
                else
                {
                    objres.response = "success";
                    objres.message = "success";
                    objres.result = result;
                }
            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objres.response = "error";
                objres.message = ex.Message;
            }
            return objres;
        }

        #region New Wallet API

        [HttpPost("V2/WalletCreation")]
        public WalletV2WalletCreationResponseModel WalletCreation(WalletCreationRequestV2DTO model)
        {
            ToPaywalletReg objTopaywaletReg = new ToPaywalletReg();
            KitNoResponse objkitres = new KitNoResponse();
            WalletV2WalletCreationResponseModel commonResponse = new WalletV2WalletCreationResponseModel();
            object comonResponse = new object();

            // WalletCreationRequestV2 MPeModel = Mapper.Map<WalletCreationRequestV2DTO,WalletCreationRequestV2>(model);
            //WalletCreationRequestV2DTO MPeModel1 = Mapper.Map<WalletCreationRequestV2DTO, WalletCreationRequestV2>(model);
            //WalletCreationRequestV2 MPeModel = _mapper.Map<WalletCreationRequestV2>(model);
            try
            {
                objTopaywaletReg.OTP = model.OTP;
                objTopaywaletReg.MobileNO = model.CUSTOMERMOBILENO;
                objTopaywaletReg.FK_MemId = model.memberId;

                var res = _dataRepository.ValidateWallet_Reg(objTopaywaletReg);

                if (res != null && res.Result.msg == 1)
                {

                    //objkitres.KitType = "VIRTUAL";
                    objkitres.OpCode = 1;
                    objkitres.FK_MemId = model.memberId;
                    objkitres.MobileNO = model.CUSTOMERMOBILENO;
                    var objkits = _dataRepository.AssignKit_No(objkitres);


                    if (objkits != null && objkits.Result.Code == 1)
                    {
                        model.KITNO = objkits.Result.KitNo;
                        model.CARDTYPE = objkits.Result.KitType;
                        if (model.KITNO != null)
                        {
                            objTopaywaletReg.kit_no = model.KITNO;
                            objTopaywaletReg.KitType = model.CARDTYPE;
                            var msg = _dataRepository.SaveTopayWallet_Reg(model);

                            var result = fintech.sendRequest(WalletCreationV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                            string responseText = result.responseText;
                            commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCreationResponseModel>(responseText);



                            objTopaywaletReg.response = commonResponse.response;
                            objTopaywaletReg.message = commonResponse.message;

                            objTopaywaletReg.kit_no = commonResponse.result.kit_no;
                            objTopaywaletReg.card_id = commonResponse.result.card_id;
                            objTopaywaletReg.KitType = commonResponse.result.CardType;

                            var updatemsg = _dataRepository.UpdateWalletReg_Response(objTopaywaletReg);
                        }
                        else
                        {
                            commonResponse.response = "error";
                            commonResponse.message = "Kit No. Not Available";
                        }

                    }
                    else
                    {
                        commonResponse.response = "error";
                        commonResponse.message = objkits.Result.Remark;
                    }

                }


            }

            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }
        [HttpPost("V2/WalletCreationOTP")]
        public WalletV2WalletCommonResponse WalletCreationOTP(WalletCreationOTPRequest model)
        {
            walletOTP_Log objTopup = new walletOTP_Log();
            objTopup.MobileNO = model.CUSTOMERMOBILENO;
            objTopup.FK_MemId = model.memberId;
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {


                var result = fintech.sendRequest(WalletCreationOTPV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);


                objTopup.response = commonResponse.response;
                objTopup.message = commonResponse.message;
                objTopup.Opcode = "1";
                var msgFinal = _dataRepository.SaveWallet_OTPLog(objTopup);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }


        [HttpPost("V2/CardInfo")]
        public object CardInfoV2(WalletCardInfoRequest model)
        {
            WalletSetPIN_log objcardinfo = new WalletSetPIN_log();
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {
                objcardinfo.FK_MemId = model.memberId;
                objcardinfo.MobileNo = model.CUSTOMERMOBILENO;
                var result = fintech.sendRequest(CardInfoV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);
                //JObject jo = JObject.Parse(responseText);
                //commonResponse = fintech.ToApiRequest(jo);
                objcardinfo.CardId = model.CARDID;
                objcardinfo.KITNO = model.KITNO;
                objcardinfo.response = commonResponse.response;
                objcardinfo.message = commonResponse.message;
                var msgFinal = _dataRepository.SaveCardinfo(objcardinfo);
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }



            return commonResponse;
        }

        [HttpPost("V2/CardSetPIN")]
        public WalletV2WalletCommonResponse CardSetPIN(WalletSetPinResponse model)
        {



            WalletSetPIN_log objwalletsetpin = new WalletSetPIN_log();
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {
                objwalletsetpin.FK_MemId = model.memberId;
                objwalletsetpin.MobileNo = model.CUSTOMERMOBILENO;
                var result = fintech.sendRequest(WalletSetPINV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);

                objwalletsetpin.CardId = model.CARDID;
                objwalletsetpin.KITNO = model.KITNO;
                objwalletsetpin.response = commonResponse.response;
                objwalletsetpin.message = commonResponse.message;
                var msgFinal = _dataRepository.SaveWalletSetPINV2(objwalletsetpin);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }
        [HttpPost("V2/WalletPreferences")]
        public WalletPrefrenceResponse WalletPreferencesV2(WalletPrefrenceRequest model)
        {

            WalletPrefrenceResponse commonResponse = new WalletPrefrenceResponse();
            var result = fintech.sendRequest(WalletPreferencesV2URL, "POST", JsonConvert.SerializeObject(model), 0);
            string responseText = result.responseText;
            commonResponse = JsonConvert.DeserializeObject<WalletPrefrenceResponse>(responseText);
            //JObject jo = JObject.Parse(responseText);
            //commonResponse = fintech.ToApiRequest(jo);

            return commonResponse;
        }
        [HttpPost("V2/WalletLimitV2")]
        public WalletV2WalletCommonResponse WalletLimitV2(WalletSetlimit model)
        {
            WalletSetlimit_log objwalletlimit = new WalletSetlimit_log();
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {
                objwalletlimit.FK_MemId = model.memberId;
                objwalletlimit.MobileNo = model.CUSTOMERMOBILENO;
                var result = fintech.sendRequest(WalletLimitV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);
                //commonResponse.result ={ };
                objwalletlimit.ProcId = 1;
                objwalletlimit.TXNTYPE = model.TXNTYPE;
                objwalletlimit.LIMIT = model.LIMIT;
                objwalletlimit.CARDID = model.CARDID;
                objwalletlimit.KITNO = model.KITNO;
                objwalletlimit.response = commonResponse.response;
                objwalletlimit.message = commonResponse.message;
                var msgFinal = _dataRepository.SaveWalletLimitV2(objwalletlimit);
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
                //commonResponse.result ={ };

            }
            return commonResponse;
        }

        [HttpPost("V2/WalletSetPreferences")]
        public WalletV2WalletCommonResponse WalletSetPreferencesV2(WalletSetPreferences model)
        {
            WalletSetPreferencesSave objwallet = new WalletSetPreferencesSave();
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {
                objwallet.Fk_MemId = model.memberId;
                objwallet.CUSTOMERMOBILENO = model.CUSTOMERMOBILENO;
                var result = fintech.sendRequest(WalletSetPreferencesV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);

                objwallet.CONTACTLESS = model.CONTACTLESS;
                objwallet.ATM = model.ATM;
                objwallet.ECOM = model.ECOM;
                objwallet.POS = model.POS;
                objwallet.DCC = model.DCC;
                objwallet.NFS = model.NFS;
                objwallet.INTERNATIONAL = model.INTERNATIONAL;
                objwallet.KITNO = model.KITNO;
                objwallet.response = commonResponse.response;
                objwallet.message = commonResponse.message;
                var msgFinal = _dataRepository.SaveWalletSetPreferences(objwallet);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }

        [HttpPost("V2/WalletTopUp")]
        public WalletV2WalletCommonResponse WalletTopUpV2(WalletTopUpV2 model)
        {
            walletTopUp objTopup = new walletTopUp();
            objTopup.TransactionId = model.TRANSACTIONID;
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {

                var res = _dataRepository.ValidateWallet_Topup(objTopup);
                if (res != null && res.Result.msg == 1)
                {
                    objTopup.FK_MemId = model.memberId;

                    objTopup.TopupAmount = model.TOPUPAMOUNT;
                    objTopup.MobileNO = model.CUSTOMERMOBILENO;
                    objTopup.Remarks = model.REMARKS;

                    var msg = _dataRepository.SaveWallet_Topup(objTopup);
                    var result = fintech.sendRequest(WalletTopupV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                    string responseText = result.responseText;
                    commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);

                    objTopup.response = commonResponse.response;
                    objTopup.message = commonResponse.message;
                    var msgFinal = _dataRepository.UpdateWalletTopUp(objTopup);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = res.Result.Result;
                }



            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }

            return commonResponse;
        }


        [HttpPost("V2/WalletDebit")]
        public WalletV2WalletCommonResponse WalletDebitV2(WalletDebitV2 model)
        {
            WalletDebit_log objDebit = new WalletDebit_log();
            AddedOnRequest addedOnRequest = new AddedOnRequest();
            AddedOnRequest addedOn = new AddedOnRequest();
            string Remark = "";
            string ActionType = "";
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {
                objDebit.FK_MemId = model.memberId;
                objDebit.MobileNo = model.CUSTOMERMOBILENO;
                var GetAvailablrKirt = _dataRepository.GetAvailableKit(model.OldCardId, model.Fk_CardId, model.memberId, "");
                if (model.Type.ToLower() == "flightbooking")
                {
                    var result1 = fintech.sendRequest(WalletDebitV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                    string responseText1 = result1.responseText;
                    commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText1);
                    if (commonResponse.response == "success")
                    {
                        string WalletTopupURL = "https://uatapiv2.mobilepe.co.in/api/auth/V2/WalletTopUp";
                        string APIURl = "";
                        dynamic json = JsonConvert.DeserializeObject(model.Request);
                        ResultTravel resultTravel = JsonConvert.DeserializeObject<ResultTravel>(model.Request);
                        for (int i = 0; i <= resultTravel.data.Count - 1; i++)
                        {
                            if (resultTravel.data[i].isLcc == true)
                            {
                                APIURl = "https://uatapiv2.mobilepe.co.in/api/auth/BookTicketLCC";
                                ResultTravelForLCC resultTravelForLCC = JsonConvert.DeserializeObject<ResultTravelForLCC>(model.Request);
                                string result = Common.HITAPIFlightBooking(APIURl, JsonConvert.SerializeObject(resultTravelForLCC.data[i]));
                                BookingResponseForLCC deserializedProduct = JsonConvert.DeserializeObject<BookingResponseForLCC>(result);
                                if (deserializedProduct != null)
                                {
                                    if (deserializedProduct.Response.Error.ErrorCode != 0)
                                    {
                                        WalletTopUpV2 walletTopUpV2 = new WalletTopUpV2();
                                        walletTopUpV2.CUSTOMERMOBILENO = model.CUSTOMERMOBILENO;
                                        walletTopUpV2.TOPUPAMOUNT = decimal.Parse(resultTravelForLCC.data[i].Price);
                                        walletTopUpV2.TRANSACTIONID = model.TRANSACTIONID + "_1";
                                        walletTopUpV2.REMARKS = "Refund on Flight Cancellation";
                                        walletTopUpV2.memberId = model.memberId;

                                        string result123 = Common.HITAPIFlightBooking(WalletTopupURL, JsonConvert.SerializeObject(walletTopUpV2));
                                        // var result123 = fintech.sendRequest(WalletTopupV2URL, "POST", JsonConvert.SerializeObject(walletTopUpV2), 0);
                                    }
                                }
                            }
                            else
                            {
                                APIURl = "https://uatapiv2.mobilepe.co.in/api/auth/BookTicketNonLCC";
                                ResultTravel resultTravelNonLCC = JsonConvert.DeserializeObject<ResultTravel>(model.Request);
                                string result = Common.HITAPIFlightBooking(APIURl, JsonConvert.SerializeObject(resultTravelNonLCC.data[i]));
                                BookTicketResponseForNonLcc deserializedProduct = JsonConvert.DeserializeObject<BookTicketResponseForNonLcc>(result);
                                if (deserializedProduct != null)
                                {
                                    if (deserializedProduct.Response.Error.ErrorCode != 0)
                                    {
                                        WalletTopUpV2 walletTopUpV2 = new WalletTopUpV2();
                                        walletTopUpV2.CUSTOMERMOBILENO = model.CUSTOMERMOBILENO;
                                        walletTopUpV2.TOPUPAMOUNT = decimal.Parse(resultTravelNonLCC.data[i].Price);
                                        walletTopUpV2.TRANSACTIONID = model.TRANSACTIONID + "_1";
                                        walletTopUpV2.REMARKS = "Refund on Flight Cancellation";
                                        walletTopUpV2.memberId = model.memberId;
                                        string result123 = Common.HITAPIFlightBooking(WalletTopupURL, JsonConvert.SerializeObject(walletTopUpV2));
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        commonResponse.response = "error";
                        commonResponse.message = commonResponse.message;
                    }
                }
                else
                {
                    if (model.Type == "addoncard")
                    {
                        if (GetAvailablrKirt.Result.KitNo != "")
                        {
                            addedOnRequest.KITNO = GetAvailablrKirt.Result.KitNo;

                            addedOnRequest.CARDTYPE = GetAvailablrKirt.Result.KitType;

                            AddedOnResponse commonResponse1 = new AddedOnResponse();
                            var result = fintech.sendRequest(AddedOnCardURL, "POST", JsonConvert.SerializeObject(addedOnRequest), 0);
                            string responseText = result.responseText;
                            commonResponse1 = JsonConvert.DeserializeObject<AddedOnResponse>(responseText);
                            if (commonResponse1.response == "success")
                            {
                                model.card_id = commonResponse1.result.addon_card_id;
                                model.kit_no = commonResponse1.result.kit_no;
                                model.PaymentId = model.PaymentId;
                                model.OrderId = model.OrderId;

                                var result1 = fintech.sendRequest(WalletDebitV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                                string responseText1 = result1.responseText;
                                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText1);

                                objDebit.response = commonResponse.response;
                                objDebit.message = commonResponse.message;

                                Remark = "Payment for Addon card";
                                ActionType = GetAvailablrKirt.Result.Type;
                                var transactiondata = _dataRepository.SaveTransactionData(model.memberId, model.PaymentId, "Wallet Debit", Remark, ActionType, model.TRANSAMOUNT, "", "", "", "", responseText1);

                            }
                            else
                            {
                                commonResponse.response = "error";
                                commonResponse.message = commonResponse1.message;
                            }
                        }
                        else
                        {
                            commonResponse.response = "error";
                            commonResponse.message = "Kit Not Available";
                        }
                    }
                    if (GetAvailablrKirt.Result.UpgradeStatus == 0)
                    {

                        var result = fintech.sendRequest(WalletDebitV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                        string responseText = result.responseText;
                        commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);
                        objDebit.response = commonResponse.response;
                        objDebit.message = commonResponse.message;
                        Remark = "Card purchased payment success";
                        ActionType = GetAvailablrKirt.Result.Type;
                        var transactiondata = _dataRepository.SaveTransactionData(model.memberId, model.PaymentId, "Wallet Debit", Remark, ActionType, model.TRANSAMOUNT, "", "", "", "", responseText);
                    }

                    else
                    {

                        addedOnRequest.CUSTOMERMOBILENO = model.CUSTOMERMOBILENO;

                        if (GetAvailablrKirt.Result.KitNo != "")
                        {
                            addedOnRequest.KITNO = GetAvailablrKirt.Result.KitNo;

                            addedOnRequest.CARDTYPE = GetAvailablrKirt.Result.KitType;

                            AddedOnResponse commonResponse1 = new AddedOnResponse();
                            var result = fintech.sendRequest(AddedOnCardURL, "POST", JsonConvert.SerializeObject(addedOnRequest), 0);
                            string responseText = result.responseText;
                            commonResponse1 = JsonConvert.DeserializeObject<AddedOnResponse>(responseText);
                            if (commonResponse1.response == "success")
                            {
                                model.card_id = commonResponse1.result.addon_card_id;
                                model.kit_no = commonResponse1.result.kit_no;
                                model.PaymentId = model.PaymentId;
                                model.OrderId = model.OrderId;

                                var result1 = fintech.sendRequest(WalletDebitV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                                string responseText1 = result1.responseText;
                                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText1);

                                objDebit.response = commonResponse.response;
                                objDebit.message = commonResponse.message;

                                Remark = "Card purchased payment success";
                                ActionType = GetAvailablrKirt.Result.Type;
                                var transactiondata = _dataRepository.SaveTransactionData(model.memberId, model.PaymentId, "Wallet Debit", Remark, ActionType, model.TRANSAMOUNT, "", "", "", "", responseText);

                            }
                            else
                            {
                                commonResponse.response = "error";
                                commonResponse.message = commonResponse1.message;
                            }
                        }
                        else
                        {
                            commonResponse.response = "error";
                            commonResponse.message = "Kit Not Available";
                        }



                    }

                }
                objDebit.OpCode = 1;
                objDebit.DrAmount = model.TRANSAMOUNT;
                objDebit.TransactionId = model.TRANSACTIONID;
                objDebit.Remarks = model.REMARKS;
                objDebit.walletPin = model.WALLETPIN;
                objDebit.Type = model.Type;
                objDebit.Fk_CardId = model.Fk_CardId;
                objDebit.KitNo = addedOnRequest.KITNO;
                objDebit.card_id = model.card_id;

                var msgFinal = _dataRepository.SaveWalletDebit(objDebit);
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }

        [HttpPost("V2/WalletBlockUnblock")]
        public WalletV2WalletCommonResponse WalletBlockUnblockV2(WalletBlockUnblockV2 model)
        {
            WalletBlockUnblock_log objblockunblock = new WalletBlockUnblock_log();
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            try
            {
                objblockunblock.FK_MemId = model.memberId;
                objblockunblock.MobileNO = model.CUSTOMERMOBILENO;
                var result = fintech.sendRequest(WalletBlockUnblockV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);


                objblockunblock.CardId = model.CARDID;
                objblockunblock.Remarks = model.REMARKS;
                objblockunblock.BlockStatus = model.BLOCKSTATUS;
                objblockunblock.KITNO = model.KITNO;
                objblockunblock.response = commonResponse.response;
                objblockunblock.message = commonResponse.message;
                var msgFinal = _dataRepository.SaveWalletBlockUnblock(objblockunblock);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }
        [HttpPost("V2/Wallettransactions")]
        public object WallettransactionsV2(WallettransactionsV2 model)
        {

            object commonResponse = new object();

            model.PERPAGE = 10;

            var result = fintech.sendRequest(WallettransactionsV2URL, "POST", JsonConvert.SerializeObject(model), 0);
            string responseText = result.responseText;
            // commonResponse = JsonConvert.DeserializeObject<WalletV2ResponseModel>(responseText);
            JObject jo = JObject.Parse(responseText);
            commonResponse = fintech.ToApiRequest(jo);
            return commonResponse;
        }
        [HttpPost("V2/WallettransactionStatus")]
        public object WallettransactionStatusV2(WallettransactionStatusV2 model)
        {

            object commonResponse = new object();


            var result = fintech.sendRequest(WallettransactionStatusV2URL, "POST", JsonConvert.SerializeObject(model), 0);
            string responseText = result.responseText;
            // commonResponse = JsonConvert.DeserializeObject<WalletV2ResponseModel>(responseText);
            // commonResponse = JsonConvert.DeserializeObject<WalletV2ResponseModel>(responseText);
            JObject jo = JObject.Parse(responseText);
            commonResponse = fintech.ToApiRequest(jo);

            return commonResponse;
        }
        [HttpPost("V2/WalletInfo")]
        public object WalletInfoV2(WalletCreationOTPRequest model)
        {

            object commonResponse = new object();


            var result = fintech.sendRequest(WalletInfoV2URL, "POST", JsonConvert.SerializeObject(model), 0);
            string responseText = result.responseText;
            //  commonResponse = JsonConvert.DeserializeObject<WalletV2ResponseModel>(responseText);
            JObject jo = JObject.Parse(responseText);
            commonResponse = fintech.ToApiRequest(jo);

            return commonResponse;
        }
        #endregion

        [HttpPost("V2/validateWalletCreation")]
        public WalletV2ResponseModel validateWalletCreation(ToPaywalletReg model)
        {
            ToPaywalletReg objTopaywaletReg = new ToPaywalletReg();
            WalletV2ResponseModel commonResponse = new WalletV2ResponseModel();
            result result = new result();
            commonResponse.result = result;

            try
            {
                var res = _dataRepository.ValidateWallet_Reg(model);
                if (res != null && res.Result.msg == 1)
                {

                    commonResponse.response = "success";
                    commonResponse.message = res.Result.Result;
                    result.Iswalletexists = false;

                }
                else if (res != null && res.Result.msg == 2)
                {
                    commonResponse.response = "success";
                    commonResponse.message = res.Result.Result;
                    result.Iswalletexists = true;

                }


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
                result.Iswalletexists = false;
            }
            return commonResponse;
        }

        //[HttpPost("V2/WalletDashboard")]
        //public object WalletDashboardV2(WalletDashboardV2 model)
        //{
        //    WalletDashboard_log objdashboard = new WalletDashboard_log();
        //    WalletV2DashboardResponseModel cmnResponse = new WalletV2DashboardResponseModel();


        //    try
        //    {
        //        objdashboard.FK_MemId = model.memberId;
        //        objdashboard.MobileNo = model.CUSTOMERMOBILENO;


        //        var result = fintech.sendRequest(WalletBalanceV2URL, "POST", JsonConvert.SerializeObject(model), 0);
        //        string responseText = result.responseText;
        //        cmnResponse = JsonConvert.DeserializeObject<WalletV2DashboardResponseModel>(responseText);

        //        objdashboard.walletbalance = cmnResponse.result.walletbalance;
        //        objdashboard.Monthlyloadlimit = cmnResponse.result.Monthlyloadlimit;
        //        objdashboard.Monthlyremaininglimit = cmnResponse.result.Monthlyremaininglimit;

        //        var msgCard = _dataRepository.GetDashboard(objdashboard);
        //        cmnResponse.result.IsCardApply = msgCard.Result.IsCardApply;
        //        cmnResponse.result.IsDispatched = msgCard.Result.IsDispatched;
        //        cmnResponse.result.DocketNo = msgCard.Result.DocketNo;
        //        cmnResponse.result.AddDate = msgCard.Result.AddDate;
        //        cmnResponse.result.URL = msgCard.Result.URL;
        //        cmnResponse.result.IsOldCard = msgCard.Result.IsOldCard;
        //        //objdashboard.IsCardApply = cmnResponse.result.ISCARDIDAPPLY;
        //        objdashboard.response = cmnResponse.response;
        //        objdashboard.message = cmnResponse.message;




        //    }
        //    catch (Exception ex)
        //    {
        //        cmnResponse.response = "error";
        //        cmnResponse.message = ex.Message;
        //    }


        //    return cmnResponse;
        //}

        [HttpPost("V2/GetCardType")]
        public async Task<object> GetCardTypeData(CardRequestModelLog model)
        {
            CardResult cardResult = new CardResult();
            CardData objcardinfo = new CardData();
            CardDataResponse commonResponse = new CardDataResponse();
            CardRequestModelLog objCard = new CardRequestModelLog();

            CommonResponse<CardData> objres = new CommonResponse<CardData>();
            try
            {
                objCard.Fk_memId = model.Fk_memId;
                var cardData = await this._dataRepository.GetCardData(objCard);
                //commonResponse.result = cardData;
                if (cardData != null && cardData.Count > 0)
                {
                    commonResponse.response = "success";
                    commonResponse.message = "";
                    cardResult.lstCardData = cardData;
                    commonResponse.result = cardResult;
                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = "Data Not Found ";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }
        
        [HttpPost("V2/WalletSetPin")]
        public object WalletSetPin(WalletSetPin model)
        {

            AddedOnResponse commonResponse = new AddedOnResponse();


            var result = fintech.sendRequest(SetPinWallet, "POST", JsonConvert.SerializeObject(model), 0);
            string responseText = result.responseText;
            commonResponse = JsonConvert.DeserializeObject<AddedOnResponse>(responseText);
            if (commonResponse.response == "success")
            {
                var msgFinal = _dataRepository.WalletSetPin(model);
            }

            return commonResponse;
        }


        [HttpPost("V2/ApplyCard")]
        public object ApplyCard(ApplyCard model)
        {

            WalletV2WalletCommonResponse objres = new WalletV2WalletCommonResponse();
            var res = _dataRepository.ApplyCard(model);
            if (res != null)
            {
                objres.message = "success";
                objres.response = "success";
            }
            else
            {
                objres.message = "error";
                objres.response = "error";
            }

            return objres;
        }

        [HttpPost("V2/ReplaceCard")]
        public async Task<object> ReplaceCard(ReplaceCard model)
        {

            ReplaceCardLog objlog = new ReplaceCardLog();
            ReplaceCardRespone commonResponse = new ReplaceCardRespone();
            BlockandUnblockStatusRequest cheackStatus = new BlockandUnblockStatusRequest();
            KitNoResponse objkitres = new KitNoResponse();
            CheckCardTypeRequest objcheckKitType = new CheckCardTypeRequest();
            CheckCardTypeResponse objcheckCardTypeResponse = new CheckCardTypeResponse();
            try
            {
                cheackStatus.KITNO = model.OldKitNo;
                cheackStatus.FK_MemId = model.Fk_MemId;
                objcheckKitType.FK_MemId = model.Fk_MemId;
                objcheckKitType.KITNO = model.OldKitNo;
                objkitres.MobileNO = model.CUSTOMERMOBILENO;
                objkitres.FK_MemId = int.Parse(model.Fk_MemId);
                objkitres.OpCode = 1;
                // if User will be Change




                var result = fintech.sendRequest(ReplaceCardurl, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<ReplaceCardRespone>(responseText);
                commonResponse.CardId = model.CARDID;
                commonResponse.Fk_MemId = model.Fk_MemId;
                commonResponse.MobileNo = model.CUSTOMERMOBILENO;
                commonResponse.OldKitNo = model.OldKitNo;
                commonResponse.KitNo = model.KitNo;
                commonResponse.response = commonResponse.response;
                commonResponse.message = commonResponse.message;
                var msgFinal = await _dataRepository.ReplaceCard(commonResponse);

                objlog.message = msgFinal.message;
                objlog.response = msgFinal.response;



            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                objlog.response = "error";
                objlog.message = ex.Message;

            }

            return objlog;
        }


        [HttpPost("V2/UpdateMobile")]
        public UpdateResponse UpdateMobile(UpdateMobile model)
        {
            UpdateMobileLog objlog = new UpdateMobileLog();
            objlog.OldMobileNo = model.CUSTOMERMOBILENO;
            objlog.NewMobileNo = model.CUSTOMERMOBILENONEW;
            objlog.Fk_MemId = model.Fk_MemId;
            UpdateResponse commonResponse = new UpdateResponse();
            try
            {
                var result = fintech.sendRequest(UpdateMobileURL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<UpdateResponse>(responseText);
                objlog.response = commonResponse.response;
                objlog.message = commonResponse.message;
                var msgFinal = _dataRepository.UpdateMobile(objlog);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }


        [HttpPost("V2/GetWalletPinRestOTP")]
        public WalletRestOTPPINResponse GetWalletPinRestOTP(WalletCreationOTPRequest model)
        {
            walletOTP_Log objTopup = new walletOTP_Log();
            WalletRestOTPPINResponse commonResponse = new WalletRestOTPPINResponse();
            objTopup.MobileNO = model.CUSTOMERMOBILENO;
            objTopup.FK_MemId = model.memberId;

            try
            {
                var result = fintech.sendRequest(WalletPinRestOTPURL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletRestOTPPINResponse>(responseText);
                objTopup.response = commonResponse.response;
                objTopup.message = commonResponse.message;
                objTopup.OTP = commonResponse.result.otp;
                objTopup.Opcode = "2";
                var msgFinal = _dataRepository.SaveWallet_OTPLog(objTopup);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }

        [HttpPost("V2/ResetPIN")]
        public WalletV2WalletCommonResponse ResetPIN(WalletResetOTPRequest model)
        {
            walletResetOTP_Log objTopup = new walletResetOTP_Log();
            WalletV2WalletCommonResponse commonResponse = new WalletV2WalletCommonResponse();
            objTopup.MobileNO = model.CUSTOMERMOBILENO;
            objTopup.OTP = model.OTP;
            objTopup.WalletPin = model.WALLETPIN;
            objTopup.ComfirmWalletPin = model.CONFIRMWALLETPIN;
            objTopup.FK_MemId = model.memberId;

            try
            {
                var result = fintech.sendRequest(WalletRestOTPURL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<WalletV2WalletCommonResponse>(responseText);


                objTopup.response = commonResponse.response;
                objTopup.message = commonResponse.message;

                var msgFinal = _dataRepository.SaveWalletResetOTPLog(objTopup);

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;

            }
            return commonResponse;
        }

        [HttpPost("V2/CreateKYC")]
        public KYCResponse CreateKYC(CreateKYCRequest model)
        {
            KYCResponse commonResponse = new KYCResponse();
            try
            {
                var result = fintech.sendRequest(CreateKYCURL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<KYCResponse>(responseText);
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.status = "error";
                commonResponse.message = ex.Message;
            }

            return commonResponse;
        }

        [HttpPost("V2/ViewCardDetails")]
        public async Task<object> ViewCardDetails(CardViewDetails model)
        {
            CardViewResult cardresult = new CardViewResult();
            CardViewDetailResult cardview = new CardViewDetailResult();
            CardViewResponse commonResponse = new CardViewResponse();
            CardViewDetails_log objcard = new CardViewDetails_log();
            try
            {
                objcard.Fk_MemId = model.Fk_MemId;
                var res = await this._dataRepository.CardViewInfo(objcard);
                if (res != null && res.Count > 0) 
                {
                    commonResponse.message = "Success";
                    commonResponse.response = "Success";
                    cardresult.kycStatus = res[0].kycStatus;
                    cardresult.monthlyLimit = res[0].monthlyLimit;
                    cardresult.lstCard = res;
                    commonResponse.result = cardresult;

                }

                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = "Data Not Found ";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpPost("V2/AddonCard")]
        public AddedOnResponse AddonCard(AddedOnRequest model)
        {
            AddedOnResponse commonResponse = new AddedOnResponse();
            try
            {

                var result = fintech.sendRequest(AddedOnCardURL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<AddedOnResponse>(responseText);
                //if(commonResponse.response == "success")
                //{
                //    model.card_id = commonResponse.result.addon_card_id;
                //    model.kit_no = commonResponse.result.kit_no;
                //    model.PaymentId = model.PaymentId;
                //    model.OrderId = model.OrderId;
                //    var msgFinal = _dataRepository.AddedOnRequest(model);
                //}


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }

            return commonResponse;
        }

        [HttpPost("V2/GetKitsAvailability")]
        public async Task<object> GetKitsAvailability()
        {
            KitsAvailabilityResult kitresult = new KitsAvailabilityResult();
            KitsAvailabilityResponse objres = new KitsAvailabilityResponse();
            KitsAvailabilityList kitlist = new KitsAvailabilityList();
            var res = await this._dataRepository.GetKitAvailability();
            if (res != null && res.Count > 0)
            {
                objres.message = "Success";
                objres.response = "Success";
                kitresult.lstKit = res;
                objres.result = kitresult;
            }
            else
            {
                objres.message = "error";
                objres.response = "Number of Kit Not Available";
            }

            return objres;
        }

        [HttpPost("V2/GetPaymentOption")]
        public async Task<object> GetPaymentOption(CardRequestModel model)
        {
            PaymentResult cardResult = new PaymentResult();
            PaymentData objcardinfo = new PaymentData();
            PaymentResponse commonResponse = new PaymentResponse();

            CommonResponse<CardData> objres = new CommonResponse<CardData>();
            try
            {

                var cardData = await this._dataRepository.GetPaymentOption(model.Fk_memId, model.Type);

                //commonResponse.result = cardData;
                if (cardData != null && cardData.Count > 0)
                {
                    if (cardData[0].Flag==1)
                    {
                        commonResponse.response = "success";
                        commonResponse.message = "";
                        cardResult.lstPaymentOption = cardData;
                        commonResponse.result = cardResult;
                        commonResponse.Flag = cardData[0].Flag;

                    }
                    else
                    {
                        commonResponse.response = "success";
                        commonResponse.message = cardData[0].Message;
                        commonResponse.AppStatus = cardData[0].AppStatus;
                        commonResponse.Title = cardData[0].Title;
                        commonResponse.Flag = cardData[0].Flag;
                    }
                    
                    
                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = "Data Not Found ";
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpPost("V2/Mobile2MobileTransfer")]
        public TransferResponse Mobile2MobileTransfer(MobileToMobileTransfer model)
        {
            TransferResponse commonResponse = new TransferResponse();
            try
            {

                var result = fintech.sendRequest(Wallet2WalletTrans, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                commonResponse = JsonConvert.DeserializeObject<TransferResponse>(responseText);
                //if(commonResponse.response == "success")
                //{
                //    model.card_id = commonResponse.result.addon_card_id;
                //    model.kit_no = commonResponse.result.kit_no;
                //    model.PaymentId = model.PaymentId;
                //    model.OrderId = model.OrderId;
                //    var msgFinal = _dataRepository.AddedOnRequest(model);
                //}


            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }

            return commonResponse;
        }
        [HttpPost("TDRFile")]
        public IRCTCModel TDRFile(string txnId, string psgnToken, string rsnIndex, string eftFlag, string eftAmount, string eftNumber, string eftDate)
        {
            //[psgnToken]/[rsnIndex] /[eftFlag] /[eftAmount] /[eftNumber] /[eftDate]
            IRCTCModel commonResponse = new IRCTCModel();
            try
            {
                var result = iRCTCService.sendRequest(tatktservices.Replace("[txnId]", txnId)
                        .Replace("[psgnToken]", psgnToken)
                        .Replace("[eftFlag]", eftFlag)
                        .Replace("[eftAmount]", eftAmount)
                        .Replace("[eftNumber]", eftNumber)
                        .Replace("[eftDate]", eftDate)
                        .Replace("[rsnIndex]", rsnIndex), "POST", null, 0
                        );

                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    JObject jo = JObject.Parse(responseText);
                    commonResponse = iRCTCService.ToApiResponse(jo);

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                commonResponse.response = "error";
                commonResponse.message = ex.Message;
            }
            return commonResponse;
        }

        [HttpPost("V2/CheckMobileForTransafer")]
        public object CheckMobileForTransafer(WalletCreationOTPRequest model)
        {

            object commonResponse = new object();

            var checkMobile = _dataRepository.CheckMobileForTransfer(model.CUSTOMERMOBILENO);
            if (checkMobile.Result.Msg == "1")
            {
                var result = fintech.sendRequest(WalletInfoV2URL, "POST", JsonConvert.SerializeObject(model), 0);
                string responseText = result.responseText;
                //  commonResponse = JsonConvert.DeserializeObject<WalletV2ResponseModel>(responseText);
                JObject jo = JObject.Parse(responseText);
                commonResponse = fintech.ToApiRequest(jo);
            }
            else
            {
                string responseText = "{\"response\":\"error\",\"message\":\"User is not registered with MobilePe\"}";
                // string responseText = "{\"response\":\"error\",\"message\":\"User is not registered with MobilePe\"}";
                JObject jo = JObject.Parse(responseText);
                commonResponse = fintech.ToApiRequest(jo);
            }



            return commonResponse;
        }

        [HttpGet("V2/IRCTCInvoice")]
        public async Task<IActionResult> IRCTCInvoice(string agentTxnId)
        {

            IRCTCModel commonResponse = new IRCTCModel();
            StringBuilder sb = new StringBuilder();
            PrintTicketResposnse printTicketResposnse = new PrintTicketResposnse();
            PrintTicketResposnse1 printTicketResposnse1 = new PrintTicketResposnse1();
            decimal TotalFare = 0;
            decimal AgentFee = 0;
            decimal GST = 0;
            decimal GST2 = 0;
            decimal PGCharge = 0;
            string QrCode = "";
            string journeyclass = "";
            string Quota = "";
            decimal agentfees;
            string destStn = "";
            string fromStn = "";

            string html = string.Empty;


            MobileAPI_V2.Model.Item item = new MobileAPI_V2.Model.Item();
            var list = new List<dynamic>();
            using (StreamReader r = new StreamReader("wwwroot/Statoincode.json"))
            {
                string json = r.ReadToEnd();
                string abc = "";
                item = JsonConvert.DeserializeObject<MobileAPI_V2.Model.Item>(json);
                for (int i = 0; i <= item.StationCode.Count - 1; i++)
                {
                    list.Add(new { Text = item.StationCode[i].Name, Value = item.StationCode[i].Name.Split("-")[1].Trim() });
                }

            }


            try
            {

                var result = iRCTCService.sendRequest(TicketBookingDetailURL
                    .Replace("[agentTxnId]", agentTxnId)
                    , "GET", null, 0
                    );
                string responseText = result.responseText;
                if (result != null && result.statuscode == 200 && !string.IsNullOrEmpty(responseText))
                {
                    try
                    {

                        printTicketResposnse = JsonConvert.DeserializeObject<PrintTicketResposnse>(responseText);

                        if (!string.IsNullOrEmpty(html))
                        {
                            //var s = html.Split("=")[1].Replace("[", "").Replace("]", "").Replace("\"", "").Split(",");
                            //var list = new List<dynamic>();
                            foreach (var v in list)
                            {
                                if (printTicketResposnse.fromStn == v.Split("-")[1].Trim())
                                {
                                    fromStn = v;
                                }
                                if (printTicketResposnse.destStn == v.Split("-")[1].Trim())
                                {
                                    destStn = v;
                                }
                                //list.Add(new { Text = v, Value = v.Split("-")[1] });
                            }

                        }

                        string journeyDate = printTicketResposnse.journeyDate.ToString("dd-MMM-yyyy");
                        string destArrvDate = printTicketResposnse.destArrvDate.ToString("dd-MMM-yyyy");
                        AgentFee = decimal.Parse(printTicketResposnse.wpServiceCharge) + decimal.Parse(printTicketResposnse.wpServiceTax);
                        GST = (decimal.Parse(printTicketResposnse.totalFare) * decimal.Parse(printTicketResposnse.gstCharge.irctcCgstCharge)) / 100;
                        GST2 = GST + GST;


                        if (printTicketResposnse.journeyClass != "SL" || printTicketResposnse.journeyClass != "2S")
                        {
                            agentfees = 40;
                        }
                        else
                        {
                            agentfees = 20;
                        }
                        if (printTicketResposnse.journeyClass == "2A")
                        {
                            journeyclass = "Second AC";
                        }
                        else if (printTicketResposnse.journeyClass == "3A")
                        {
                            journeyclass = "Third AC";
                        }
                        else if (printTicketResposnse.journeyClass == "1A")
                        {
                            journeyclass = "First AC";
                        }
                        else if (printTicketResposnse.journeyClass == "SL")
                        {
                            journeyclass = "Sleeper";
                        }
                        else
                        {
                            journeyclass = "";
                        }
                        if (printTicketResposnse.journeyQuota == "SS")
                        {
                            Quota = "Senior Citizen";
                        }
                        else if (printTicketResposnse.journeyQuota == "PH")
                        {
                            Quota = "Perliament house";
                        }
                        else if (printTicketResposnse.journeyQuota == "DP")
                        {
                            Quota = "Duty Pass";
                        }
                        else if (printTicketResposnse.journeyQuota == "GN")
                        {
                            Quota = "General";
                        }
                        else if (printTicketResposnse.journeyQuota == "HP")
                        {
                            Quota = "Physically Handicapped";
                        }
                        else if (printTicketResposnse.journeyQuota == "LD")
                        {
                            Quota = "Ladies";
                        }
                        else if (printTicketResposnse.journeyQuota == "TQ")
                        {
                            Quota = "Tatkal";
                        }

                        else
                        {
                            Quota = "";
                        }
                        TotalFare = decimal.Parse(printTicketResposnse.totalCollectibleAmount) + (agentfees);
                        string Perc = "1.5";
                        decimal PGperc = (TotalFare * decimal.Parse(Perc)) / 100;
                        PGCharge = (PGperc) + ((PGperc * 18) / 100);

                        string code = "PNR No:" + printTicketResposnse.pnrNumber + "@" + "TXN ID:" + printTicketResposnse.reservationId + "@Passenger Name:" + printTicketResposnse.psgnDtlList.passengerName + "@Gender:" + printTicketResposnse.psgnDtlList.passengerGender + "@Age:" + printTicketResposnse.psgnDtlList.passengerAge + "@Status:" + printTicketResposnse.psgnDtlList.currentStatus + "@Quota:" + Quota + " (" + printTicketResposnse.journeyQuota + ")@Train No:" + printTicketResposnse.trainNumber + "@Train Name:" + printTicketResposnse.trainName + "@Scheduled Departure:" + printTicketResposnse.departureTime + " " + journeyDate + "@From:" + fromStn + "@To:" + destStn + "@Date Of Journey:" + journeyDate + "@Class:" + journeyclass + " (" + printTicketResposnse.journeyClass + ")@Ticket Fare: Rs" + TotalFare + "@IRCTC C Fee: Rs" + AgentFee + " +PG Charges Extra";
                        code = code.Replace("@", "" + System.Environment.NewLine);
                        
                        QRCodeGenerator ObjQr = new QRCodeGenerator();
                        QRCodeData qrCodeData = ObjQr.CreateQrCode(WebUtility.HtmlEncode(code), QRCodeGenerator.ECCLevel.Q);
                        
                        Bitmap bitMap = new QRCode(qrCodeData).GetGraphic(20);
                        using (MemoryStream ms1 = new MemoryStream())
                        {
                            bitMap.Save(ms1, System.Drawing.Imaging.ImageFormat.Png);
                            byte[] byteImage = ms1.ToArray();
                            QrCode = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                        }

                        sb.Append("<html lang='en'>");
                        sb.Append("<head>");
                        sb.Append("<meta charset='UTF-8'>");
                        sb.Append("<meta http-equiv='X-UA-Compatible' content='IE=edge'>");
                        sb.Append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>");
                        sb.Append("<title>Document</title>");
                        sb.Append("</head>");
                        sb.Append("<body>");
                        sb.Append("<table style='width:750px;margin:0px auto;font-size: 12px;font-family: Arial, Helvetica, sans-serif;border: 2px solid rgb(26, 26, 26);padding: 10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%;margin-top:10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='text-align: center;padding-bottom: 5px;font-weight: 600;font-size: 15px;'><u>Electronic Reservation Slip (ERS)</u></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%;margin-top:10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='text-align:center;padding-bottom: 5px;'><img src='https://newapiv2.mobilepe.co.in/img/indian-railway.png' width='100' alt=''></td>");
                        sb.Append("<td style='text-align:center;padding-bottom: 5px;'><img src='https://mobilepe.co.in/assets/img/logo.png' width='100' alt=''></td>");
                        sb.Append("<td style='text-align:center;padding-bottom: 5px;'><img src='https://newapiv2.mobilepe.co.in/img/IRCTC-logo.png' width='100' alt=''></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%;margin-top:10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='padding-bottom: 5px;font-weight: 700;font-size: 16px;width: 33.33%;'><p style='text-align: center;padding-bottom: 10px;margin: 0;font-weight: 900;'>Boarding From</p><p style='text-align: center;padding-bottom: 3px;margin: 0;'>" + fromStn + "</p><p style='padding: 0;margin: 0;text-align: center;'>Departure* " + printTicketResposnse.departureTime + " " + journeyDate + "</p></td>");
                        sb.Append("<td style='text-align: center;padding-bottom: 5px;width: 33.33%;'><img src='https://uatapiv2.mobilepe.co.in/img/arrow.png' width='180' alt=''></td>");
                        sb.Append("<td style='text-align: center;padding-bottom: 5px;font-weight: 600;font-size: 16px;width: 33.33%;'><p style='padding-bottom: 10px;margin: 0;font-weight: 900;'>To</p><p style='text-align: center;padding-bottom: 3px;margin: 0;font-weight: 900;'>" + destStn + "</p><p style='padding: 0;margin: 0;text-align: center;font-weight: 900'>Arrival* " + printTicketResposnse.arrivalTime + " " + destArrvDate + " </p> </td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr style='margin: 0;'>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr style='text-align: center;'>");
                        sb.Append("<td style='width: 33.33%;'>");
                        sb.Append("<p style='font-weight: 700;padding-bottom: 5px;margin:0;'>PNR: </p><p style='font-size: 15px;font-weight: 400;color: blue;padding-bottom: 5px;margin: 0;'>" + printTicketResposnse.pnrNumber + "</p>");
                        sb.Append("<p style='padding-bottom: 5px;margin:0px;font-weight: 700;'>Quota</p><p style='padding-bottom: 5px;margin: 0;'>" + Quota + " (" + printTicketResposnse.journeyQuota + ")</p>");
                        sb.Append("</td>");
                        sb.Append("<td style='width: 33.33%;'>");
                        sb.Append("<p style='text-align: center;font-weight: 700;margin:0px;padding-bottom: 8px;'> Train No./Name </p><p style='font-size: 15px;color: blue;padding-bottom: 5px;margin: 0;'>" + printTicketResposnse.trainNumber + " / " + printTicketResposnse.trainName + "</p>");
                        sb.Append("<p style='padding-bottom: 5px;margin: 0;text-align: center;font-weight: 700;'>Distance </p><p style='padding-bottom: 5px;margin: 0;text-align: center;'>" + printTicketResposnse.distance + " KM</p>");
                        sb.Append("</td>");
                        sb.Append("<td style='width: 33.33%;'><p style='text-align:center;font-weight: 700;margin:0px;padding-bottom: 5px;'>Class </p><p style='font-size: 15px;color: blue;text-align:center;margin:0px;padding-bottom: 8px;'>" + journeyclass + " ( " + printTicketResposnse.journeyClass + " )</p><p style='text-align: center;font-weight: 700;padding-bottom: 5px;margin: 0;'>Ticket Printing Time</p><p style='padding: 0;margin: 0;font-weight: 400;'>" + DateTime.Now.ToString("dd-MMM-yyyy hh:MM:ss") + "</p></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<h4 style='margin:0;padding:0;font-weight: 700;'><u>Passenger Details:</u></h4>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;margin-top: 5px;'>");
                        sb.Append("<thead>");
                        sb.Append("<tr>");
                        sb.Append("<th>#</th>");
                        sb.Append("<th>Name</th>");
                        sb.Append("<th>Age</th>");
                        sb.Append("<th>Gender</th>");
                        sb.Append("<th>Booking Status</th>");
                        sb.Append("<th>Current Status</th>");
                        sb.Append("</tr>");
                        sb.Append("</thead>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>1</td>");
                        sb.Append("<td style='text-align:center;'>" + printTicketResposnse.psgnDtlList.passengerName + "  </td>");
                        sb.Append("<td style='text-align:center;'>" + printTicketResposnse.psgnDtlList.passengerAge + "</td>");
                        sb.Append("<td style='text-align:center;'>" + printTicketResposnse.psgnDtlList.passengerGender + "</td>");
                        sb.Append("<td style='text-align:center;'> " + printTicketResposnse.psgnDtlList.bookingStatus + "</td>");
                        sb.Append("<td style='text-align:center;'>" + printTicketResposnse.psgnDtlList.currentStatus + "</td>");
                        sb.Append("</tr>");

                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;margin-top: 10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'>Acronyms: </td>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'>RLWL: REMOTE LOCATION WAITLIST </td>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'>PQWL: POOLED QUOTA WAITLIST</td>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'> RSWL: ROAD-SIDE WAITLIST</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<p style='font-weight: 900;'>Transaction ID: " + printTicketResposnse.reservationId + "</p>");
                        sb.Append("<p>IR recovers only 57% of cost of travel on an average.</p>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='width: 90%;margin: 0;vertical-align: top;'>");
                        sb.Append("<h4 style='font-weight: 700;margin-bottom: 5px;'><u>Payment Details :</u></h4>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>Ticket Fare:</td>");
                        sb.Append("<td>₹ " + printTicketResposnse.totalFare + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>IRCTC Convenience Fee:</td>");
                        sb.Append("<td>₹ " + AgentFee + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Agent Service Charge: </td>");
                        sb.Append("<td>₹ " + agentfees + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Travel Insurance Premium:</td>");
                        sb.Append("<td>₹ " + printTicketResposnse.insuranceCharge + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>PG Charges :</td>");
                        sb.Append("<td>₹ " + PGCharge + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='font-weight: bold;'>Total Fare (all inclusive)</td>");
                        sb.Append("<td>₹ " + TotalFare + "</td>");
                        sb.Append("</tr>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<p>PG Charges as applicable (Additional)</p>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("<td style='width: 10%;'>");
                        sb.Append("<table>");
                        sb.Append("<tbody style='width: 100%;'>");
                        sb.Append("<tr>");
                        sb.Append("<td><img width='200' src=" + QrCode + " alt=''></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");


                        sb.Append("<tr><td><hr><table><tbody>");
                        sb.Append("<tr><td><p>PG Charges as applicable (Additional)</p></td></tr>");
                        sb.Append("<tr><td><h4 style='font - weight: bold; margin: 0; padding: 0; '>IRCTC Convenience Fee is charged per e-ticket irrespective of number of passengers on the ticket.</h4>");
                        sb.Append("<h4 style='font - weight: bold; margin - top:10px; padding: 0; '>* The printed Departure and Arrival Times are liable to change. Please Check correct departure, arrival from Railway Station Enquiry or Dial 139 or SMS RAIL to 139.");
                        sb.Append("</h4></td></tr></tbody></table><hr style='margin: 0; '></td></tr>");
                        sb.Append("<tr><td><table><tbody><tr><td><h4 style='margin: 0; padding: 0px; '><u>Agent Details:</u></h4>");
                        sb.Append("<p style='margin: 0; padding: 2px; '>Principal Agent Name: MobilePe </p><table style='width: 100 %; border - collapse: collapse; margin - top: 5px; '><tbody>");
                        sb.Append("<tr><td>Customer care Email: <span>support@mobilepe.co.in</span></td><td>Customer Care Contact: <span>0514-2568-00</span></td></tr></tbody></table>");
                        sb.Append("<hr><h4>* Prescribed original ID proof is required while travelling along with SMS/ VRM/ ERS otherwise will be treated as without ticket and penalized as per Railway Rules.");
                        sb.Append("</h4></td></tr></tbody></table></td></tr>");




                        sb.Append("<tr>");
                        sb.Append("<td>");
                        //sb.Append("<table>");
                        //sb.Append("<tbody>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<h4 style='font-weight: bold;margin:0;padding: 0;'>IRCTC Convenience Fee is charged per e-ticket irrespective of number of passengers on the ticket.</h4>");
                        //sb.Append("<h4 style='font-weight: bold;margin-top:10px;padding: 0;'>* The printed Departure and Arrival Times are liable to change. Please Check correct departure, arrival from Railway Station Enquiry orDial 139 or SMS RAIL to 139.</h4>");
                        //sb.Append("<h4>No Linen will be provided in AC Economy (3E) class.</h4>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        //sb.Append("</tbody>");
                        //sb.Append("</table>");
                        sb.Append("<hr style='margin: 0;'>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<table>");
                        //sb.Append("<tbody>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<p>");
                        //sb.Append("<li>This ticket is booked on a personal User ID, its sale/purchase is an offence u/s 143 of the Railways Act,1989.</li>");
                        //sb.Append("<li>Prescribed original ID proof is required while travelling along with SMS/ VRM/ ERS otherwise will be treated as without ticket and penalized as per Railway Rules.</li>");
                        //sb.Append("</p>");
                        //sb.Append("</td>");
                        //sb.Append("<tr>");
                        //sb.Append("<td> <img width='700' src='https://uatapiv2.mobilepe.co.in/img/img.png' alt=''></td>");
                        //sb.Append("</tr>");
                        //sb.Append("</tbody>");
                        //sb.Append("</table>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td><h4 style='margin:0;padding: 0px;'> Indian Railways GST Details:</h4></td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='width: 25%;'>Invoice Number:</td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse.gstCharge.invoiceNumber + "</td>");
                        sb.Append("<td style='width: 25%;'>Address: </td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse.gstCharge.suplierAddress + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td><h4 style='margin:0px;padding: 0px;'> Supplier Information:</h4></td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='width: 25%;'>SAC Code: </td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse.gstCharge.sacCode + "</td>");
                        sb.Append("<td style='width: 25%;'>GSTIN: </td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse.gstCharge.gstinSuplier + "</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<p style='page-break-before: always;'></p>");
                        sb.Append("<br/>");
                        sb.Append("<br/>");
                        sb.Append("<table style='width:750px;margin:0px auto;font-size: 12px;font-family: Arial, Helvetica, sans-serif;border: 2px solid rgb(26, 26, 26);padding: 10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>");

                        sb.Append("<h4><u>Recipient Information:</u></h4>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;margin-top: 5px;'>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 50%;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>GSTIN:</td>");
                        sb.Append("<td>N/A</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Name:</td>");
                        sb.Append("<td>N/A</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Taxable Value: </td>");
                        sb.Append("<td>" + printTicketResposnse.gstCharge.taxableAmt + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>CGST Rate:</td>");
                        sb.Append("<td>" + printTicketResposnse.gstCharge.cgstRate + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>SGST/UGST Rate:</td>");
                        sb.Append("<td>" + printTicketResposnse.gstCharge.sgstRate + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>IGST Rate:</td>");
                        sb.Append("<td>" + printTicketResposnse.gstCharge.igstRate + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='font-weight: bold;'>Total Tax:</td>");
                        sb.Append("<td>" + printTicketResposnse.totalCollectibleAmount + "</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 50%;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>Address: </td>");
                        sb.Append("<td></td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>CGST Amount:</td>");
                        //sb.Append("<td>" + GST + "</td>");
                        sb.Append("<td>0</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>SGST/UGST Amount:</td>");
                        //sb.Append("<td>" + GST + "</td>");
                        sb.Append("<td>0</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>IGST Amount:</td>");
                        //sb.Append("<td>" + GST2 + "</td>");
                        sb.Append("<td>0</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='font-weight: bold;'>Place of Supply:</td>");
                        sb.Append("<td><b>State Name/Code of Supplier:</b> " + printTicketResposnse.gstCharge.prsSuplierState + " / " + printTicketResposnse.gstCharge.prsSuplierStateCode + "</td>");

                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<h4><u>INSTRUCTIONS:</u></h4>");
                        //sb.Append("<p style='font-size: x-small;'>1. Prescribed Original ID proofs are:- Voter Identity Card / Passport / PAN Card / Driving License / Photo ID card issued by Central / State Govt./ Public Sector Undertakings of State / Central Government ,District Administrations , Municipal bodies and Panchayat Administrations which are having serial number / Student Identity Card with photograph issued by recognized School or College for their students / Nationalized Bank Passbook with photograph /Credit Cards issued by Banks with laminated photograph/Unique Identification Card 'Aadhaar', m-Aadhaar, e-Aadhaar. /Passenger showing the Aadhaar/Driving Licence from the 'Issued Document' section by logging into his/her DigiLocker account considered as valid proof of identity. (Documents uploaded by the user i.e. the document in 'Uploaded Document' section will not be considered as a valid proof of identity).</p>");
                        //sb.Append("<p style='font-size: x-small;'>2. PNRs having fully waitlisted status will be dropped and automatic refund of the booking amount shall be credited to the account used for payment for booking of the ticket. Fully waitlisted e-ticket are not allowed to board the train. However, the names of PARTIALLY waitlisted/confirmed and RAC ticket passenger will appear in the chart and will be allowed to board the train.</p>");
                        //sb.Append("<p style='font-size: x-small;'>3. Passengers travelling on a fully waitlisted e-ticket will be treated as Ticketless</p>");
                        //sb.Append("<p style='font-size:x-small;'>4. Obtain certificate from the TTE /Conductor in case of (a) PARTIALLY waitlisted e-ticket when LESS NO. OF PASSENGERS travel, (b)A.C FAILURE, (c)TRAVEL IN LOWER CLASS. This original certificate must be sent to GGM (IT), IRCTC, Internet Ticketing Centre, IRCA Building, State Entry Road, New Delhi-110055 after filing TDR online within prescribed time for claiming refund.</p>");
                        //sb.Append("<p style='font-size:x-small;'>5. In case, on a party e-ticket or a family e-ticket issued for travel of more than one passenger, some passengers have confirmed reservation and others are on RAC or waiting list, full refund of fare, less clerkage, shall be admissible for confirmed passengers also subject to the condition that the ticket shall be cancelled online or online TDR shall be filed for all the passengers upto thirty minutes before the scheduled departure of the train.</p>");
                        //sb.Append("<p style='font-size:x-small;'>6. In case of train cancellation on its entire run, full refund is granted automatically by the system. However, if the train is cancelled partially on its run or diverted and not touching boarding/destination station, passengers are required to file online TDR within 72 hours of scheduled departure of the train from passengers boarding station.</p>");
                        //sb.Append("<p style='font-size:x-small;'>7. Never purchase e-ticket from unauthorized agents or persons using their personal IDs for commercial purposes. Such tickets are liable to be cancelled and forfeited without any refund of money, under section (143) of the Indian Railway Act 1989. List of authorized agents are available on www.irctc.com E-Ticket Agent Locator</p>");
                        //sb.Append("<p style='font-size:x-small;'>8. For detail, Rules, Refund rules, Terms & Conditions of E-Ticketing services, Travel Insurance facility etc. Please visit <a href='#'>www.irctc.co.in</a></p>");
                        //sb.Append("<p style='font-size:x-small;'>9. While booking this ticket, you have agreed of having read the Health Protocol of Destination State of your travel. You are again advised to clearly read the Health Protocol advisory of destination state before start of your travel and follow them properly.</p>");
                        //sb.Append("<p style='font-size:x-small;'>10. The FIR forms are available with on board ticket checking staff, train guard and train escorting RPF/GRP staff.</p>");
                        //sb.Append("<p style='font-size:x-small;'>11. Variety of meals available in more than 1500 trains. For delivery of meal of your choice on your seat log on to www.ecatering.irctc.co.in or call 1323 Toll Free. For any suggestions/complaints related to Catering services, contact Toll Free No. 1800-111-321 (07.00 hrs to 22.00 hrs).</p>");
                        //sb.Append("<p style='font-size:x-small;'>12. National Consumer Helpline (NCH) Toll Free Number: 1800-11-400 or 14404</p>");
                        //sb.Append("<p style='font-size:x-small;'>13. You can book unreserved ticket from UTS APP or ATVMs (Automatic Ticket Vending Machines) located in Railway Stations.</p>");
                        //sb.Append("<p style='font-size:x-small;text-align: center;font-weight: 700;'>Contact us on: - care@irctc.co.in OR 24*7 Hrs Customer Support at 14646 OR 0755-6610661, 0755-4090600</p>");
                        //sb.Append("</td>");



                        sb.Append("<td>");
                        sb.Append("<h4><u>INSTRUCTIONS:</u></h4>");
                        sb.Append("<p style='font-size: x-small;'>");
                        sb.Append("1. Prescribed Original ID proofs are:- Voter Identity Card / Passport / PAN Card / Driving License / Photo ID card issued by Central / State");
                        sb.Append("Govt./ Public Sector Undertakings of State / Central Government ,District Administrations , Municipal bodies and Panchayat Administrations");
                        sb.Append("which are having serial number / Student Identity Card with photograph issued by recognized School or College for their students / Nationalized");
                        sb.Append("Bank Passbook with photograph /Credit Cards issued by Banks with laminated photograph/Unique Identification Card 'Aadhaar', m-Aadhaar, e-Aadhaar. /Passenger showing the Aadhaar/Driving Licence from the 'Issued Document' section by logging into his/her DigiLocker account");
                        sb.Append("considered as valid proof of identity. (Documents uploaded by the user i.e. the document in 'Uploaded Document' section will not be");
                        sb.Append("considered as a valid proof of identity).");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size: x-small;'>");
                        sb.Append("2. PNRs having fully waitlisted status will be dropped and automatic refund of the booking amount shall be credited to the account used for");
                        sb.Append("payment for booking of the ticket. Fully waitlisted e-ticket are not allowed to board the train. However, the names of PARTIALLY");
                        sb.Append("waitlisted/confirmed and RAC ticket passenger will appear in the chart and will be allowed to board the train.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size: x-small;'>3. Passengers travelling on a fully waitlisted e-ticket will be treated as Ticketless</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("4. Obtain certificate from the TTE /Conductor in case of (a) PARTIALLY waitlisted e-ticket when LESS NO. OF PASSENGERS travel, (b)A.C FAILURE,");
                        sb.Append("(c)TRAVEL IN LOWER CLASS. This original certificate must be sent to GGM (IT), IRCTC, Internet Ticketing Centre, IRCA Building, State Entry");
                        sb.Append("Road, New Delhi-110055 after filing TDR online within prescribed time for claiming refund.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("5. In case, on a party e-ticket or a family e-ticket issued for travel of more than one passenger, some passengers have confirmed reservation");
                        sb.Append("and others are on RAC or waiting list, full refund of fare, less clerkage, shall be admissible for confirmed passengers also subject to the");
                        sb.Append("condition that the ticket shall be cancelled online or online TDR shall be filed for all the passengers upto thirty minutes before the scheduled");
                        sb.Append("departure of the train.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("6. In case of train cancellation on its entire run, full refund is granted automatically by the system. However, if the train is cancelled partially");
                        sb.Append("on its run or diverted and not touching boarding/destination station, passengers are required to file online TDR within 72 hours of scheduled");
                        sb.Append("departure of the train from passengers boarding station.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("7. Never purchase e-ticket from unauthorized agents or persons using their personal IDs for commercial purposes. Such tickets are liable to");
                        sb.Append("be cancelled and forfeited without any refund of money, under section (143) of the Indian Railway Act 1989. List of authorized agents");
                        sb.Append("are available on www.irctc.com E-Ticket Agent Locator");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>8. For detail, Rules, Refund rules, Terms & Conditions of E-Ticketing services, Travel Insurance facility etc. Please visit <a href='#'>www.irctc.co.in</a></p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("9. While booking this ticket, you have agreed of having read the Health Protocol of Destination State of your travel. You are again advised to");
                        sb.Append("clearly read the Health Protocol advisory of destination state before start of your travel and follow them properly.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>10. The FIR forms are available with on board ticket checking staff, train guard and train escorting RPF/GRP staff.</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("11. Variety of meals available in more than 1500 trains. For delivery of meal of your choice on your seat log on to www.ecatering.irctc.co.in or");
                        sb.Append("call 1323 Toll Free. For any suggestions/complaints related to Catering services, contact Toll Free No. 1800-111-321 (07.00 hrs to 22.00 hrs).");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>12. E-ticket cancellations are permitted through respective agent only. </p>");
                        sb.Append("<p style='font-size:x-small;'>13. Agent Service Charge for E-Ticket inclusive of tax <br> (non-refundable) Class &nbsp;&nbsp;&nbsp; Service Charge </p>");
                        sb.Append("<p style='font-size:x-small;'>Non-AC class &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rs.20/-</p>");
                        sb.Append("<p style='font-size:x-small;'>AC class including FC &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rs.40/-</p>");
                        sb.Append("<p style='font-size:x-small;'>14. National Consumer Helpline (NCH) Toll Free Number: 1800-11-400 or 14404</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("15. You can book unreserved ticket from UTS APP or ATVMs (Automatic Ticket Vending Machines) located in Railway Stations.");
                        sb.Append("Contact us on: - <a href=''>care@irctc.co.in</a> OR 24*7 Hrs Customer Support at 0755-6610661, 0755-4090600");
                        sb.Append("</p>");
                        sb.Append("</td>");


                        sb.Append("</tr>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<img width='700' src='https://uatapiv2.mobilepe.co.in/img/img.png' alt=''>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</body>");
                        sb.Append("</html>");

                    }
                    catch
                    {
                        int j = 1;
                        printTicketResposnse1 = JsonConvert.DeserializeObject<PrintTicketResposnse1>(responseText);
                        string journeyDate = printTicketResposnse.journeyDate.ToString("dd-MMM-yyyy");
                        string destArrvDate = printTicketResposnse.destArrvDate.ToString("dd-MMM-yyyy");
                        AgentFee = decimal.Parse(printTicketResposnse1.wpServiceCharge) + decimal.Parse(printTicketResposnse1.wpServiceTax);
                        GST = (decimal.Parse(printTicketResposnse1.totalFare) * decimal.Parse(printTicketResposnse1.gstCharge.irctcCgstCharge)) / 100;
                        GST2 = GST + GST;
                        if (printTicketResposnse1.journeyClass != "SL" || printTicketResposnse1.journeyClass != "2S")
                        {
                            agentfees = 40;
                        }
                        else
                        {
                            agentfees = 20;
                        }
                        if (printTicketResposnse1.journeyClass == "2A")
                        {
                            journeyclass = "Second AC";
                        }
                        else if (printTicketResposnse1.journeyClass == "3A")
                        {
                            journeyclass = "Third AC";
                        }
                        else if (printTicketResposnse1.journeyClass == "1A")
                        {
                            journeyclass = "First AC";
                        }
                        else if (printTicketResposnse1.journeyClass == "SL")
                        {
                            journeyclass = "Sleeper";
                        }
                        else
                        {
                            journeyclass = "";
                        }
                        if (printTicketResposnse1.journeyQuota == "SS")
                        {
                            Quota = "Senior Citizen";
                        }
                        else if (printTicketResposnse1.journeyQuota == "PH")
                        {
                            Quota = "Perliament house";
                        }
                        else if (printTicketResposnse1.journeyQuota == "DP")
                        {
                            Quota = "Duty Pass";
                        }
                        else if (printTicketResposnse1.journeyQuota == "GN")
                        {
                            Quota = "General";
                        }
                        else if (printTicketResposnse1.journeyQuota == "HP")
                        {
                            Quota = "Physically Handicapped";
                        }
                        else if (printTicketResposnse1.journeyQuota == "LD")
                        {
                            Quota = "Ladies";
                        }
                        else if (printTicketResposnse1.journeyQuota == "TQ")
                        {
                            Quota = "Tatkal";
                        }

                        else
                        {
                            Quota = "";
                        }
                        if (!string.IsNullOrEmpty(html))
                        {
                            foreach (var v in list)
                            {
                                if (printTicketResposnse.fromStn == v.Split("-")[1].Trim())
                                {
                                    fromStn = v;
                                }
                                if (printTicketResposnse.destStn == v.Split("-")[1].Trim())
                                {
                                    destStn = v;
                                }
                                //list.Add(new { Text = v, Value = v.Split("-")[1] });
                            }

                        }
                        TotalFare = decimal.Parse(printTicketResposnse1.totalCollectibleAmount) + (agentfees);
                        string passengerdata = "";
                        for (int k = 0; k <= printTicketResposnse1.psgnDtlList.Count - 1; k++)
                        {
                            passengerdata += " @Passenger Name:" + printTicketResposnse1.psgnDtlList[k].passengerName + "@Gender:" + printTicketResposnse1.psgnDtlList[k].passengerGender + "@Age:" + printTicketResposnse1.psgnDtlList[k].passengerAge + "@Status" + printTicketResposnse1.psgnDtlList[k].currentStatus;
                        }
                        string code = "PNR No:" + printTicketResposnse1.pnrNumber + "@" + "TXN ID:" + printTicketResposnse1.reservationId + "@:" + passengerdata + "@Quota:" + Quota + " (" + printTicketResposnse1.journeyQuota + ")@Train No:" + printTicketResposnse1.trainNumber + "@Train Name:" + printTicketResposnse1.trainName + "@Scheduled Departure:" + printTicketResposnse1.departureTime + " " + journeyDate + "@From:" + fromStn + "@To:" + destStn + "@Date Of Journey:" + journeyDate + "@Class:" + journeyclass + " (" + printTicketResposnse1.journeyClass + ")@Ticket Fare: Rs" + TotalFare + "@IRCTC C Fee: Rs" + AgentFee + " +PG Charges Extra";
                        code = code.Replace("@", "" + System.Environment.NewLine);
                        string Perc = "1.5";
                        decimal PGperc = (TotalFare * decimal.Parse(Perc)) / 100;
                        PGCharge = (PGperc) + ((PGperc * 18) / 100);
                        QRCodeGenerator ObjQr = new QRCodeGenerator();
                        QRCodeData qrCodeData = ObjQr.CreateQrCode(WebUtility.HtmlEncode(code), QRCodeGenerator.ECCLevel.Q);
                        
                        Bitmap bitMap = new QRCode(qrCodeData).GetGraphic(20); 
                        using (MemoryStream ms1 = new MemoryStream())
                        {
                            bitMap.Save(ms1, System.Drawing.Imaging.ImageFormat.Png);
                            byte[] byteImage = ms1.ToArray();
                            QrCode = "data:image/png;base64," + Convert.ToBase64String(byteImage);
                        }

                        sb.Append("<html lang='en'>");
                        sb.Append("<head>");
                        sb.Append("<meta charset='UTF-8'>");
                        sb.Append("<meta http-equiv='X-UA-Compatible' content='IE=edge'>");
                        sb.Append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>");
                        sb.Append("<title>Document</title>");
                        sb.Append("</head>");
                        sb.Append("<body>");
                        sb.Append("<table style='width:750px;margin:0px auto;font-size: 12px;font-family: Arial, Helvetica, sans-serif;border: 2px solid rgb(26, 26, 26);padding: 10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%;margin-top:10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='text-align: center;padding-bottom: 5px;font-weight: 600;font-size: 15px;'><u>Electronic Reservation Slip (ERS)</u></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%;margin-top:10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='text-align:center;padding-bottom: 5px;'><img src='https://uatapiv2.mobilepe.co.in/img/indian-railway.png' width='100' alt=''></td>");
                        sb.Append("<td style='text-align:center;padding-bottom: 5px;'><img src='https://mobilepe.co.in/assets/img/logo.png' width='100' alt=''></td>");
                        sb.Append("<td style='text-align:center;padding-bottom: 5px;'><img src='https://uatapiv2.mobilepe.co.in/img/IRCTC-logo.png' width='100' alt=''></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%;margin-top:10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='padding-bottom: 5px;font-weight: 700;font-size: 16px;width: 33.33%;'><p style='text-align: center;padding-bottom: 10px;margin: 0;font-weight: 900;'>Boarding From</p><p style='text-align: center;padding-bottom: 3px;margin: 0;'>" + fromStn + "</p><p style='padding: 0;margin: 0;text-align: center;'>Departure* " + printTicketResposnse1.departureTime + " " + journeyDate + "</p></td>");
                        sb.Append("<td style='text-align: center;padding-bottom: 5px;width: 33.33%;'><img src='https://uatapiv2.mobilepe.co.in/img/arrow.png' width='180' alt=''></td>");
                        sb.Append("<td style='text-align: center;padding-bottom: 5px;font-weight: 600;font-size: 16px;width: 33.33%;'><p style='padding-bottom: 10px;margin: 0;font-weight: 900;'>To</p><p style='text-align: center;padding-bottom: 3px;margin: 0;font-weight: 900;'>" + destStn + "</p><p style='padding: 0;margin: 0;text-align: center;font-weight: 900;'>Arrival* " + printTicketResposnse1.arrivalTime + " " + destArrvDate + " </p> </td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr style='margin: 0;'>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr style='text-align: center;'>");
                        sb.Append("<td style='width: 33.33%;'>");
                        sb.Append("<p style='font-weight: 700;padding-bottom: 5px;margin:0;'>PNR: </p><p style='font-size: 15px;font-weight: 400;color: blue;padding-bottom: 5px;margin: 0;'>" + printTicketResposnse1.pnrNumber + "</p>");
                        sb.Append("<p style='padding-bottom: 5px;margin:0px;font-weight: 700;'>Quota</p><p style='padding-bottom: 5px;margin: 0;'>" + Quota + " (" + printTicketResposnse1.journeyQuota + ")</p>");
                        sb.Append("</td>");
                        sb.Append("<td style='width: 33.33%;'>");
                        sb.Append("<p style='text-align: center;font-weight: 700;margin:0px;padding-bottom: 8px;'> Train No./Name </p><p style='font-size: 15px;color: blue;padding-bottom: 5px;margin: 0;'>" + printTicketResposnse1.trainNumber + " / " + printTicketResposnse1.trainName + "</p>");
                        sb.Append("<p style='padding-bottom: 5px;margin: 0;text-align: center;font-weight: 700;'>Distance </p><p style='padding-bottom: 5px;margin: 0;text-align: center;'>" + printTicketResposnse1.distance + " KM</p>");
                        sb.Append("</td>");
                        sb.Append("<td style='width: 33.33%;'><p style='text-align:center;font-weight: 700;margin:0px;padding-bottom: 5px;'>Class </p><p style='font-size: 15px;color: blue;text-align:center;margin:0px;padding-bottom: 8px;'>" + journeyclass + " (" + printTicketResposnse1.journeyClass + " )</p><p style='text-align: center;font-weight: 700;padding-bottom: 5px;margin: 0;'>Ticket Printing Time</p><p style='padding: 0;margin: 0;font-weight: 400;'>" + DateTime.Now.ToString("dd-MMM-yyyy hh:MM:ss") + "</p></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<h4 style='margin:0;padding:0;font-weight: 700;'><u>Passenger Details:</u></h4>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;margin-top: 5px;'>");
                        sb.Append("<thead>");
                        sb.Append("<tr>");
                        sb.Append("<th>#</th>");
                        sb.Append("<th>Name</th>");
                        sb.Append("<th>Age</th>");
                        sb.Append("<th>Gender</th>");
                        sb.Append("<th>Booking Status</th>");
                        sb.Append("<th>Current Status</th>");
                        sb.Append("</tr>");
                        sb.Append("</thead>");
                        sb.Append("<tbody>");

                        for (int i = 0; i <= printTicketResposnse1.psgnDtlList.Count - 1; i++)
                        {

                            sb.Append("<tr>");
                            sb.Append("<td>" + j + "</td>");
                            sb.Append("<td style='text-align:center;'>" + printTicketResposnse1.psgnDtlList[i].passengerName + "  </td>");
                            sb.Append("<td style='text-align:center;'>" + printTicketResposnse1.psgnDtlList[i].passengerAge + "</td>");
                            sb.Append("<td style='text-align:center;'>" + printTicketResposnse1.psgnDtlList[i].passengerGender + "</td>");
                            sb.Append("<td style='text-align:center;'> " + printTicketResposnse1.psgnDtlList[i].bookingStatus + "</td>");
                            sb.Append("<td style='text-align:center;'>" + printTicketResposnse1.psgnDtlList[i].currentStatus + "</td>");
                            sb.Append("</tr>");
                            j++;
                        }


                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;margin-top: 10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'>Acronyms: </td>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'>RLWL: REMOTE LOCATION WAITLIST </td>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'>PQWL: POOLED QUOTA WAITLIST</td>");
                        sb.Append("<td style='text-align:center;font-size: x-small;'> RSWL: ROAD-SIDE WAITLIST</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<p style='font-weight: 900;'>Transaction ID: " + printTicketResposnse1.reservationId + "</p>");
                        sb.Append("<p>IR recovers only 57% of cost of travel on an average.</p>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='width: 90%;margin: 0;vertical-align: top;'>");
                        sb.Append("<h4 style='font-weight: 700;margin-bottom: 5px;'><u>Payment Details :</u></h4>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>Ticket Fare:</td>");
                        sb.Append("<td>₹ " + printTicketResposnse1.totalFare + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>IRCTC Convenience Fee:</td>");
                        sb.Append("<td>₹ " + AgentFee + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Agent Service Charge: </td>");
                        sb.Append("<td>₹ " + agentfees + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Travel Insurance Premium:</td>");
                        sb.Append("<td>₹ " + printTicketResposnse1.insuranceCharge + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>PG Charges :</td>");
                        sb.Append("<td>₹ " + PGCharge + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='font-weight: bold;'>Total Fare (all inclusive)</td>");
                        sb.Append("<td>₹ " + TotalFare + "</td>");
                        sb.Append("</tr>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<p>PG Charges as applicable (Additional)</p>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("<td style='width: 10%;'>");
                        sb.Append("<table>");
                        sb.Append("<tbody style='width: 100%;'>");
                        sb.Append("<tr>");
                        sb.Append("<td><img width='200' src=" + QrCode + " alt=''></td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");


                        sb.Append("<tr><td><hr><table><tbody>");
                        sb.Append("<tr><td><p>PG Charges as applicable (Additional)</p></td></tr>");
                        sb.Append("<tr><td><h4 style='font - weight: bold; margin: 0; padding: 0; '>IRCTC Convenience Fee is charged per e-ticket irrespective of number of passengers on the ticket.</h4>");
                        sb.Append("<h4 style='font - weight: bold; margin - top:10px; padding: 0; '>* The printed Departure and Arrival Times are liable to change. Please Check correct departure, arrival from Railway Station Enquiry or Dial 139 or SMS RAIL to 139.");
                        sb.Append("</h4></td></tr></tbody></table><hr style='margin: 0; '></td></tr>");
                        sb.Append("<tr><td><table><tbody><tr><td><h4 style='margin: 0; padding: 0px; '><u>Agent Details:</u></h4>");
                        sb.Append("<p style='margin: 0; padding: 2px; '>Principal Agent Name: MobilePe </p><table style='width: 100 %; border - collapse: collapse; margin - top: 5px; '><tbody>");
                        sb.Append("<tr><td>Customer care Email: <span>support@mobilepe.co.in</span></td><td>Customer Care Contact: <span>0514-2568-00</span></td></tr></tbody></table>");
                        sb.Append("<hr><h4>* Prescribed original ID proof is required while travelling along with SMS/ VRM/ ERS otherwise will be treated as without ticket and penalized as per Railway Rules.");
                        sb.Append("</h4></td></tr></tbody></table></td></tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        //sb.Append("<table>");
                        //sb.Append("<tbody>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<h4 style='font-weight: bold;margin:0;padding: 0;'>IRCTC Convenience Fee is charged per e-ticket irrespective of number of passengers on the ticket.</h4>");
                        //sb.Append("<h4 style='font-weight: bold;margin-top:10px;padding: 0;'>* The printed Departure and Arrival Times are liable to change. Please Check correct departure, arrival from Railway Station Enquiry orDial 139 or SMS RAIL to 139.</h4>");
                        //sb.Append("<h4>No Linen will be provided in AC Economy (3E) class.</h4>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        //sb.Append("</tbody>");
                        //sb.Append("</table>");
                        sb.Append("<hr style='margin: 0;'>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<table>");
                        //sb.Append("<tbody>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<p>");
                        //sb.Append("<li>This ticket is booked on a personal User ID, its sale/purchase is an offence u/s 143 of the Railways Act,1989.</li>");
                        //sb.Append("<li>Prescribed original ID proof is required while travelling along with SMS/ VRM/ ERS otherwise will be treated as without ticket and penalized as per Railway Rules.</li>");
                        //sb.Append("</p>");
                        //sb.Append("</td>");
                        ////sb.Append("<tr>");
                        ////sb.Append("<td> <img width='700' src='https://uatapiv2.mobilepe.co.in/img/img.png' alt=''></td>");
                        ////sb.Append("</tr>");
                        //sb.Append("</tbody>");
                        //sb.Append("</table>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td><h4 style='margin:0;padding: 0px;'> Indian Railways GST Details:</h4></td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='width: 25%;'>Invoice Number:</td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse1.gstCharge.invoiceNumber + "</td>");
                        sb.Append("<td style='width: 25%;'>Address: </td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse1.gstCharge.suplierAddress + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td><h4 style='margin:0px;padding: 0px;'> Supplier Information:</h4></td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='width: 25%;'>SAC Code: </td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse1.gstCharge.sacCode + "</td>");
                        sb.Append("<td style='width: 25%;'>GSTIN: </td>");
                        sb.Append("<td style='width: 25%;'>" + printTicketResposnse1.gstCharge.gstinSuplier + "</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<p style='page-break-before: always;'></p>");
                        sb.Append("<br/>");
                        sb.Append("<br/>");
                        sb.Append("<table style='width:750px;margin:0px auto;font-size: 12px;font-family: Arial, Helvetica, sans-serif;border: 2px solid rgb(26, 26, 26);padding: 10px;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<h4><u>Recipient Information:</u></h4>");
                        sb.Append("<table style='width: 100%; border-collapse: collapse;margin-top: 5px;'>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 50%;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>GSTIN:</td>");
                        sb.Append("<td>N/A</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Name:</td>");
                        sb.Append("<td>N/A</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>Taxable Value: </td>");
                        sb.Append("<td>" + printTicketResposnse1.gstCharge.taxableAmt + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>CGST Rate:</td>");
                        sb.Append("<td>" + printTicketResposnse1.gstCharge.cgstRate + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>SGST/UGST Rate:</td>");
                        sb.Append("<td>" + printTicketResposnse1.gstCharge.sgstRate + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>IGST Rate:</td>");
                        sb.Append("<td>" + printTicketResposnse1.gstCharge.igstRate + "</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td style='font-weight: bold;'>Total Tax:</td>");
                        sb.Append("<td>" + printTicketResposnse1.totalCollectibleAmount + "</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("<td>");
                        sb.Append("<table style='width: 50%;'>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td>Address: </td>");
                        sb.Append("<td></td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>CGST Amount:</td>");
                        //sb.Append("<td>" + GST + "</td>");
                        sb.Append("<td>0</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>SGST/UGST Amount:</td>");
                        //sb.Append("<td>" + GST + "</td>");
                        sb.Append("<td>0</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>IGST Amount:</td>");
                        //sb.Append("<td>" + GST2 + "</td>");
                        sb.Append("<td>0</td>");
                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</table>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        sb.Append("<td>");
                        sb.Append("<table>");
                        sb.Append("<tbody>");
                        sb.Append("<tr>");
                        sb.Append("<td style='font-weight: bold;'>Place of Supply:</td>");
                        sb.Append("<td><b>State Name/Code of Supplier:</b> " + printTicketResposnse1.gstCharge.prsSuplierState + " / " + printTicketResposnse1.gstCharge.prsSuplierStateCode + "</td>");

                        sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</table>");
                        sb.Append("<hr>");
                        sb.Append("</td>");
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<h4><u>INSTRUCTIONS:</u></h4>");
                        //sb.Append("<p style='font-size: x-small;'>1. Prescribed Original ID proofs are:- Voter Identity Card / Passport / PAN Card / Driving License / Photo ID card issued by Central / State");
                        //sb.Append("Govt./ Public Sector Undertakings of State / Central Government ,District Administrations , Municipal bodies and Panchayat Administrations ");


                        //sb.Append("</td>");


                        sb.Append("<td>");
                        sb.Append("<h4><u>INSTRUCTIONS:</u></h4>");
                        sb.Append("<p style='font-size: x-small;'>");
                        sb.Append("1. Prescribed Original ID proofs are:- Voter Identity Card / Passport / PAN Card / Driving License / Photo ID card issued by Central / State");
                        sb.Append("Govt./ Public Sector Undertakings of State / Central Government ,District Administrations , Municipal bodies and Panchayat Administrations");
                        sb.Append("which are having serial number / Student Identity Card with photograph issued by recognized School or College for their students / Nationalized");
                        sb.Append("Bank Passbook with photograph /Credit Cards issued by Banks with laminated photograph/Unique Identification Card 'Aadhaar', m-Aadhaar, e-Aadhaar. /Passenger showing the Aadhaar/Driving Licence from the 'Issued Document' section by logging into his/her DigiLocker account");
                        sb.Append("considered as valid proof of identity. (Documents uploaded by the user i.e. the document in 'Uploaded Document' section will not be");
                        sb.Append("considered as a valid proof of identity).");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size: x-small;'>");
                        sb.Append("2. PNRs having fully waitlisted status will be dropped and automatic refund of the booking amount shall be credited to the account used for");
                        sb.Append("payment for booking of the ticket. Fully waitlisted e-ticket are not allowed to board the train. However, the names of PARTIALLY");
                        sb.Append("waitlisted/confirmed and RAC ticket passenger will appear in the chart and will be allowed to board the train.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size: x-small;'>3. Passengers travelling on a fully waitlisted e-ticket will be treated as Ticketless</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("4. Obtain certificate from the TTE /Conductor in case of (a) PARTIALLY waitlisted e-ticket when LESS NO. OF PASSENGERS travel, (b)A.C FAILURE,");
                        sb.Append("(c)TRAVEL IN LOWER CLASS. This original certificate must be sent to GGM (IT), IRCTC, Internet Ticketing Centre, IRCA Building, State Entry");
                        sb.Append("Road, New Delhi-110055 after filing TDR online within prescribed time for claiming refund.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("5. In case, on a party e-ticket or a family e-ticket issued for travel of more than one passenger, some passengers have confirmed reservation");
                        sb.Append("and others are on RAC or waiting list, full refund of fare, less clerkage, shall be admissible for confirmed passengers also subject to the");
                        sb.Append("condition that the ticket shall be cancelled online or online TDR shall be filed for all the passengers upto thirty minutes before the scheduled");
                        sb.Append("departure of the train.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("6. In case of train cancellation on its entire run, full refund is granted automatically by the system. However, if the train is cancelled partially");
                        sb.Append("on its run or diverted and not touching boarding/destination station, passengers are required to file online TDR within 72 hours of scheduled");
                        sb.Append("departure of the train from passengers boarding station.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("7. Never purchase e-ticket from unauthorized agents or persons using their personal IDs for commercial purposes. Such tickets are liable to");
                        sb.Append("be cancelled and forfeited without any refund of money, under section (143) of the Indian Railway Act 1989. List of authorized agents");
                        sb.Append("are available on www.irctc.com E-Ticket Agent Locator");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>8. For detail, Rules, Refund rules, Terms & Conditions of E-Ticketing services, Travel Insurance facility etc. Please visit <a href='#'>www.irctc.co.in</a></p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("9. While booking this ticket, you have agreed of having read the Health Protocol of Destination State of your travel. You are again advised to");
                        sb.Append("clearly read the Health Protocol advisory of destination state before start of your travel and follow them properly.");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>10. The FIR forms are available with on board ticket checking staff, train guard and train escorting RPF/GRP staff.</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("11. Variety of meals available in more than 1500 trains. For delivery of meal of your choice on your seat log on to www.ecatering.irctc.co.in or");
                        sb.Append("call 1323 Toll Free. For any suggestions/complaints related to Catering services, contact Toll Free No. 1800-111-321 (07.00 hrs to 22.00 hrs).");
                        sb.Append("</p>");
                        sb.Append("<p style='font-size:x-small;'>12. E-ticket cancellations are permitted through respective agent only. </p>");
                        sb.Append("<p style='font-size:x-small;'>13. Agent Service Charge for E-Ticket inclusive of tax <br> (non-refundable) Class &nbsp;&nbsp;&nbsp; Service Charge </p>");
                        sb.Append("<p style='font-size:x-small;'>Non-AC class &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rs.20/-</p>");
                        sb.Append("<p style='font-size:x-small;'>AC class including FC &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rs.40/-</p>");
                        sb.Append("<p style='font-size:x-small;'>14. National Consumer Helpline (NCH) Toll Free Number: 1800-11-400 or 14404</p>");
                        sb.Append("<p style='font-size:x-small;'>");
                        sb.Append("15. You can book unreserved ticket from UTS APP or ATVMs (Automatic Ticket Vending Machines) located in Railway Stations.");
                        sb.Append("Contact us on: - <a href=''>care@irctc.co.in</a> OR 24*7 Hrs Customer Support at 0755-6610661, 0755-4090600");
                        sb.Append("</p>");
                        sb.Append("</td>");


                        sb.Append("</tr>");
                        //sb.Append("<tr>");
                        //sb.Append("<td>");
                        //sb.Append("<img width='700' src='https://uatapiv2.mobilepe.co.in/img/img.png' alt=''>");
                        //sb.Append("</td>");
                        //sb.Append("</tr>");
                        sb.Append("</tbody>");
                        sb.Append("</body>");
                        sb.Append("</html>");
                    }

                }
                else
                {
                    commonResponse.response = "error";
                    commonResponse.message = responseText;
                }

                // HTML to be converted to PDF

                //HtmlToPdf ToPdf = new HtmlToPdf();
                //PdfDocument Document = ToPdf.ConvertHtmlString(sb.ToString());
                //byte[] pdf = Document.Save();
                //Document.Close();
                //return File(pdf, "application/pdf", "PrintTicket.pdf");

                var converter = new BasicConverter(new PdfTools());
                var doc = new HtmlToPdfDocument()
                {
                    GlobalSettings = {
                    ColorMode = ColorMode.Color,
                    Orientation = Orientation.Portrait,
                    //PaperSize = PaperKind.A4
                    PaperSize = DinkToPdf.PaperKind.A4,
                },
                        Objects = {
                    new ObjectSettings() {
                        HtmlContent = sb.ToString(),
                        WebSettings = { DefaultEncoding = "utf-8" },
                        PagesCount = true,
                        FooterSettings = { Center = "Page [page] of [toPage]" }
                    }
                }
                };
                byte[] pdf = converter.Convert(doc);
                return File(pdf, "application/pdf", "PrintTicket.pdf");

            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                sb.Append(ex.Message);

                //HtmlToPdf ToPdf = new HtmlToPdf();
                //PdfDocument Document = ToPdf.ConvertHtmlString(sb.ToString());
                //byte[] pdf = Document.Save();
                //Document.Close();
                //return File(pdf, "application/pdf", "PrintTicket.pdf");

                var converter = new BasicConverter(new PdfTools());
                var doc = new HtmlToPdfDocument()
                {
                    GlobalSettings = {
                    ColorMode = ColorMode.Color,
                    Orientation = Orientation.Portrait,
                    //PaperSize = PaperKind.A4
                    PaperSize = DinkToPdf.PaperKind.A4,
                },
                    Objects = {
                    new ObjectSettings() {
                        HtmlContent = sb.ToString(),
                        WebSettings = { DefaultEncoding = "utf-8" },
                        PagesCount = true,
                        FooterSettings = { Center = "Page [page] of [toPage]" }
                    }
                }
                };
                byte[] pdf = converter.Convert(doc);
                return File(pdf, "application/pdf", "PrintTicket.pdf");

            }
            return null;
        }


        [AllowAnonymous]
        [HttpGet("ResendEmailVerification")]
        public async Task<ResponseModel> ResendEmailVerification(string key)
        {
            string EncryptedText = "";
            ResponseModel returnResponse = new ResponseModel();
            CommonResponseDTO _objResponse = new CommonResponseDTO();
            List<AffiliateLinkDTO> objres = new List<AffiliateLinkDTO>();
            HelpRequest model = new HelpRequest();
            try
            {
                int MemberId = Convert.ToInt32(ApiEncrypt_Decrypt.DecryptString(AESKEY, key));
                CustomerInfoDTO _CustomerInfo = _dataRepositoryEcomm.GetMemberDetailByMemberId(MemberId).Result;
                key = _CustomerInfo.Email + "&" + _CustomerInfo.MemberId + "&" + DateTime.Now.ToString("ddMMyyyy");
                key = ApiEncrypt_Decrypt.EncryptString(AESKEY, key);
                string messgae = _emailTemplateService.AccountVerificationTemplate(_CustomerInfo.Name, key);
                var result = objsms.SendEmailV2(_CustomerInfo.Email, "Account verification", messgae, "Mohd Maqsood Khan");
                if (result != null && result.flag == 1)
                {
                    _objResponse.flag = 1;
                    _objResponse.response = "success";
                    _objResponse.message = "Verification Email has been sent to " + _CustomerInfo.Name + ".";
                }
                else
                {
                    _objResponse.flag = 0;
                    _objResponse.response = "error";
                    _objResponse.message = "Record Not Found";
                }
            }
            catch (Exception ex)
            {
                _logwrite.LogException(ex);
                _objResponse.flag = 0;
                _objResponse.response = "error";
                _objResponse.message = ex.Message;
            }
            string CustData = "";
            DataContractJsonSerializer js;
            MemoryStream ms;
            js = new DataContractJsonSerializer(typeof(CommonResponseDTO));
            ms = new MemoryStream();
            js.WriteObject(ms, _objResponse);
            ms.Position = 0;
            StreamReader sr = new StreamReader(ms);
            CustData = sr.ReadToEnd();
            sr.Close();
            ms.Close();
            EncryptedText = ApiEncrypt_Decrypt.EncryptString(AESKEY, CustData);
            returnResponse.Body = EncryptedText;
            return returnResponse;
        }

    }
}
